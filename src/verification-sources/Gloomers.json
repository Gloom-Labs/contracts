{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"Gloomers.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.25;\\n\\nimport {ERC721A} from \\\"./ERC721A.sol\\\";\\nimport {IERC721A} from \\\"./IERC721A.sol\\\";\\nimport {ERC721AQueryable} from \\\"./ERC721AQueryable.sol\\\";\\nimport {StartTokenIdHelper} from \\\"./StartTokenIdHelper.sol\\\";\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport {ERC2981} from \\\"@openzeppelin/contracts/token/common/ERC2981.sol\\\";\\n\\n/**\\n * @title Gloomers #3334 - #6666\\n * @author soko.eth | Gloom Labs | https://www.gloomtoken.com\\n * @dev ERC721A contract with presale, whitelist, and public minting periods.\\n * @notice Gloomers is a 10k PFP collection launched across Base, Solana, and Optimism with teleburning to Bitcoin\\n */\\ncontract Gloomers is\\n    StartTokenIdHelper,\\n    ERC721A,\\n    ERC721AQueryable,\\n    ERC2981,\\n    Ownable\\n{\\n    uint256 public constant START_TOKEN_ID = 3334;\\n    uint256 public constant END_TOKEN_ID = 6666;\\n    uint256 public constant PRICE_PER_TOKEN = 0.03 ether;\\n    uint256 public constant MAX_MINT_PER_WALLET = 3;\\n    bytes32 public constant PROVENANCE_HASH =\\n        0x5158cf3ac201d8d9dfe63ac7c7d1e7aa58b7c33426665c9bf643e0003e095e2f;\\n    uint256 public constant WHITELIST_START_TIMESTAMP = 1714838400; // Sat May 04 2024 16:00:00 GMT\\n    uint256 public constant PUBLIC_MINT_TIMESTAMP =\\n        WHITELIST_START_TIMESTAMP + 3 hours;\\n\\n    enum DropStatus {\\n        DISABLED,\\n        PRESALE,\\n        WHITELIST,\\n        PUBLIC\\n    }\\n\\n    DropStatus public dropStatus = DropStatus.DISABLED;\\n\\n    mapping(address => uint256) private _mintedPerWallet;\\n    mapping(address => uint256) private _presaleAllocationsByWallet;\\n    mapping(uint256 => address) private _presaleWalletsById;\\n    uint256 private _presalesCount;\\n    uint256 private _presaleSupplyOffset;\\n    bytes32 private gloomerHash;\\n\\n    bool private revealed = false;\\n    string private _baseTokenURI =\\n        \\\"https://ipfs.gloomtoken.xyz/ipfs/bafybeidnrgagzrjvavrsjtnz6qhqvnlbkz3vh5q35gfgkj236ylsxwpmsy\\\";\\n\\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\\n    event GloomersMint(address indexed _to, uint256 _quantity);\\n    event MintWhitelist(address indexed _to, uint256 _quantity);\\n    event RegisterPresale(address indexed _to, uint256 _quantity);\\n    event ClaimPresale(address indexed _to, uint256 _quantity);\\n    event NewDropStatus(DropStatus _dropStatus);\\n\\n    error MintingDisabled();\\n    error PublicMintNotActive();\\n    error WhitelistNotActive();\\n    error PresaleNotActive();\\n    error ClaimNotActive();\\n    error NotEligible();\\n    error ExceedsMaxMintPerWallet();\\n    error ExceedsMaxSupply();\\n    error InsufficientFunds();\\n    error NonEOACaller();\\n\\n    modifier dropEnabled() {\\n        if (dropStatus == DropStatus.DISABLED) {\\n            revert MintingDisabled();\\n        }\\n        _;\\n    }\\n\\n    modifier presaleActive() {\\n        if (block.timestamp > WHITELIST_START_TIMESTAMP) {\\n            revert PresaleNotActive();\\n        }\\n        _;\\n    }\\n\\n    modifier whitelistActive() {\\n        if (\\n            block.timestamp < WHITELIST_START_TIMESTAMP ||\\n            block.timestamp > PUBLIC_MINT_TIMESTAMP\\n        ) {\\n            revert WhitelistNotActive();\\n        }\\n        _;\\n    }\\n\\n    modifier publicMintActive() {\\n        if (block.timestamp < PUBLIC_MINT_TIMESTAMP) {\\n            revert PublicMintNotActive();\\n        }\\n        _;\\n    }\\n\\n    modifier claimEnabled() {\\n        if (block.timestamp < WHITELIST_START_TIMESTAMP) {\\n            revert ClaimNotActive();\\n        }\\n        _;\\n    }\\n\\n    modifier eligibleForClaim() {\\n        if (_presaleAllocationsByWallet[msg.sender] == 0) {\\n            revert NotEligible();\\n        }\\n        _;\\n    }\\n\\n    modifier supplyIsAvailable(uint256 quantity) {\\n        if (\\n            quantity + _nextTokenId() - 1 > END_TOKEN_ID - _presaleSupplyOffset\\n        ) {\\n            revert ExceedsMaxSupply();\\n        }\\n        _;\\n    }\\n\\n    modifier fundsAttached(uint256 quantity) {\\n        if (msg.value < PRICE_PER_TOKEN * quantity) {\\n            revert InsufficientFunds();\\n        }\\n        _;\\n    }\\n\\n    modifier obeysWalletLimit(uint256 quantity) {\\n        if (\\n            _mintedPerWallet[msg.sender] +\\n                _presaleAllocationsByWallet[msg.sender] +\\n                quantity >\\n            MAX_MINT_PER_WALLET &&\\n            msg.sender != owner()\\n        ) {\\n            revert ExceedsMaxMintPerWallet();\\n        }\\n        _;\\n    }\\n\\n    modifier gloomin(bytes32 gloomerHash_) {\\n        if (gloomerHash != gloomerHash_) {\\n            revert NotEligible();\\n        }\\n        _;\\n    }\\n\\n    modifier onlyEOA() {\\n        if (tx.origin != msg.sender) {\\n            revert NonEOACaller();\\n        }\\n        _;\\n    }\\n\\n    constructor()\\n        StartTokenIdHelper(START_TOKEN_ID)\\n        ERC721A(\\\"Gloomers\\\", \\\"GLOOMERS\\\")\\n        Ownable(msg.sender)\\n    {\\n        _setDefaultRoyalty(msg.sender, 500);\\n    }\\n\\n    function mint(\\n        uint256 quantity\\n    )\\n        external\\n        payable\\n        dropEnabled\\n        publicMintActive\\n        fundsAttached(quantity)\\n        obeysWalletLimit(quantity)\\n        supplyIsAvailable(quantity)\\n        onlyEOA\\n    {\\n        _mintedPerWallet[msg.sender] += quantity;\\n        _mint(msg.sender, quantity);\\n\\n        emit GloomersMint(msg.sender, quantity);\\n    }\\n\\n    function mintWhitelist(\\n        uint256 quantity,\\n        bytes32 gloomerHash_\\n    )\\n        external\\n        payable\\n        dropEnabled\\n        whitelistActive\\n        fundsAttached(quantity)\\n        obeysWalletLimit(quantity)\\n        supplyIsAvailable(quantity)\\n        gloomin(gloomerHash_)\\n        onlyEOA\\n    {\\n        if (gloomerHash != gloomerHash_) {\\n            revert NotEligible();\\n        }\\n        _mintedPerWallet[msg.sender] += quantity;\\n        _mint(msg.sender, quantity);\\n\\n        emit MintWhitelist(msg.sender, quantity);\\n        (msg.sender, quantity);\\n    }\\n\\n    function registerPresale(\\n        uint256 quantity,\\n        bytes32 gloomerHash_\\n    )\\n        external\\n        payable\\n        dropEnabled\\n        presaleActive\\n        fundsAttached(quantity)\\n        obeysWalletLimit(quantity)\\n        supplyIsAvailable(quantity)\\n        gloomin(gloomerHash_)\\n        onlyEOA\\n    {\\n        ++_presalesCount;\\n        _presaleSupplyOffset += quantity;\\n        _presaleAllocationsByWallet[msg.sender] = quantity;\\n        _presaleWalletsById[_presalesCount] = msg.sender;\\n\\n        emit RegisterPresale(msg.sender, quantity);\\n        (msg.sender, quantity);\\n    }\\n\\n    function claimPresale()\\n        external\\n        dropEnabled\\n        claimEnabled\\n        eligibleForClaim\\n        obeysWalletLimit(_presaleAllocationsByWallet[msg.sender])\\n        onlyEOA\\n    {\\n        uint256 quantity = _presaleAllocationsByWallet[msg.sender];\\n        _mintedPerWallet[msg.sender] += quantity;\\n        _presaleAllocationsByWallet[msg.sender] = 0;\\n        _presaleSupplyOffset -= quantity;\\n        _mint(msg.sender, quantity);\\n\\n        emit GloomersMint(msg.sender, quantity);\\n    }\\n\\n    function getPresaleAllocation(\\n        address wallet\\n    ) public view returns (uint256) {\\n        return _presaleAllocationsByWallet[wallet];\\n    }\\n\\n    function _startTokenId() internal view override returns (uint256) {\\n        return startTokenId();\\n    }\\n\\n    function _baseURI()\\n        internal\\n        view\\n        override(ERC721A)\\n        returns (string memory)\\n    {\\n        return _baseTokenURI;\\n    }\\n\\n    function tokenURI(\\n        uint256 tokenId\\n    ) public view override(IERC721A, ERC721A) returns (string memory) {\\n        if (!revealed) {\\n            return _baseURI();\\n        }\\n        if (!_exists(tokenId)) {\\n            revert URIQueryForNonexistentToken();\\n        }\\n        string memory baseURI = _baseURI();\\n        string memory metadataPointerId = !revealed ? \\\"\\\" : _toString(tokenId);\\n        string memory result = string(\\n            abi.encodePacked(baseURI, metadataPointerId)\\n        );\\n        return bytes(baseURI).length != 0 ? result : \\\"\\\";\\n    }\\n\\n    function setTokenUri(string calldata baseTokenURI_) external onlyOwner {\\n        revealed = true;\\n        _baseTokenURI = baseTokenURI_;\\n        emit BatchMetadataUpdate(_startTokenId(), (type(uint256).max));\\n    }\\n\\n    function setDefaultRoyalty(\\n        address receiver,\\n        uint96 feeNumerator\\n    ) public onlyOwner {\\n        _setDefaultRoyalty(receiver, feeNumerator);\\n    }\\n\\n    function setDropStatus(DropStatus newDropStatus) public onlyOwner {\\n        dropStatus = newDropStatus;\\n        emit NewDropStatus(newDropStatus);\\n    }\\n\\n    function setGloomerHash(bytes32 gloomerHash_) public onlyOwner {\\n        gloomerHash = gloomerHash_;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        payable(msg.sender).transfer(address(this).balance);\\n    }\\n\\n    fallback() external payable {}\\n\\n    receive() external payable {}\\n\\n    function supportsInterface(\\n        bytes4 interfaceId\\n    ) public view virtual override(IERC721A, ERC721A, ERC2981) returns (bool) {\\n        return\\n            ERC721A.supportsInterface(interfaceId) ||\\n            ERC2981.supportsInterface(interfaceId);\\n    }\\n}\\n\"},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/common/ERC2981.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC2981} from \\\"../../interfaces/IERC2981.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\\n *\\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\\n *\\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\\n * fee is specified in basis points by default.\\n *\\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\\n */\\nabstract contract ERC2981 is IERC2981, ERC165 {\\n    struct RoyaltyInfo {\\n        address receiver;\\n        uint96 royaltyFraction;\\n    }\\n\\n    RoyaltyInfo private _defaultRoyaltyInfo;\\n    mapping(uint256 tokenId => RoyaltyInfo) private _tokenRoyaltyInfo;\\n\\n    /**\\n     * @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1).\\n     */\\n    error ERC2981InvalidDefaultRoyalty(uint256 numerator, uint256 denominator);\\n\\n    /**\\n     * @dev The default royalty receiver is invalid.\\n     */\\n    error ERC2981InvalidDefaultRoyaltyReceiver(address receiver);\\n\\n    /**\\n     * @dev The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\\n     */\\n    error ERC2981InvalidTokenRoyalty(uint256 tokenId, uint256 numerator, uint256 denominator);\\n\\n    /**\\n     * @dev The royalty receiver for `tokenId` is invalid.\\n     */\\n    error ERC2981InvalidTokenRoyaltyReceiver(uint256 tokenId, address receiver);\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @inheritdoc IERC2981\\n     */\\n    function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual returns (address, uint256) {\\n        RoyaltyInfo memory royalty = _tokenRoyaltyInfo[tokenId];\\n\\n        if (royalty.receiver == address(0)) {\\n            royalty = _defaultRoyaltyInfo;\\n        }\\n\\n        uint256 royaltyAmount = (salePrice * royalty.royaltyFraction) / _feeDenominator();\\n\\n        return (royalty.receiver, royaltyAmount);\\n    }\\n\\n    /**\\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\\n     * override.\\n     */\\n    function _feeDenominator() internal pure virtual returns (uint96) {\\n        return 10000;\\n    }\\n\\n    /**\\n     * @dev Sets the royalty information that all ids in this contract will default to.\\n     *\\n     * Requirements:\\n     *\\n     * - `receiver` cannot be the zero address.\\n     * - `feeNumerator` cannot be greater than the fee denominator.\\n     */\\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\\n        uint256 denominator = _feeDenominator();\\n        if (feeNumerator > denominator) {\\n            // Royalty fee will exceed the sale price\\n            revert ERC2981InvalidDefaultRoyalty(feeNumerator, denominator);\\n        }\\n        if (receiver == address(0)) {\\n            revert ERC2981InvalidDefaultRoyaltyReceiver(address(0));\\n        }\\n\\n        _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\\n    }\\n\\n    /**\\n     * @dev Removes default royalty information.\\n     */\\n    function _deleteDefaultRoyalty() internal virtual {\\n        delete _defaultRoyaltyInfo;\\n    }\\n\\n    /**\\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\\n     *\\n     * Requirements:\\n     *\\n     * - `receiver` cannot be the zero address.\\n     * - `feeNumerator` cannot be greater than the fee denominator.\\n     */\\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\\n        uint256 denominator = _feeDenominator();\\n        if (feeNumerator > denominator) {\\n            // Royalty fee will exceed the sale price\\n            revert ERC2981InvalidTokenRoyalty(tokenId, feeNumerator, denominator);\\n        }\\n        if (receiver == address(0)) {\\n            revert ERC2981InvalidTokenRoyaltyReceiver(tokenId, address(0));\\n        }\\n\\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\\n    }\\n\\n    /**\\n     * @dev Resets royalty information for the token id back to the global default.\\n     */\\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\\n        delete _tokenRoyaltyInfo[tokenId];\\n    }\\n}\\n\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"},\"StartTokenIdHelper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// ERC721A Contracts v4.3.0\\n// Creators: Chiru Labs\\n\\npragma solidity 0.8.25;\\n\\n/**\\n * This Helper is used to return a dynamic value in the overridden _startTokenId() function.\\n * Extending this Helper before the ERC721A contract give us access to the herein set `startTokenId`\\n * to be returned by the overridden `_startTokenId()` function of ERC721A in the ERC721AStartTokenId mocks.\\n */\\ncontract StartTokenIdHelper {\\n    // `bytes4(keccak256('startTokenId'))`.\\n    uint256 private constant _START_TOKEN_ID_STORAGE_SLOT = 0x28f75032;\\n\\n    constructor(uint256 startTokenId_) {\\n        _initializeStartTokenId(startTokenId_);\\n    }\\n\\n    function startTokenId() public view returns (uint256 result) {\\n        assembly {\\n            result := sload(_START_TOKEN_ID_STORAGE_SLOT)\\n        }\\n    }\\n\\n    function _initializeStartTokenId(uint256 value) private {\\n        // We use assembly to directly set the `startTokenId` in storage so that\\n        // inheriting this class won't affect the layout of other storage slots.\\n        assembly {\\n            sstore(_START_TOKEN_ID_STORAGE_SLOT, value)\\n        }\\n    }\\n}\\n\"},\"ERC721AQueryable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// ERC721A Contracts v4.3.0\\n// Creator: Chiru Labs\\n\\npragma solidity ^0.8.4;\\n\\nimport './IERC721AQueryable.sol';\\nimport '../ERC721A.sol';\\n\\n/**\\n * @title ERC721AQueryable.\\n *\\n * @dev ERC721A subclass with convenience query functions.\\n */\\nabstract contract ERC721AQueryable is ERC721A, IERC721AQueryable {\\n    /**\\n     * @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\\n     *\\n     * If the `tokenId` is out of bounds:\\n     *\\n     * - `addr = address(0)`\\n     * - `startTimestamp = 0`\\n     * - `burned = false`\\n     * - `extraData = 0`\\n     *\\n     * If the `tokenId` is burned:\\n     *\\n     * - `addr = <Address of owner before token was burned>`\\n     * - `startTimestamp = <Timestamp when token was burned>`\\n     * - `burned = true`\\n     * - `extraData = <Extra data when token was burned>`\\n     *\\n     * Otherwise:\\n     *\\n     * - `addr = <Address of owner>`\\n     * - `startTimestamp = <Timestamp of start of ownership>`\\n     * - `burned = false`\\n     * - `extraData = <Extra data at start of ownership>`\\n     */\\n    function explicitOwnershipOf(uint256 tokenId)\\n        public\\n        view\\n        virtual\\n        override\\n        returns (TokenOwnership memory ownership)\\n    {\\n        unchecked {\\n            if (tokenId >= _startTokenId()) {\\n                if (tokenId > _sequentialUpTo()) return _ownershipAt(tokenId);\\n\\n                if (tokenId < _nextTokenId()) {\\n                    // If the `tokenId` is within bounds,\\n                    // scan backwards for the initialized ownership slot.\\n                    while (!_ownershipIsInitialized(tokenId)) --tokenId;\\n                    return _ownershipAt(tokenId);\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\\n     * See {ERC721AQueryable-explicitOwnershipOf}\\n     */\\n    function explicitOwnershipsOf(uint256[] calldata tokenIds)\\n        external\\n        view\\n        virtual\\n        override\\n        returns (TokenOwnership[] memory)\\n    {\\n        TokenOwnership[] memory ownerships;\\n        uint256 i = tokenIds.length;\\n        assembly {\\n            // Grab the free memory pointer.\\n            ownerships := mload(0x40)\\n            // Store the length.\\n            mstore(ownerships, i)\\n            // Allocate one word for the length,\\n            // `tokenIds.length` words for the pointers.\\n            i := shl(5, i) // Multiply `i` by 32.\\n            mstore(0x40, add(add(ownerships, 0x20), i))\\n        }\\n        while (i != 0) {\\n            uint256 tokenId;\\n            assembly {\\n                i := sub(i, 0x20)\\n                tokenId := calldataload(add(tokenIds.offset, i))\\n            }\\n            TokenOwnership memory ownership = explicitOwnershipOf(tokenId);\\n            assembly {\\n                // Store the pointer of `ownership` in the `ownerships` array.\\n                mstore(add(add(ownerships, 0x20), i), ownership)\\n            }\\n        }\\n        return ownerships;\\n    }\\n\\n    /**\\n     * @dev Returns an array of token IDs owned by `owner`,\\n     * in the range [`start`, `stop`)\\n     * (i.e. `start <= tokenId < stop`).\\n     *\\n     * This function allows for tokens to be queried if the collection\\n     * grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\\n     *\\n     * Requirements:\\n     *\\n     * - `start < stop`\\n     */\\n    function tokensOfOwnerIn(\\n        address owner,\\n        uint256 start,\\n        uint256 stop\\n    ) external view virtual override returns (uint256[] memory) {\\n        return _tokensOfOwnerIn(owner, start, stop);\\n    }\\n\\n    /**\\n     * @dev Returns an array of token IDs owned by `owner`.\\n     *\\n     * This function scans the ownership mapping and is O(`totalSupply`) in complexity.\\n     * It is meant to be called off-chain.\\n     *\\n     * See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\\n     * multiple smaller scans if the collection is large enough to cause\\n     * an out-of-gas error (10K collections should be fine).\\n     */\\n    function tokensOfOwner(address owner) external view virtual override returns (uint256[] memory) {\\n        // If spot mints are enabled, full-range scan is disabled.\\n        if (_sequentialUpTo() != type(uint256).max) _revert(NotCompatibleWithSpotMints.selector);\\n        uint256 start = _startTokenId();\\n        uint256 stop = _nextTokenId();\\n        uint256[] memory tokenIds;\\n        if (start != stop) tokenIds = _tokensOfOwnerIn(owner, start, stop);\\n        return tokenIds;\\n    }\\n\\n    /**\\n     * @dev Helper function for returning an array of token IDs owned by `owner`.\\n     *\\n     * Note that this function is optimized for smaller bytecode size over runtime gas,\\n     * since it is meant to be called off-chain.\\n     */\\n    function _tokensOfOwnerIn(\\n        address owner,\\n        uint256 start,\\n        uint256 stop\\n    ) private view returns (uint256[] memory tokenIds) {\\n        unchecked {\\n            if (start >= stop) _revert(InvalidQueryRange.selector);\\n            // Set `start = max(start, _startTokenId())`.\\n            if (start < _startTokenId()) start = _startTokenId();\\n            uint256 nextTokenId = _nextTokenId();\\n            // If spot mints are enabled, scan all the way until the specified `stop`.\\n            uint256 stopLimit = _sequentialUpTo() != type(uint256).max ? stop : nextTokenId;\\n            // Set `stop = min(stop, stopLimit)`.\\n            if (stop >= stopLimit) stop = stopLimit;\\n            // Number of tokens to scan.\\n            uint256 tokenIdsMaxLength = balanceOf(owner);\\n            // Set `tokenIdsMaxLength` to zero if the range contains no tokens.\\n            if (start >= stop) tokenIdsMaxLength = 0;\\n            // If there are one or more tokens to scan.\\n            if (tokenIdsMaxLength != 0) {\\n                // Set `tokenIdsMaxLength = min(balanceOf(owner), tokenIdsMaxLength)`.\\n                if (stop - start <= tokenIdsMaxLength) tokenIdsMaxLength = stop - start;\\n                uint256 m; // Start of available memory.\\n                assembly {\\n                    // Grab the free memory pointer.\\n                    tokenIds := mload(0x40)\\n                    // Allocate one word for the length, and `tokenIdsMaxLength` words\\n                    // for the data. `shl(5, x)` is equivalent to `mul(32, x)`.\\n                    m := add(tokenIds, shl(5, add(tokenIdsMaxLength, 1)))\\n                    mstore(0x40, m)\\n                }\\n                // We need to call `explicitOwnershipOf(start)`,\\n                // because the slot at `start` may not be initialized.\\n                TokenOwnership memory ownership = explicitOwnershipOf(start);\\n                address currOwnershipAddr;\\n                // If the starting slot exists (i.e. not burned),\\n                // initialize `currOwnershipAddr`.\\n                // `ownership.address` will not be zero,\\n                // as `start` is clamped to the valid token ID range.\\n                if (!ownership.burned) currOwnershipAddr = ownership.addr;\\n                uint256 tokenIdsIdx;\\n                // Use a do-while, which is slightly more efficient for this case,\\n                // as the array will at least contain one element.\\n                do {\\n                    if (_sequentialUpTo() != type(uint256).max) {\\n                        // Skip the remaining unused sequential slots.\\n                        if (start == nextTokenId) start = _sequentialUpTo() + 1;\\n                        // Reset `currOwnershipAddr`, as each spot-minted token is a batch of one.\\n                        if (start > _sequentialUpTo()) currOwnershipAddr = address(0);\\n                    }\\n                    ownership = _ownershipAt(start); // This implicitly allocates memory.\\n                    assembly {\\n                        switch mload(add(ownership, 0x40))\\n                        // if `ownership.burned == false`.\\n                        case 0 {\\n                            // if `ownership.addr != address(0)`.\\n                            // The `addr` already has it's upper 96 bits clearned,\\n                            // since it is written to memory with regular Solidity.\\n                            if mload(ownership) {\\n                                currOwnershipAddr := mload(ownership)\\n                            }\\n                            // if `currOwnershipAddr == owner`.\\n                            // The `shl(96, x)` is to make the comparison agnostic to any\\n                            // dirty upper 96 bits in `owner`.\\n                            if iszero(shl(96, xor(currOwnershipAddr, owner))) {\\n                                tokenIdsIdx := add(tokenIdsIdx, 1)\\n                                mstore(add(tokenIds, shl(5, tokenIdsIdx)), start)\\n                            }\\n                        }\\n                        // Otherwise, reset `currOwnershipAddr`.\\n                        // This handles the case of batch burned tokens\\n                        // (burned bit of first slot set, remaining slots left uninitialized).\\n                        default {\\n                            currOwnershipAddr := 0\\n                        }\\n                        start := add(start, 1)\\n                        // Free temporary memory implicitly allocated for ownership\\n                        // to avoid quadratic memory expansion costs.\\n                        mstore(0x40, m)\\n                    }\\n                } while (!(start == stop || tokenIdsIdx == tokenIdsMaxLength));\\n                // Store the length of the array.\\n                assembly {\\n                    mstore(tokenIds, tokenIdsIdx)\\n                }\\n            }\\n        }\\n    }\\n}\\n\"},\"IERC721A.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// ERC721A Contracts v4.3.0\\n// Creator: Chiru Labs\\n\\npragma solidity ^0.8.4;\\n\\n/**\\n * @dev Interface of ERC721A.\\n */\\ninterface IERC721A {\\n    /**\\n     * The caller must own the token or be an approved operator.\\n     */\\n    error ApprovalCallerNotOwnerNorApproved();\\n\\n    /**\\n     * The token does not exist.\\n     */\\n    error ApprovalQueryForNonexistentToken();\\n\\n    /**\\n     * Cannot query the balance for the zero address.\\n     */\\n    error BalanceQueryForZeroAddress();\\n\\n    /**\\n     * Cannot mint to the zero address.\\n     */\\n    error MintToZeroAddress();\\n\\n    /**\\n     * The quantity of tokens minted must be more than zero.\\n     */\\n    error MintZeroQuantity();\\n\\n    /**\\n     * The token does not exist.\\n     */\\n    error OwnerQueryForNonexistentToken();\\n\\n    /**\\n     * The caller must own the token or be an approved operator.\\n     */\\n    error TransferCallerNotOwnerNorApproved();\\n\\n    /**\\n     * The token must be owned by `from`.\\n     */\\n    error TransferFromIncorrectOwner();\\n\\n    /**\\n     * Cannot safely transfer to a contract that does not implement the\\n     * ERC721Receiver interface.\\n     */\\n    error TransferToNonERC721ReceiverImplementer();\\n\\n    /**\\n     * Cannot transfer to the zero address.\\n     */\\n    error TransferToZeroAddress();\\n\\n    /**\\n     * The token does not exist.\\n     */\\n    error URIQueryForNonexistentToken();\\n\\n    /**\\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\\n     */\\n    error MintERC2309QuantityExceedsLimit();\\n\\n    /**\\n     * The `extraData` cannot be set on an unintialized ownership slot.\\n     */\\n    error OwnershipNotInitializedForExtraData();\\n\\n    /**\\n     * `_sequentialUpTo()` must be greater than `_startTokenId()`.\\n     */\\n    error SequentialUpToTooSmall();\\n\\n    /**\\n     * The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\\n     */\\n    error SequentialMintExceedsLimit();\\n\\n    /**\\n     * Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\\n     */\\n    error SpotMintTokenIdTooSmall();\\n\\n    /**\\n     * Cannot mint over a token that already exists.\\n     */\\n    error TokenAlreadyExists();\\n\\n    /**\\n     * The feature is not compatible with spot mints.\\n     */\\n    error NotCompatibleWithSpotMints();\\n\\n    // =============================================================\\n    //                            STRUCTS\\n    // =============================================================\\n\\n    struct TokenOwnership {\\n        // The address of the owner.\\n        address addr;\\n        // Stores the start time of ownership with minimal overhead for tokenomics.\\n        uint64 startTimestamp;\\n        // Whether the token has been burned.\\n        bool burned;\\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\\n        uint24 extraData;\\n    }\\n\\n    // =============================================================\\n    //                         TOKEN COUNTERS\\n    // =============================================================\\n\\n    /**\\n     * @dev Returns the total number of tokens in existence.\\n     * Burned tokens will reduce the count.\\n     * To get the total number of tokens minted, please see {_totalMinted}.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    // =============================================================\\n    //                            IERC165\\n    // =============================================================\\n\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n\\n    // =============================================================\\n    //                            IERC721\\n    // =============================================================\\n\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables\\n     * (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in `owner`'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\\n     * checking first that contract recipients are aware of the ERC721 protocol\\n     * to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move\\n     * this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement\\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external payable;\\n\\n    /**\\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external payable;\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\\n     * whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token\\n     * by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external payable;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the\\n     * zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external payable;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom}\\n     * for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    // =============================================================\\n    //                        IERC721Metadata\\n    // =============================================================\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n\\n    // =============================================================\\n    //                           IERC2309\\n    // =============================================================\\n\\n    /**\\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\\n     * (inclusive) is transferred from `from` to `to`, as defined in the\\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\\n     *\\n     * See {_mintERC2309} for more details.\\n     */\\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\\n}\\n\"},\"ERC721A.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// ERC721A Contracts v4.3.0\\n// Creator: Chiru Labs\\n\\npragma solidity ^0.8.4;\\n\\nimport \\\"./IERC721A.sol\\\";\\n\\n/**\\n * @dev Interface of ERC721 token receiver.\\n */\\ninterface ERC721A__IERC721Receiver {\\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data)\\n        external\\n        returns (bytes4);\\n}\\n\\n/**\\n * @title ERC721A\\n *\\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\\n * Non-Fungible Token Standard, including the Metadata extension.\\n * Optimized for lower gas during batch mints.\\n *\\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\\n * starting from `_startTokenId()`.\\n *\\n * The `_sequentialUpTo()` function can be overriden to enable spot mints\\n * (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`.\\n *\\n * Assumptions:\\n *\\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\\n */\\ncontract ERC721A is IERC721A {\\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\\n    struct TokenApprovalRef {\\n        address value;\\n    }\\n\\n    // =============================================================\\n    //                           CONSTANTS\\n    // =============================================================\\n\\n    // Mask of an entry in packed address data.\\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\\n\\n    // The bit position of `numberMinted` in packed address data.\\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\\n\\n    // The bit position of `numberBurned` in packed address data.\\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\\n\\n    // The bit position of `aux` in packed address data.\\n    uint256 private constant _BITPOS_AUX = 192;\\n\\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\\n\\n    // The bit position of `startTimestamp` in packed ownership.\\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\\n\\n    // The bit mask of the `burned` bit in packed ownership.\\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\\n\\n    // The bit position of the `nextInitialized` bit in packed ownership.\\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\\n\\n    // The bit mask of the `nextInitialized` bit in packed ownership.\\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\\n\\n    // The bit position of `extraData` in packed ownership.\\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\\n\\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\\n\\n    // The mask of the lower 160 bits for addresses.\\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\\n\\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\\n    // This limit is to prevent overflows on the address data entries.\\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\\n    // is required to cause an overflow, which is unrealistic.\\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\\n\\n    // The `Transfer` event signature is given by:\\n    // `keccak256(bytes(\\\"Transfer(address,address,uint256)\\\"))`.\\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\\n\\n    // =============================================================\\n    //                            STORAGE\\n    // =============================================================\\n\\n    // The next token ID to be minted.\\n    uint256 private _currentIndex;\\n\\n    // The number of tokens burned.\\n    uint256 private _burnCounter;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to ownership details\\n    // An empty struct value does not necessarily mean the token is unowned.\\n    // See {_packedOwnershipOf} implementation for details.\\n    //\\n    // Bits Layout:\\n    // - [0..159]   `addr`\\n    // - [160..223] `startTimestamp`\\n    // - [224]      `burned`\\n    // - [225]      `nextInitialized`\\n    // - [232..255] `extraData`\\n    mapping(uint256 => uint256) private _packedOwnerships;\\n\\n    // Mapping owner address to address data.\\n    //\\n    // Bits Layout:\\n    // - [0..63]    `balance`\\n    // - [64..127]  `numberMinted`\\n    // - [128..191] `numberBurned`\\n    // - [192..255] `aux`\\n    mapping(address => uint256) private _packedAddressData;\\n\\n    // Mapping from token ID to approved address.\\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    // The amount of tokens minted above `_sequentialUpTo()`.\\n    // We call these spot mints (i.e. non-sequential mints).\\n    uint256 private _spotMinted;\\n\\n    // =============================================================\\n    //                          CONSTRUCTOR\\n    // =============================================================\\n\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _currentIndex = _startTokenId();\\n\\n        if (_sequentialUpTo() < _startTokenId()) _revert(SequentialUpToTooSmall.selector);\\n    }\\n\\n    // =============================================================\\n    //                   TOKEN COUNTING OPERATIONS\\n    // =============================================================\\n\\n    /**\\n     * @dev Returns the starting token ID for sequential mints.\\n     *\\n     * Override this function to change the starting token ID for sequential mints.\\n     *\\n     * Note: The value returned must never change after any tokens have been minted.\\n     */\\n    function _startTokenId() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev Returns the maximum token ID (inclusive) for sequential mints.\\n     *\\n     * Override this function to return a value less than 2**256 - 1,\\n     * but greater than `_startTokenId()`, to enable spot (non-sequential) mints.\\n     *\\n     * Note: The value returned must never change after any tokens have been minted.\\n     */\\n    function _sequentialUpTo() internal view virtual returns (uint256) {\\n        return type(uint256).max;\\n    }\\n\\n    /**\\n     * @dev Returns the next token ID to be minted.\\n     */\\n    function _nextTokenId() internal view virtual returns (uint256) {\\n        return _currentIndex;\\n    }\\n\\n    /**\\n     * @dev Returns the total number of tokens in existence.\\n     * Burned tokens will reduce the count.\\n     * To get the total number of tokens minted, please see {_totalMinted}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256 result) {\\n        // Counter underflow is impossible as `_burnCounter` cannot be incremented\\n        // more than `_currentIndex + _spotMinted - _startTokenId()` times.\\n        unchecked {\\n            // With spot minting, the intermediate `result` can be temporarily negative,\\n            // and the computation must be unchecked.\\n            result = _currentIndex - _burnCounter - _startTokenId();\\n            if (_sequentialUpTo() != type(uint256).max) result += _spotMinted;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the total amount of tokens minted in the contract.\\n     */\\n    function _totalMinted() internal view virtual returns (uint256 result) {\\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\\n        // and it is initialized to `_startTokenId()`.\\n        unchecked {\\n            result = _currentIndex - _startTokenId();\\n            if (_sequentialUpTo() != type(uint256).max) result += _spotMinted;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the total number of tokens burned.\\n     */\\n    function _totalBurned() internal view virtual returns (uint256) {\\n        return _burnCounter;\\n    }\\n\\n    /**\\n     * @dev Returns the total number of tokens that are spot-minted.\\n     */\\n    function _totalSpotMinted() internal view virtual returns (uint256) {\\n        return _spotMinted;\\n    }\\n\\n    // =============================================================\\n    //                    ADDRESS DATA OPERATIONS\\n    // =============================================================\\n\\n    /**\\n     * @dev Returns the number of tokens in `owner`'s account.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\\n    }\\n\\n    /**\\n     * Returns the number of tokens minted by `owner`.\\n     */\\n    function _numberMinted(address owner) internal view returns (uint256) {\\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\\n    }\\n\\n    /**\\n     * Returns the number of tokens burned by or on behalf of `owner`.\\n     */\\n    function _numberBurned(address owner) internal view returns (uint256) {\\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\\n    }\\n\\n    /**\\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\\n     */\\n    function _getAux(address owner) internal view returns (uint64) {\\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\\n    }\\n\\n    /**\\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\\n     * If there are multiple variables, please pack them into a uint64.\\n     */\\n    function _setAux(address owner, uint64 aux) internal virtual {\\n        uint256 packed = _packedAddressData[owner];\\n        uint256 auxCasted;\\n        // Cast `aux` with assembly to avoid redundant masking.\\n        assembly {\\n            auxCasted := aux\\n        }\\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\\n        _packedAddressData[owner] = packed;\\n    }\\n\\n    // =============================================================\\n    //                            IERC165\\n    // =============================================================\\n\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        // The interface IDs are constants representing the first 4 bytes\\n        // of the XOR of all function selectors in the interface.\\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\\n        return interfaceId == 0x01ffc9a7 // ERC165 interface ID for ERC165.\\n            || interfaceId == 0x80ac58cd // ERC165 interface ID for ERC721.\\n            || interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\\n    }\\n\\n    // =============================================================\\n    //                        IERC721Metadata\\n    // =============================================================\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, it can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    // =============================================================\\n    //                     OWNERSHIPS OPERATIONS\\n    // =============================================================\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        return address(uint160(_packedOwnershipOf(tokenId)));\\n    }\\n\\n    /**\\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\\n     * It gradually moves to O(1) as tokens get transferred around over time.\\n     */\\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\\n    }\\n\\n    /**\\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\\n     */\\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\\n        return _unpackedOwnership(_packedOwnerships[index]);\\n    }\\n\\n    /**\\n     * @dev Returns whether the ownership slot at `index` is initialized.\\n     * An uninitialized slot does not necessarily mean that the slot has no owner.\\n     */\\n    function _ownershipIsInitialized(uint256 index) internal view virtual returns (bool) {\\n        return _packedOwnerships[index] != 0;\\n    }\\n\\n    /**\\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\\n     */\\n    function _initializeOwnershipAt(uint256 index) internal virtual {\\n        if (_packedOwnerships[index] == 0) {\\n            _packedOwnerships[index] = _packedOwnershipOf(index);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the packed ownership data of `tokenId`.\\n     */\\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\\n        if (_startTokenId() <= tokenId) {\\n            packed = _packedOwnerships[tokenId];\\n\\n            if (tokenId > _sequentialUpTo()) {\\n                if (_packedOwnershipExists(packed)) return packed;\\n                _revert(OwnerQueryForNonexistentToken.selector);\\n            }\\n\\n            // If the data at the starting slot does not exist, start the scan.\\n            if (packed == 0) {\\n                if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\\n                // Invariant:\\n                // There will always be an initialized ownership slot\\n                // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\\n                // before an unintialized ownership slot\\n                // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\\n                // Hence, `tokenId` will not underflow.\\n                //\\n                // We can directly compare the packed value.\\n                // If the address is zero, packed will be zero.\\n                for (;;) {\\n                    unchecked {\\n                        packed = _packedOwnerships[--tokenId];\\n                    }\\n                    if (packed == 0) continue;\\n                    if (packed & _BITMASK_BURNED == 0) return packed;\\n                    // Otherwise, the token is burned, and we must revert.\\n                    // This handles the case of batch burned tokens, where only the burned bit\\n                    // of the starting slot is set, and remaining slots are left uninitialized.\\n                    _revert(OwnerQueryForNonexistentToken.selector);\\n                }\\n            }\\n            // Otherwise, the data exists and we can skip the scan.\\n            // This is possible because we have already achieved the target condition.\\n            // This saves 2143 gas on transfers of initialized tokens.\\n            // If the token is not burned, return `packed`. Otherwise, revert.\\n            if (packed & _BITMASK_BURNED == 0) return packed;\\n        }\\n        _revert(OwnerQueryForNonexistentToken.selector);\\n    }\\n\\n    /**\\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\\n     */\\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\\n        ownership.addr = address(uint160(packed));\\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\\n        ownership.burned = packed & _BITMASK_BURNED != 0;\\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\\n    }\\n\\n    /**\\n     * @dev Packs ownership data into a single uint256.\\n     */\\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\\n        assembly {\\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\\n            owner := and(owner, _BITMASK_ADDRESS)\\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\\n     */\\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\\n        // For branchless setting of the `nextInitialized` flag.\\n        assembly {\\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\\n        }\\n    }\\n\\n    // =============================================================\\n    //                      APPROVAL OPERATIONS\\n    // =============================================================\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     */\\n    function approve(address to, uint256 tokenId) public payable virtual override {\\n        _approve(to, tokenId, true);\\n    }\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\\n\\n        return _tokenApprovals[tokenId].value;\\n    }\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom}\\n     * for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted. See {_mint}.\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool result) {\\n        if (_startTokenId() <= tokenId) {\\n            if (tokenId > _sequentialUpTo()) return _packedOwnershipExists(_packedOwnerships[tokenId]);\\n\\n            if (tokenId < _currentIndex) {\\n                uint256 packed;\\n                while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId;\\n                result = packed & _BITMASK_BURNED == 0;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether `packed` represents a token that exists.\\n     */\\n    function _packedOwnershipExists(uint256 packed) private pure returns (bool result) {\\n        assembly {\\n            // The following is equivalent to `owner != address(0) && burned == false`.\\n            // Symbolically tested.\\n            result := gt(and(packed, _BITMASK_ADDRESS), and(packed, _BITMASK_BURNED))\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\\n     */\\n    function _isSenderApprovedOrOwner(address approvedAddress, address owner, address msgSender)\\n        private\\n        pure\\n        returns (bool result)\\n    {\\n        assembly {\\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\\n            owner := and(owner, _BITMASK_ADDRESS)\\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\\n            // `msgSender == owner || msgSender == approvedAddress`.\\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\\n     */\\n    function _getApprovedSlotAndAddress(uint256 tokenId)\\n        private\\n        view\\n        returns (uint256 approvedAddressSlot, address approvedAddress)\\n    {\\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\\n        assembly {\\n            approvedAddressSlot := tokenApproval.slot\\n            approvedAddress := sload(approvedAddressSlot)\\n        }\\n    }\\n\\n    // =============================================================\\n    //                      TRANSFER OPERATIONS\\n    // =============================================================\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token\\n     * by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public payable virtual override {\\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\\n\\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\\n\\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\\n\\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\\n\\n        // The nested ifs save around 20+ gas over a compound boolean condition.\\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A())) {\\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\\n        }\\n\\n        _beforeTokenTransfers(from, to, tokenId, 1);\\n\\n        // Clear approvals from the previous owner.\\n        assembly {\\n            if approvedAddress {\\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\\n                sstore(approvedAddressSlot, 0)\\n            }\\n        }\\n\\n        // Underflow of the sender's balance is impossible because we check for\\n        // ownership above and the recipient's balance can't realistically overflow.\\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\\n        unchecked {\\n            // We can directly increment and decrement the balances.\\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\\n\\n            // Updates:\\n            // - `address` to the next owner.\\n            // - `startTimestamp` to the timestamp of transfering.\\n            // - `burned` to `false`.\\n            // - `nextInitialized` to `true`.\\n            _packedOwnerships[tokenId] =\\n                _packOwnershipData(to, _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked));\\n\\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\\n                uint256 nextTokenId = tokenId + 1;\\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\\n                if (_packedOwnerships[nextTokenId] == 0) {\\n                    // If the next slot is within bounds.\\n                    if (nextTokenId != _currentIndex) {\\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\\n                    }\\n                }\\n            }\\n        }\\n\\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\\n        assembly {\\n            // Emit the `Transfer` event.\\n            log4(\\n                0, // Start of data (0, since no data).\\n                0, // End of data (0, since no data).\\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\\n                from, // `from`.\\n                toMasked, // `to`.\\n                tokenId // `tokenId`.\\n            )\\n        }\\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\\n\\n        _afterTokenTransfers(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public payable virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token\\n     * by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement\\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data)\\n        public\\n        payable\\n        virtual\\n        override\\n    {\\n        transferFrom(from, to, tokenId);\\n        if (to.code.length != 0) {\\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before a set of serially-ordered token IDs\\n     * are about to be transferred. This includes minting.\\n     * And also called before burning one token.\\n     *\\n     * `startTokenId` - the first token ID to be transferred.\\n     * `quantity` - the amount to be transferred.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, `tokenId` will be burned by `from`.\\n     * - `from` and `to` are never both zero.\\n     */\\n    function _beforeTokenTransfers(address from, address to, uint256 startTokenId, uint256 quantity) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after a set of serially-ordered token IDs\\n     * have been transferred. This includes minting.\\n     * And also called after one token has been burned.\\n     *\\n     * `startTokenId` - the first token ID to be transferred.\\n     * `quantity` - the amount to be transferred.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` has been minted for `to`.\\n     * - When `to` is zero, `tokenId` has been burned by `from`.\\n     * - `from` and `to` are never both zero.\\n     */\\n    function _afterTokenTransfers(address from, address to, uint256 startTokenId, uint256 quantity) internal virtual {}\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\\n     *\\n     * `from` - Previous owner of the given token ID.\\n     * `to` - Target address that will receive the token.\\n     * `tokenId` - Token ID to be transferred.\\n     * `_data` - Optional data to send along with the call.\\n     *\\n     * Returns whether the call correctly returned the expected magic value.\\n     */\\n    function _checkContractOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\\n        private\\n        returns (bool)\\n    {\\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\\n            bytes4 retval\\n        ) {\\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\\n        } catch (bytes memory reason) {\\n            if (reason.length == 0) {\\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\\n            }\\n            assembly {\\n                revert(add(32, reason), mload(reason))\\n            }\\n        }\\n    }\\n\\n    // =============================================================\\n    //                        MINT OPERATIONS\\n    // =============================================================\\n\\n    /**\\n     * @dev Mints `quantity` tokens and transfers them to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `quantity` must be greater than 0.\\n     *\\n     * Emits a {Transfer} event for each mint.\\n     */\\n    function _mint(address to, uint256 quantity) internal virtual {\\n        uint256 startTokenId = _currentIndex;\\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\\n\\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\\n\\n        // Overflows are incredibly unrealistic.\\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\\n        // `tokenId` has a maximum limit of 2**256.\\n        unchecked {\\n            // Updates:\\n            // - `address` to the owner.\\n            // - `startTimestamp` to the timestamp of minting.\\n            // - `burned` to `false`.\\n            // - `nextInitialized` to `quantity == 1`.\\n            _packedOwnerships[startTokenId] =\\n                _packOwnershipData(to, _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0));\\n\\n            // Updates:\\n            // - `balance += quantity`.\\n            // - `numberMinted += quantity`.\\n            //\\n            // We can directly add to the `balance` and `numberMinted`.\\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\\n\\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\\n\\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\\n\\n            uint256 end = startTokenId + quantity;\\n            uint256 tokenId = startTokenId;\\n\\n            if (end - 1 > _sequentialUpTo()) _revert(SequentialMintExceedsLimit.selector);\\n\\n            do {\\n                assembly {\\n                    // Emit the `Transfer` event.\\n                    log4(\\n                        0, // Start of data (0, since no data).\\n                        0, // End of data (0, since no data).\\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\\n                        0, // `address(0)`.\\n                        toMasked, // `to`.\\n                        tokenId // `tokenId`.\\n                    )\\n                }\\n                // The `!=` check ensures that large values of `quantity`\\n                // that overflows uint256 will make the loop run out of gas.\\n            } while (++tokenId != end);\\n\\n            _currentIndex = end;\\n        }\\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\\n    }\\n\\n    /**\\n     * @dev Mints `quantity` tokens and transfers them to `to`.\\n     *\\n     * This function is intended for efficient minting only during contract creation.\\n     *\\n     * It emits only one {ConsecutiveTransfer} as defined in\\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\\n     * instead of a sequence of {Transfer} event(s).\\n     *\\n     * Calling this function outside of contract creation WILL make your contract\\n     * non-compliant with the ERC721 standard.\\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `quantity` must be greater than 0.\\n     *\\n     * Emits a {ConsecutiveTransfer} event.\\n     */\\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\\n        uint256 startTokenId = _currentIndex;\\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\\n\\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\\n\\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\\n        unchecked {\\n            // Updates:\\n            // - `balance += quantity`.\\n            // - `numberMinted += quantity`.\\n            //\\n            // We can directly add to the `balance` and `numberMinted`.\\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\\n\\n            // Updates:\\n            // - `address` to the owner.\\n            // - `startTimestamp` to the timestamp of minting.\\n            // - `burned` to `false`.\\n            // - `nextInitialized` to `quantity == 1`.\\n            _packedOwnerships[startTokenId] =\\n                _packOwnershipData(to, _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0));\\n\\n            if (startTokenId + quantity - 1 > _sequentialUpTo()) _revert(SequentialMintExceedsLimit.selector);\\n\\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\\n\\n            _currentIndex = startTokenId + quantity;\\n        }\\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\\n    }\\n\\n    /**\\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement\\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\\n     * - `quantity` must be greater than 0.\\n     *\\n     * See {_mint}.\\n     *\\n     * Emits a {Transfer} event for each mint.\\n     */\\n    function _safeMint(address to, uint256 quantity, bytes memory _data) internal virtual {\\n        _mint(to, quantity);\\n\\n        unchecked {\\n            if (to.code.length != 0) {\\n                uint256 end = _currentIndex;\\n                uint256 index = end - quantity;\\n                do {\\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\\n                    }\\n                } while (index < end);\\n                // This prevents reentrancy to `_safeMint`.\\n                // It does not prevent reentrancy to `_safeMintSpot`.\\n                if (_currentIndex != end) revert();\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\\n     */\\n    function _safeMint(address to, uint256 quantity) internal virtual {\\n        _safeMint(to, quantity, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Mints a single token at `tokenId`.\\n     *\\n     * Note: A spot-minted `tokenId` that has been burned can be re-minted again.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` must be greater than `_sequentialUpTo()`.\\n     * - `tokenId` must not exist.\\n     *\\n     * Emits a {Transfer} event for each mint.\\n     */\\n    function _mintSpot(address to, uint256 tokenId) internal virtual {\\n        if (tokenId <= _sequentialUpTo()) _revert(SpotMintTokenIdTooSmall.selector);\\n        uint256 prevOwnershipPacked = _packedOwnerships[tokenId];\\n        if (_packedOwnershipExists(prevOwnershipPacked)) _revert(TokenAlreadyExists.selector);\\n\\n        _beforeTokenTransfers(address(0), to, tokenId, 1);\\n\\n        // Overflows are incredibly unrealistic.\\n        // The `numberMinted` for `to` is incremented by 1, and has a max limit of 2**64 - 1.\\n        // `_spotMinted` is incremented by 1, and has a max limit of 2**256 - 1.\\n        unchecked {\\n            // Updates:\\n            // - `address` to the owner.\\n            // - `startTimestamp` to the timestamp of minting.\\n            // - `burned` to `false`.\\n            // - `nextInitialized` to `true` (as `quantity == 1`).\\n            _packedOwnerships[tokenId] =\\n                _packOwnershipData(to, _nextInitializedFlag(1) | _nextExtraData(address(0), to, prevOwnershipPacked));\\n\\n            // Updates:\\n            // - `balance += 1`.\\n            // - `numberMinted += 1`.\\n            //\\n            // We can directly add to the `balance` and `numberMinted`.\\n            _packedAddressData[to] += (1 << _BITPOS_NUMBER_MINTED) | 1;\\n\\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\\n\\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\\n\\n            assembly {\\n                // Emit the `Transfer` event.\\n                log4(\\n                    0, // Start of data (0, since no data).\\n                    0, // End of data (0, since no data).\\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\\n                    0, // `address(0)`.\\n                    toMasked, // `to`.\\n                    tokenId // `tokenId`.\\n                )\\n            }\\n\\n            ++_spotMinted;\\n        }\\n\\n        _afterTokenTransfers(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Safely mints a single token at `tokenId`.\\n     *\\n     * Note: A spot-minted `tokenId` that has been burned can be re-minted again.\\n     *\\n     * Requirements:\\n     *\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}.\\n     * - `tokenId` must be greater than `_sequentialUpTo()`.\\n     * - `tokenId` must not exist.\\n     *\\n     * See {_mintSpot}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMintSpot(address to, uint256 tokenId, bytes memory _data) internal virtual {\\n        _mintSpot(to, tokenId);\\n\\n        unchecked {\\n            if (to.code.length != 0) {\\n                uint256 currentSpotMinted = _spotMinted;\\n                if (!_checkContractOnERC721Received(address(0), to, tokenId, _data)) {\\n                    _revert(TransferToNonERC721ReceiverImplementer.selector);\\n                }\\n                // This prevents reentrancy to `_safeMintSpot`.\\n                // It does not prevent reentrancy to `_safeMint`.\\n                if (_spotMinted != currentSpotMinted) revert();\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Equivalent to `_safeMintSpot(to, tokenId, '')`.\\n     */\\n    function _safeMintSpot(address to, uint256 tokenId) internal virtual {\\n        _safeMintSpot(to, tokenId, \\\"\\\");\\n    }\\n\\n    // =============================================================\\n    //                       APPROVAL OPERATIONS\\n    // =============================================================\\n\\n    /**\\n     * @dev Equivalent to `_approve(to, tokenId, false)`.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _approve(to, tokenId, false);\\n    }\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the\\n     * zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId, bool approvalCheck) internal virtual {\\n        address owner = ownerOf(tokenId);\\n\\n        if (approvalCheck && _msgSenderERC721A() != owner) {\\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId].value = to;\\n        emit Approval(owner, to, tokenId);\\n    }\\n\\n    // =============================================================\\n    //                        BURN OPERATIONS\\n    // =============================================================\\n\\n    /**\\n     * @dev Equivalent to `_burn(tokenId, false)`.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        _burn(tokenId, false);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\\n\\n        address from = address(uint160(prevOwnershipPacked));\\n\\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\\n\\n        if (approvalCheck) {\\n            // The nested ifs save around 20+ gas over a compound boolean condition.\\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A())) {\\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\\n            }\\n        }\\n\\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\\n\\n        // Clear approvals from the previous owner.\\n        assembly {\\n            if approvedAddress {\\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\\n                sstore(approvedAddressSlot, 0)\\n            }\\n        }\\n\\n        // Underflow of the sender's balance is impossible because we check for\\n        // ownership above and the recipient's balance can't realistically overflow.\\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\\n        unchecked {\\n            // Updates:\\n            // - `balance -= 1`.\\n            // - `numberBurned += 1`.\\n            //\\n            // We can directly decrement the balance, and increment the number burned.\\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\\n\\n            // Updates:\\n            // - `address` to the last owner.\\n            // - `startTimestamp` to the timestamp of burning.\\n            // - `burned` to `true`.\\n            // - `nextInitialized` to `true`.\\n            _packedOwnerships[tokenId] = _packOwnershipData(\\n                from,\\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\\n            );\\n\\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\\n                uint256 nextTokenId = tokenId + 1;\\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\\n                if (_packedOwnerships[nextTokenId] == 0) {\\n                    // If the next slot is within bounds.\\n                    if (nextTokenId != _currentIndex) {\\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\\n                    }\\n                }\\n            }\\n        }\\n\\n        emit Transfer(from, address(0), tokenId);\\n        _afterTokenTransfers(from, address(0), tokenId, 1);\\n\\n        // Overflow not possible, as `_burnCounter` cannot be exceed `_currentIndex + _spotMinted` times.\\n        unchecked {\\n            _burnCounter++;\\n        }\\n    }\\n\\n    // =============================================================\\n    //                     EXTRA DATA OPERATIONS\\n    // =============================================================\\n\\n    /**\\n     * @dev Directly sets the extra data for the ownership data `index`.\\n     */\\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\\n        uint256 packed = _packedOwnerships[index];\\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\\n        uint256 extraDataCasted;\\n        // Cast `extraData` with assembly to avoid redundant masking.\\n        assembly {\\n            extraDataCasted := extraData\\n        }\\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\\n        _packedOwnerships[index] = packed;\\n    }\\n\\n    /**\\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\\n     * Intended to be overridden by the cosumer contract.\\n     *\\n     * `previousExtraData` - the value of `extraData` before transfer.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, `tokenId` will be burned by `from`.\\n     * - `from` and `to` are never both zero.\\n     */\\n    function _extraData(address from, address to, uint24 previousExtraData) internal view virtual returns (uint24) {}\\n\\n    /**\\n     * @dev Returns the next extra data for the packed ownership data.\\n     * The returned result is shifted into position.\\n     */\\n    function _nextExtraData(address from, address to, uint256 prevOwnershipPacked) private view returns (uint256) {\\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\\n    }\\n\\n    // =============================================================\\n    //                       OTHER OPERATIONS\\n    // =============================================================\\n\\n    /**\\n     * @dev Returns the message sender (defaults to `msg.sender`).\\n     *\\n     * If you are writing GSN compatible contracts, you need to override this function.\\n     */\\n    function _msgSenderERC721A() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    /**\\n     * @dev Converts a uint256 to its ASCII string decimal representation.\\n     */\\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\\n        assembly {\\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\\n            let m := add(mload(0x40), 0xa0)\\n            // Update the free memory pointer to allocate.\\n            mstore(0x40, m)\\n            // Assign the `str` to the end.\\n            str := sub(m, 0x20)\\n            // Zeroize the slot after the string.\\n            mstore(str, 0)\\n\\n            // Cache the end of the memory to calculate the length later.\\n            let end := str\\n\\n            // We write the string from rightmost digit to leftmost digit.\\n            // The following is essentially a do-while loop that also handles the zero case.\\n            // prettier-ignore\\n            for { let temp := value } 1 {} {\\n                str := sub(str, 1)\\n                // Write the character to the pointer.\\n                // The ASCII index of the '0' character is 48.\\n                mstore8(str, add(48, mod(temp, 10)))\\n                // Keep dividing `temp` until zero.\\n                temp := div(temp, 10)\\n                // prettier-ignore\\n                if iszero(temp) { break }\\n            }\\n\\n            let length := sub(end, str)\\n            // Move the pointer 32 bytes leftwards to make room for the length.\\n            str := sub(str, 0x20)\\n            // Store the length.\\n            mstore(str, length)\\n        }\\n    }\\n\\n    /**\\n     * @dev For more efficient reverts.\\n     */\\n    function _revert(bytes4 errorSelector) internal pure {\\n        assembly {\\n            mstore(0x00, errorSelector)\\n            revert(0x00, 0x04)\\n        }\\n    }\\n}\\n\"},\"IERC721AQueryable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// ERC721A Contracts v4.3.0\\n// Creator: Chiru Labs\\n\\npragma solidity ^0.8.4;\\n\\nimport '../IERC721A.sol';\\n\\n/**\\n * @dev Interface of ERC721AQueryable.\\n */\\ninterface IERC721AQueryable is IERC721A {\\n    /**\\n     * Invalid query range (`start` >= `stop`).\\n     */\\n    error InvalidQueryRange();\\n\\n    /**\\n     * @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\\n     *\\n     * If the `tokenId` is out of bounds:\\n     *\\n     * - `addr = address(0)`\\n     * - `startTimestamp = 0`\\n     * - `burned = false`\\n     * - `extraData = 0`\\n     *\\n     * If the `tokenId` is burned:\\n     *\\n     * - `addr = <Address of owner before token was burned>`\\n     * - `startTimestamp = <Timestamp when token was burned>`\\n     * - `burned = true`\\n     * - `extraData = <Extra data when token was burned>`\\n     *\\n     * Otherwise:\\n     *\\n     * - `addr = <Address of owner>`\\n     * - `startTimestamp = <Timestamp of start of ownership>`\\n     * - `burned = false`\\n     * - `extraData = <Extra data at start of ownership>`\\n     */\\n    function explicitOwnershipOf(uint256 tokenId) external view returns (TokenOwnership memory);\\n\\n    /**\\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\\n     * See {ERC721AQueryable-explicitOwnershipOf}\\n     */\\n    function explicitOwnershipsOf(uint256[] memory tokenIds) external view returns (TokenOwnership[] memory);\\n\\n    /**\\n     * @dev Returns an array of token IDs owned by `owner`,\\n     * in the range [`start`, `stop`)\\n     * (i.e. `start <= tokenId < stop`).\\n     *\\n     * This function allows for tokens to be queried if the collection\\n     * grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\\n     *\\n     * Requirements:\\n     *\\n     * - `start < stop`\\n     */\\n    function tokensOfOwnerIn(\\n        address owner,\\n        uint256 start,\\n        uint256 stop\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @dev Returns an array of token IDs owned by `owner`.\\n     *\\n     * This function scans the ownership mapping and is O(`totalSupply`) in complexity.\\n     * It is meant to be called off-chain.\\n     *\\n     * See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\\n     * multiple smaller scans if the collection is large enough to cause\\n     * an out-of-gas error (10K collections should be fine).\\n     */\\n    function tokensOfOwner(address owner) external view returns (uint256[] memory);\\n}\\n\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\"},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC2981.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Interface for the NFT Royalty Standard.\\n *\\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\\n */\\ninterface IERC2981 is IERC165 {\\n    /**\\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\\n     */\\n    function royaltyInfo(\\n        uint256 tokenId,\\n        uint256 salePrice\\n    ) external view returns (address receiver, uint256 royaltyAmount);\\n}\\n\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\"}},\"settings\":{\"optimizer\":{\"enabled\":true,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}},\"remappings\":[]}}",
	"name": "Gloomers",
	"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimNotActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedsMaxMintPerWallet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedsMaxSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintingDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonEOACaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEligible\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PresaleNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PublicMintNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WhitelistNotActive\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"ClaimPresale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"GloomersMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"MintWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum Gloomers.DropStatus\",\"name\":\"_dropStatus\",\"type\":\"uint8\"}],\"name\":\"NewDropStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"RegisterPresale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"END_TOKEN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_MINT_PER_WALLET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_PER_TOKEN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROVENANCE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_MINT_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"START_TOKEN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WHITELIST_START_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dropStatus\",\"outputs\":[{\"internalType\":\"enum Gloomers.DropStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"ownership\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getPresaleAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gloomerHash_\",\"type\":\"bytes32\"}],\"name\":\"mintWhitelist\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gloomerHash_\",\"type\":\"bytes32\"}],\"name\":\"registerPresale\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setDefaultRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Gloomers.DropStatus\",\"name\":\"newDropStatus\",\"type\":\"uint8\"}],\"name\":\"setDropStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"gloomerHash_\",\"type\":\"bytes32\"}],\"name\":\"setGloomerHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseTokenURI_\",\"type\":\"string\"}],\"name\":\"setTokenUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"soko.eth | Gloom Labs | https://www.gloomtoken.com\",\"details\":\"ERC721A contract with presale, whitelist, and public minting periods.\",\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Gloomers #3334 - #6666\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Gloomers is a 10k PFP collection launched across Base, Solana, and Optimism with teleburning to Bitcoin\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Gloomers.sol\":\"Gloomers\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x89b84f7b1b2d6c294cd6b9a9f661c1cfb1b9b10ca7bac5b3445850a8ce96dcf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44f961aefa43a50c94d8b68e749235b2cf3bd1de18bf6f2e5e1c0fd9a59e06ea\",\"dweb:/ipfs/QmNzd2bnJidavPtt2hQ1em387T6W37n3kDx8WrneCZozxV\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x87e4eac873515f713e858d72150a7d2a69ddd531967e60a5d6ba77127db1fd54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0767e22e108183ebab97542c97bb95a619c96b4b6a7f59513c7320a501b1f355\",\"dweb:/ipfs/Qma2MBaEbZcutxkdrEUEayrV1FXQF1qLpYJGpGo49iGHux\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"ERC721A.sol\":{\"keccak256\":\"0x45bebb176cb4865e514747818f576bd66aba1ee8ab9307e3e21c076cf2a8bb4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f767c9f5e457661b0a90249f14a2e036e5ce9fb4c363baf44df2486ff5b205b\",\"dweb:/ipfs/QmWPGv8QWah3ZQPYyu8zyDDTK4Bwih1BXP1svnPDH3B9w4\"]},\"ERC721AQueryable.sol\":{\"keccak256\":\"0xfa5590db00a9bf0f85d2c10f2c901d5a3d49ecb1e64e5b6afe9a771496a41698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42616f12c7956e0ccefb690bf2a503986710c54544a36898b1ecc5d226373c4d\",\"dweb:/ipfs/QmU6vn637MDzUjsGih3fnWYf5CjcMknQUDXQwYjLNPX8ig\"]},\"Gloomers.sol\":{\"keccak256\":\"0xec2f21568eb367141934ad59ab85f1b4e3f12a0b14dfbd3cfb56bd3ab2419a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://387ffaf76f36b0b216213afd7d7ca6f0bc645126e22a10f37858feca2a4f9d7a\",\"dweb:/ipfs/QmYJLXg75VxwDh7uWt3zERK7LVjSJdRacdh8V7R26Ngb5n\"]},\"IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]},\"IERC721AQueryable.sol\":{\"keccak256\":\"0x56fa15ba9a351f0be2728ff2569c8ce6bc187cbf2c027fece17442a682f49079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e424f0290d7ba66e451b3d8e490f5bac0bf0105b2af467513b2ffecb7065a9\",\"dweb:/ipfs/QmbCvzT7vep5gyBNqkHrD46pxZVUHHzaCZUpgwgWkBw78Y\"]},\"StartTokenIdHelper.sol\":{\"keccak256\":\"0xcd891c0dd8ce5756fa5d3e0dbd12912bbc484afa6b34844b8ad64b53fedb0faf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3e7536afe87c56025eae51aa035d9f1c77ddc42ae88be87b1df09cc738be5bd\",\"dweb:/ipfs/QmX3nxKkzjakq9NrmnBgAnWGx79RRs3bv3MDLAx9fZw8qE\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_3275": {
				"entryPoint": null,
				"id": 3275,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_3994": {
				"entryPoint": null,
				"id": 3994,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_50": {
				"entryPoint": null,
				"id": 50,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_638": {
				"entryPoint": null,
				"id": 638,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_feeDenominator_302": {
				"entryPoint": null,
				"id": 302,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_initializeStartTokenId_4008": {
				"entryPoint": 274,
				"id": 4008,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_revert_2590": {
				"entryPoint": null,
				"id": 2590,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_sequentialUpTo_660": {
				"entryPoint": null,
				"id": 660,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_setDefaultRoyalty_348": {
				"entryPoint": 381,
				"id": 348,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_startTokenId_3510": {
				"entryPoint": 282,
				"id": 3510,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_transferOwnership_146": {
				"entryPoint": 300,
				"id": 146,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@startTokenId_4001": {
				"entryPoint": null,
				"id": 4001,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"array_dataslot_string_storage": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"clean_up_bytearray_end_slots_string_storage": {
				"entryPoint": 619,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
				"entryPoint": 695,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"extract_byte_array_length": {
				"entryPoint": 563,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"extract_used_part_and_set_length_of_short_byte_array": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"panic_error_0x21": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x41": {
				"entryPoint": 543,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:3315:12",
					"nodeType": "YulBlock",
					"src": "0:3315:12",
					"statements": [
						{
							"nativeSrc": "6:3:12",
							"nodeType": "YulBlock",
							"src": "6:3:12",
							"statements": []
						},
						{
							"body": {
								"nativeSrc": "46:95:12",
								"nodeType": "YulBlock",
								"src": "46:95:12",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "63:1:12",
													"nodeType": "YulLiteral",
													"src": "63:1:12",
													"type": "",
													"value": "0"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "70:3:12",
															"nodeType": "YulLiteral",
															"src": "70:3:12",
															"type": "",
															"value": "224"
														},
														{
															"kind": "number",
															"nativeSrc": "75:10:12",
															"nodeType": "YulLiteral",
															"src": "75:10:12",
															"type": "",
															"value": "0x4e487b71"
														}
													],
													"functionName": {
														"name": "shl",
														"nativeSrc": "66:3:12",
														"nodeType": "YulIdentifier",
														"src": "66:3:12"
													},
													"nativeSrc": "66:20:12",
													"nodeType": "YulFunctionCall",
													"src": "66:20:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "56:6:12",
												"nodeType": "YulIdentifier",
												"src": "56:6:12"
											},
											"nativeSrc": "56:31:12",
											"nodeType": "YulFunctionCall",
											"src": "56:31:12"
										},
										"nativeSrc": "56:31:12",
										"nodeType": "YulExpressionStatement",
										"src": "56:31:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "103:1:12",
													"nodeType": "YulLiteral",
													"src": "103:1:12",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "106:4:12",
													"nodeType": "YulLiteral",
													"src": "106:4:12",
													"type": "",
													"value": "0x21"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "96:6:12",
												"nodeType": "YulIdentifier",
												"src": "96:6:12"
											},
											"nativeSrc": "96:15:12",
											"nodeType": "YulFunctionCall",
											"src": "96:15:12"
										},
										"nativeSrc": "96:15:12",
										"nodeType": "YulExpressionStatement",
										"src": "96:15:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "127:1:12",
													"nodeType": "YulLiteral",
													"src": "127:1:12",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "130:4:12",
													"nodeType": "YulLiteral",
													"src": "130:4:12",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "120:6:12",
												"nodeType": "YulIdentifier",
												"src": "120:6:12"
											},
											"nativeSrc": "120:15:12",
											"nodeType": "YulFunctionCall",
											"src": "120:15:12"
										},
										"nativeSrc": "120:15:12",
										"nodeType": "YulExpressionStatement",
										"src": "120:15:12"
									}
								]
							},
							"name": "panic_error_0x21",
							"nativeSrc": "14:127:12",
							"nodeType": "YulFunctionDefinition",
							"src": "14:127:12"
						},
						{
							"body": {
								"nativeSrc": "178:95:12",
								"nodeType": "YulBlock",
								"src": "178:95:12",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "195:1:12",
													"nodeType": "YulLiteral",
													"src": "195:1:12",
													"type": "",
													"value": "0"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "202:3:12",
															"nodeType": "YulLiteral",
															"src": "202:3:12",
															"type": "",
															"value": "224"
														},
														{
															"kind": "number",
															"nativeSrc": "207:10:12",
															"nodeType": "YulLiteral",
															"src": "207:10:12",
															"type": "",
															"value": "0x4e487b71"
														}
													],
													"functionName": {
														"name": "shl",
														"nativeSrc": "198:3:12",
														"nodeType": "YulIdentifier",
														"src": "198:3:12"
													},
													"nativeSrc": "198:20:12",
													"nodeType": "YulFunctionCall",
													"src": "198:20:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "188:6:12",
												"nodeType": "YulIdentifier",
												"src": "188:6:12"
											},
											"nativeSrc": "188:31:12",
											"nodeType": "YulFunctionCall",
											"src": "188:31:12"
										},
										"nativeSrc": "188:31:12",
										"nodeType": "YulExpressionStatement",
										"src": "188:31:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "235:1:12",
													"nodeType": "YulLiteral",
													"src": "235:1:12",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "238:4:12",
													"nodeType": "YulLiteral",
													"src": "238:4:12",
													"type": "",
													"value": "0x41"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "228:6:12",
												"nodeType": "YulIdentifier",
												"src": "228:6:12"
											},
											"nativeSrc": "228:15:12",
											"nodeType": "YulFunctionCall",
											"src": "228:15:12"
										},
										"nativeSrc": "228:15:12",
										"nodeType": "YulExpressionStatement",
										"src": "228:15:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "259:1:12",
													"nodeType": "YulLiteral",
													"src": "259:1:12",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "262:4:12",
													"nodeType": "YulLiteral",
													"src": "262:4:12",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "252:6:12",
												"nodeType": "YulIdentifier",
												"src": "252:6:12"
											},
											"nativeSrc": "252:15:12",
											"nodeType": "YulFunctionCall",
											"src": "252:15:12"
										},
										"nativeSrc": "252:15:12",
										"nodeType": "YulExpressionStatement",
										"src": "252:15:12"
									}
								]
							},
							"name": "panic_error_0x41",
							"nativeSrc": "146:127:12",
							"nodeType": "YulFunctionDefinition",
							"src": "146:127:12"
						},
						{
							"body": {
								"nativeSrc": "333:325:12",
								"nodeType": "YulBlock",
								"src": "333:325:12",
								"statements": [
									{
										"nativeSrc": "343:22:12",
										"nodeType": "YulAssignment",
										"src": "343:22:12",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "357:1:12",
													"nodeType": "YulLiteral",
													"src": "357:1:12",
													"type": "",
													"value": "1"
												},
												{
													"name": "data",
													"nativeSrc": "360:4:12",
													"nodeType": "YulIdentifier",
													"src": "360:4:12"
												}
											],
											"functionName": {
												"name": "shr",
												"nativeSrc": "353:3:12",
												"nodeType": "YulIdentifier",
												"src": "353:3:12"
											},
											"nativeSrc": "353:12:12",
											"nodeType": "YulFunctionCall",
											"src": "353:12:12"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "343:6:12",
												"nodeType": "YulIdentifier",
												"src": "343:6:12"
											}
										]
									},
									{
										"nativeSrc": "374:38:12",
										"nodeType": "YulVariableDeclaration",
										"src": "374:38:12",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "404:4:12",
													"nodeType": "YulIdentifier",
													"src": "404:4:12"
												},
												{
													"kind": "number",
													"nativeSrc": "410:1:12",
													"nodeType": "YulLiteral",
													"src": "410:1:12",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "400:3:12",
												"nodeType": "YulIdentifier",
												"src": "400:3:12"
											},
											"nativeSrc": "400:12:12",
											"nodeType": "YulFunctionCall",
											"src": "400:12:12"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nativeSrc": "378:18:12",
												"nodeType": "YulTypedName",
												"src": "378:18:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "451:31:12",
											"nodeType": "YulBlock",
											"src": "451:31:12",
											"statements": [
												{
													"nativeSrc": "453:27:12",
													"nodeType": "YulAssignment",
													"src": "453:27:12",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nativeSrc": "467:6:12",
																"nodeType": "YulIdentifier",
																"src": "467:6:12"
															},
															{
																"kind": "number",
																"nativeSrc": "475:4:12",
																"nodeType": "YulLiteral",
																"src": "475:4:12",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nativeSrc": "463:3:12",
															"nodeType": "YulIdentifier",
															"src": "463:3:12"
														},
														"nativeSrc": "463:17:12",
														"nodeType": "YulFunctionCall",
														"src": "463:17:12"
													},
													"variableNames": [
														{
															"name": "length",
															"nativeSrc": "453:6:12",
															"nodeType": "YulIdentifier",
															"src": "453:6:12"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "431:18:12",
													"nodeType": "YulIdentifier",
													"src": "431:18:12"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "424:6:12",
												"nodeType": "YulIdentifier",
												"src": "424:6:12"
											},
											"nativeSrc": "424:26:12",
											"nodeType": "YulFunctionCall",
											"src": "424:26:12"
										},
										"nativeSrc": "421:61:12",
										"nodeType": "YulIf",
										"src": "421:61:12"
									},
									{
										"body": {
											"nativeSrc": "541:111:12",
											"nodeType": "YulBlock",
											"src": "541:111:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "562:1:12",
																"nodeType": "YulLiteral",
																"src": "562:1:12",
																"type": "",
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "569:3:12",
																		"nodeType": "YulLiteral",
																		"src": "569:3:12",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "574:10:12",
																		"nodeType": "YulLiteral",
																		"src": "574:10:12",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "565:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "565:3:12"
																},
																"nativeSrc": "565:20:12",
																"nodeType": "YulFunctionCall",
																"src": "565:20:12"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "555:6:12",
															"nodeType": "YulIdentifier",
															"src": "555:6:12"
														},
														"nativeSrc": "555:31:12",
														"nodeType": "YulFunctionCall",
														"src": "555:31:12"
													},
													"nativeSrc": "555:31:12",
													"nodeType": "YulExpressionStatement",
													"src": "555:31:12"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "606:1:12",
																"nodeType": "YulLiteral",
																"src": "606:1:12",
																"type": "",
																"value": "4"
															},
															{
																"kind": "number",
																"nativeSrc": "609:4:12",
																"nodeType": "YulLiteral",
																"src": "609:4:12",
																"type": "",
																"value": "0x22"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "599:6:12",
															"nodeType": "YulIdentifier",
															"src": "599:6:12"
														},
														"nativeSrc": "599:15:12",
														"nodeType": "YulFunctionCall",
														"src": "599:15:12"
													},
													"nativeSrc": "599:15:12",
													"nodeType": "YulExpressionStatement",
													"src": "599:15:12"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "634:1:12",
																"nodeType": "YulLiteral",
																"src": "634:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "637:4:12",
																"nodeType": "YulLiteral",
																"src": "637:4:12",
																"type": "",
																"value": "0x24"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "627:6:12",
															"nodeType": "YulIdentifier",
															"src": "627:6:12"
														},
														"nativeSrc": "627:15:12",
														"nodeType": "YulFunctionCall",
														"src": "627:15:12"
													},
													"nativeSrc": "627:15:12",
													"nodeType": "YulExpressionStatement",
													"src": "627:15:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "497:18:12",
													"nodeType": "YulIdentifier",
													"src": "497:18:12"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nativeSrc": "520:6:12",
															"nodeType": "YulIdentifier",
															"src": "520:6:12"
														},
														{
															"kind": "number",
															"nativeSrc": "528:2:12",
															"nodeType": "YulLiteral",
															"src": "528:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nativeSrc": "517:2:12",
														"nodeType": "YulIdentifier",
														"src": "517:2:12"
													},
													"nativeSrc": "517:14:12",
													"nodeType": "YulFunctionCall",
													"src": "517:14:12"
												}
											],
											"functionName": {
												"name": "eq",
												"nativeSrc": "494:2:12",
												"nodeType": "YulIdentifier",
												"src": "494:2:12"
											},
											"nativeSrc": "494:38:12",
											"nodeType": "YulFunctionCall",
											"src": "494:38:12"
										},
										"nativeSrc": "491:161:12",
										"nodeType": "YulIf",
										"src": "491:161:12"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nativeSrc": "278:380:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "313:4:12",
									"nodeType": "YulTypedName",
									"src": "313:4:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "322:6:12",
									"nodeType": "YulTypedName",
									"src": "322:6:12",
									"type": ""
								}
							],
							"src": "278:380:12"
						},
						{
							"body": {
								"nativeSrc": "719:65:12",
								"nodeType": "YulBlock",
								"src": "719:65:12",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "736:1:12",
													"nodeType": "YulLiteral",
													"src": "736:1:12",
													"type": "",
													"value": "0"
												},
												{
													"name": "ptr",
													"nativeSrc": "739:3:12",
													"nodeType": "YulIdentifier",
													"src": "739:3:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "729:6:12",
												"nodeType": "YulIdentifier",
												"src": "729:6:12"
											},
											"nativeSrc": "729:14:12",
											"nodeType": "YulFunctionCall",
											"src": "729:14:12"
										},
										"nativeSrc": "729:14:12",
										"nodeType": "YulExpressionStatement",
										"src": "729:14:12"
									},
									{
										"nativeSrc": "752:26:12",
										"nodeType": "YulAssignment",
										"src": "752:26:12",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "770:1:12",
													"nodeType": "YulLiteral",
													"src": "770:1:12",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "773:4:12",
													"nodeType": "YulLiteral",
													"src": "773:4:12",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "keccak256",
												"nativeSrc": "760:9:12",
												"nodeType": "YulIdentifier",
												"src": "760:9:12"
											},
											"nativeSrc": "760:18:12",
											"nodeType": "YulFunctionCall",
											"src": "760:18:12"
										},
										"variableNames": [
											{
												"name": "data",
												"nativeSrc": "752:4:12",
												"nodeType": "YulIdentifier",
												"src": "752:4:12"
											}
										]
									}
								]
							},
							"name": "array_dataslot_string_storage",
							"nativeSrc": "663:121:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "ptr",
									"nativeSrc": "702:3:12",
									"nodeType": "YulTypedName",
									"src": "702:3:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "data",
									"nativeSrc": "710:4:12",
									"nodeType": "YulTypedName",
									"src": "710:4:12",
									"type": ""
								}
							],
							"src": "663:121:12"
						},
						{
							"body": {
								"nativeSrc": "870:437:12",
								"nodeType": "YulBlock",
								"src": "870:437:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "903:398:12",
											"nodeType": "YulBlock",
											"src": "903:398:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "924:1:12",
																"nodeType": "YulLiteral",
																"src": "924:1:12",
																"type": "",
																"value": "0"
															},
															{
																"name": "array",
																"nativeSrc": "927:5:12",
																"nodeType": "YulIdentifier",
																"src": "927:5:12"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "917:6:12",
															"nodeType": "YulIdentifier",
															"src": "917:6:12"
														},
														"nativeSrc": "917:16:12",
														"nodeType": "YulFunctionCall",
														"src": "917:16:12"
													},
													"nativeSrc": "917:16:12",
													"nodeType": "YulExpressionStatement",
													"src": "917:16:12"
												},
												{
													"nativeSrc": "946:30:12",
													"nodeType": "YulVariableDeclaration",
													"src": "946:30:12",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "968:1:12",
																"nodeType": "YulLiteral",
																"src": "968:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "971:4:12",
																"nodeType": "YulLiteral",
																"src": "971:4:12",
																"type": "",
																"value": "0x20"
															}
														],
														"functionName": {
															"name": "keccak256",
															"nativeSrc": "958:9:12",
															"nodeType": "YulIdentifier",
															"src": "958:9:12"
														},
														"nativeSrc": "958:18:12",
														"nodeType": "YulFunctionCall",
														"src": "958:18:12"
													},
													"variables": [
														{
															"name": "data",
															"nativeSrc": "950:4:12",
															"nodeType": "YulTypedName",
															"src": "950:4:12",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "989:57:12",
													"nodeType": "YulVariableDeclaration",
													"src": "989:57:12",
													"value": {
														"arguments": [
															{
																"name": "data",
																"nativeSrc": "1012:4:12",
																"nodeType": "YulIdentifier",
																"src": "1012:4:12"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1022:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1022:1:12",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "startIndex",
																				"nativeSrc": "1029:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "1029:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1041:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1041:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:12"
																		},
																		"nativeSrc": "1025:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:19:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1018:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1018:3:12"
																},
																"nativeSrc": "1018:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1018:27:12"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "1008:3:12",
															"nodeType": "YulIdentifier",
															"src": "1008:3:12"
														},
														"nativeSrc": "1008:38:12",
														"nodeType": "YulFunctionCall",
														"src": "1008:38:12"
													},
													"variables": [
														{
															"name": "deleteStart",
															"nativeSrc": "993:11:12",
															"nodeType": "YulTypedName",
															"src": "993:11:12",
															"type": ""
														}
													]
												},
												{
													"body": {
														"nativeSrc": "1083:23:12",
														"nodeType": "YulBlock",
														"src": "1083:23:12",
														"statements": [
															{
																"nativeSrc": "1085:19:12",
																"nodeType": "YulAssignment",
																"src": "1085:19:12",
																"value": {
																	"name": "data",
																	"nativeSrc": "1100:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1100:4:12"
																},
																"variableNames": [
																	{
																		"name": "deleteStart",
																		"nativeSrc": "1085:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "1085:11:12"
																	}
																]
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "startIndex",
																"nativeSrc": "1065:10:12",
																"nodeType": "YulIdentifier",
																"src": "1065:10:12"
															},
															{
																"kind": "number",
																"nativeSrc": "1077:4:12",
																"nodeType": "YulLiteral",
																"src": "1077:4:12",
																"type": "",
																"value": "0x20"
															}
														],
														"functionName": {
															"name": "lt",
															"nativeSrc": "1062:2:12",
															"nodeType": "YulIdentifier",
															"src": "1062:2:12"
														},
														"nativeSrc": "1062:20:12",
														"nodeType": "YulFunctionCall",
														"src": "1062:20:12"
													},
													"nativeSrc": "1059:47:12",
													"nodeType": "YulIf",
													"src": "1059:47:12"
												},
												{
													"nativeSrc": "1119:41:12",
													"nodeType": "YulVariableDeclaration",
													"src": "1119:41:12",
													"value": {
														"arguments": [
															{
																"name": "data",
																"nativeSrc": "1133:4:12",
																"nodeType": "YulIdentifier",
																"src": "1133:4:12"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1143:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1143:1:12",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "len",
																				"nativeSrc": "1150:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1150:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1155:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1155:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1146:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:12"
																		},
																		"nativeSrc": "1146:12:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1146:12:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1139:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:12"
																},
																"nativeSrc": "1139:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1139:20:12"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "1129:3:12",
															"nodeType": "YulIdentifier",
															"src": "1129:3:12"
														},
														"nativeSrc": "1129:31:12",
														"nodeType": "YulFunctionCall",
														"src": "1129:31:12"
													},
													"variables": [
														{
															"name": "_1",
															"nativeSrc": "1123:2:12",
															"nodeType": "YulTypedName",
															"src": "1123:2:12",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "1173:24:12",
													"nodeType": "YulVariableDeclaration",
													"src": "1173:24:12",
													"value": {
														"name": "deleteStart",
														"nativeSrc": "1186:11:12",
														"nodeType": "YulIdentifier",
														"src": "1186:11:12"
													},
													"variables": [
														{
															"name": "start",
															"nativeSrc": "1177:5:12",
															"nodeType": "YulTypedName",
															"src": "1177:5:12",
															"type": ""
														}
													]
												},
												{
													"body": {
														"nativeSrc": "1271:20:12",
														"nodeType": "YulBlock",
														"src": "1271:20:12",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"name": "start",
																			"nativeSrc": "1280:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "1280:5:12"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "1287:1:12",
																			"nodeType": "YulLiteral",
																			"src": "1287:1:12",
																			"type": "",
																			"value": "0"
																		}
																	],
																	"functionName": {
																		"name": "sstore",
																		"nativeSrc": "1273:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1273:6:12"
																	},
																	"nativeSrc": "1273:16:12",
																	"nodeType": "YulFunctionCall",
																	"src": "1273:16:12"
																},
																"nativeSrc": "1273:16:12",
																"nodeType": "YulExpressionStatement",
																"src": "1273:16:12"
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "start",
																"nativeSrc": "1221:5:12",
																"nodeType": "YulIdentifier",
																"src": "1221:5:12"
															},
															{
																"name": "_1",
																"nativeSrc": "1228:2:12",
																"nodeType": "YulIdentifier",
																"src": "1228:2:12"
															}
														],
														"functionName": {
															"name": "lt",
															"nativeSrc": "1218:2:12",
															"nodeType": "YulIdentifier",
															"src": "1218:2:12"
														},
														"nativeSrc": "1218:13:12",
														"nodeType": "YulFunctionCall",
														"src": "1218:13:12"
													},
													"nativeSrc": "1210:81:12",
													"nodeType": "YulForLoop",
													"post": {
														"nativeSrc": "1232:26:12",
														"nodeType": "YulBlock",
														"src": "1232:26:12",
														"statements": [
															{
																"nativeSrc": "1234:22:12",
																"nodeType": "YulAssignment",
																"src": "1234:22:12",
																"value": {
																	"arguments": [
																		{
																			"name": "start",
																			"nativeSrc": "1247:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "1247:5:12"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "1254:1:12",
																			"nodeType": "YulLiteral",
																			"src": "1254:1:12",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nativeSrc": "1243:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1243:3:12"
																	},
																	"nativeSrc": "1243:13:12",
																	"nodeType": "YulFunctionCall",
																	"src": "1243:13:12"
																},
																"variableNames": [
																	{
																		"name": "start",
																		"nativeSrc": "1234:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1234:5:12"
																	}
																]
															}
														]
													},
													"pre": {
														"nativeSrc": "1214:3:12",
														"nodeType": "YulBlock",
														"src": "1214:3:12",
														"statements": []
													},
													"src": "1210:81:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "len",
													"nativeSrc": "886:3:12",
													"nodeType": "YulIdentifier",
													"src": "886:3:12"
												},
												{
													"kind": "number",
													"nativeSrc": "891:2:12",
													"nodeType": "YulLiteral",
													"src": "891:2:12",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "883:2:12",
												"nodeType": "YulIdentifier",
												"src": "883:2:12"
											},
											"nativeSrc": "883:11:12",
											"nodeType": "YulFunctionCall",
											"src": "883:11:12"
										},
										"nativeSrc": "880:421:12",
										"nodeType": "YulIf",
										"src": "880:421:12"
									}
								]
							},
							"name": "clean_up_bytearray_end_slots_string_storage",
							"nativeSrc": "789:518:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "array",
									"nativeSrc": "842:5:12",
									"nodeType": "YulTypedName",
									"src": "842:5:12",
									"type": ""
								},
								{
									"name": "len",
									"nativeSrc": "849:3:12",
									"nodeType": "YulTypedName",
									"src": "849:3:12",
									"type": ""
								},
								{
									"name": "startIndex",
									"nativeSrc": "854:10:12",
									"nodeType": "YulTypedName",
									"src": "854:10:12",
									"type": ""
								}
							],
							"src": "789:518:12"
						},
						{
							"body": {
								"nativeSrc": "1397:81:12",
								"nodeType": "YulBlock",
								"src": "1397:81:12",
								"statements": [
									{
										"nativeSrc": "1407:65:12",
										"nodeType": "YulAssignment",
										"src": "1407:65:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "data",
															"nativeSrc": "1422:4:12",
															"nodeType": "YulIdentifier",
															"src": "1422:4:12"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1440:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1440:1:12",
																					"type": "",
																					"value": "3"
																				},
																				{
																					"name": "len",
																					"nativeSrc": "1443:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1443:3:12"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "1436:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1436:3:12"
																			},
																			"nativeSrc": "1436:11:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1436:11:12"
																		},
																		{
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "not",
																				"nativeSrc": "1449:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1449:3:12"
																			},
																			"nativeSrc": "1449:6:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1449:6:12"
																		}
																	],
																	"functionName": {
																		"name": "shr",
																		"nativeSrc": "1432:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1432:3:12"
																	},
																	"nativeSrc": "1432:24:12",
																	"nodeType": "YulFunctionCall",
																	"src": "1432:24:12"
																}
															],
															"functionName": {
																"name": "not",
																"nativeSrc": "1428:3:12",
																"nodeType": "YulIdentifier",
																"src": "1428:3:12"
															},
															"nativeSrc": "1428:29:12",
															"nodeType": "YulFunctionCall",
															"src": "1428:29:12"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "1418:3:12",
														"nodeType": "YulIdentifier",
														"src": "1418:3:12"
													},
													"nativeSrc": "1418:40:12",
													"nodeType": "YulFunctionCall",
													"src": "1418:40:12"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "1464:1:12",
															"nodeType": "YulLiteral",
															"src": "1464:1:12",
															"type": "",
															"value": "1"
														},
														{
															"name": "len",
															"nativeSrc": "1467:3:12",
															"nodeType": "YulIdentifier",
															"src": "1467:3:12"
														}
													],
													"functionName": {
														"name": "shl",
														"nativeSrc": "1460:3:12",
														"nodeType": "YulIdentifier",
														"src": "1460:3:12"
													},
													"nativeSrc": "1460:11:12",
													"nodeType": "YulFunctionCall",
													"src": "1460:11:12"
												}
											],
											"functionName": {
												"name": "or",
												"nativeSrc": "1415:2:12",
												"nodeType": "YulIdentifier",
												"src": "1415:2:12"
											},
											"nativeSrc": "1415:57:12",
											"nodeType": "YulFunctionCall",
											"src": "1415:57:12"
										},
										"variableNames": [
											{
												"name": "used",
												"nativeSrc": "1407:4:12",
												"nodeType": "YulIdentifier",
												"src": "1407:4:12"
											}
										]
									}
								]
							},
							"name": "extract_used_part_and_set_length_of_short_byte_array",
							"nativeSrc": "1312:166:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "1374:4:12",
									"nodeType": "YulTypedName",
									"src": "1374:4:12",
									"type": ""
								},
								{
									"name": "len",
									"nativeSrc": "1380:3:12",
									"nodeType": "YulTypedName",
									"src": "1380:3:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "used",
									"nativeSrc": "1388:4:12",
									"nodeType": "YulTypedName",
									"src": "1388:4:12",
									"type": ""
								}
							],
							"src": "1312:166:12"
						},
						{
							"body": {
								"nativeSrc": "1579:1249:12",
								"nodeType": "YulBlock",
								"src": "1579:1249:12",
								"statements": [
									{
										"nativeSrc": "1589:24:12",
										"nodeType": "YulVariableDeclaration",
										"src": "1589:24:12",
										"value": {
											"arguments": [
												{
													"name": "src",
													"nativeSrc": "1609:3:12",
													"nodeType": "YulIdentifier",
													"src": "1609:3:12"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "1603:5:12",
												"nodeType": "YulIdentifier",
												"src": "1603:5:12"
											},
											"nativeSrc": "1603:10:12",
											"nodeType": "YulFunctionCall",
											"src": "1603:10:12"
										},
										"variables": [
											{
												"name": "newLen",
												"nativeSrc": "1593:6:12",
												"nodeType": "YulTypedName",
												"src": "1593:6:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "1656:22:12",
											"nodeType": "YulBlock",
											"src": "1656:22:12",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x41",
															"nativeSrc": "1658:16:12",
															"nodeType": "YulIdentifier",
															"src": "1658:16:12"
														},
														"nativeSrc": "1658:18:12",
														"nodeType": "YulFunctionCall",
														"src": "1658:18:12"
													},
													"nativeSrc": "1658:18:12",
													"nodeType": "YulExpressionStatement",
													"src": "1658:18:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "newLen",
													"nativeSrc": "1628:6:12",
													"nodeType": "YulIdentifier",
													"src": "1628:6:12"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"kind": "number",
																	"nativeSrc": "1644:2:12",
																	"nodeType": "YulLiteral",
																	"src": "1644:2:12",
																	"type": "",
																	"value": "64"
																},
																{
																	"kind": "number",
																	"nativeSrc": "1648:1:12",
																	"nodeType": "YulLiteral",
																	"src": "1648:1:12",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "shl",
																"nativeSrc": "1640:3:12",
																"nodeType": "YulIdentifier",
																"src": "1640:3:12"
															},
															"nativeSrc": "1640:10:12",
															"nodeType": "YulFunctionCall",
															"src": "1640:10:12"
														},
														{
															"kind": "number",
															"nativeSrc": "1652:1:12",
															"nodeType": "YulLiteral",
															"src": "1652:1:12",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "1636:3:12",
														"nodeType": "YulIdentifier",
														"src": "1636:3:12"
													},
													"nativeSrc": "1636:18:12",
													"nodeType": "YulFunctionCall",
													"src": "1636:18:12"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "1625:2:12",
												"nodeType": "YulIdentifier",
												"src": "1625:2:12"
											},
											"nativeSrc": "1625:30:12",
											"nodeType": "YulFunctionCall",
											"src": "1625:30:12"
										},
										"nativeSrc": "1622:56:12",
										"nodeType": "YulIf",
										"src": "1622:56:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nativeSrc": "1731:4:12",
													"nodeType": "YulIdentifier",
													"src": "1731:4:12"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "slot",
																	"nativeSrc": "1769:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1769:4:12"
																}
															],
															"functionName": {
																"name": "sload",
																"nativeSrc": "1763:5:12",
																"nodeType": "YulIdentifier",
																"src": "1763:5:12"
															},
															"nativeSrc": "1763:11:12",
															"nodeType": "YulFunctionCall",
															"src": "1763:11:12"
														}
													],
													"functionName": {
														"name": "extract_byte_array_length",
														"nativeSrc": "1737:25:12",
														"nodeType": "YulIdentifier",
														"src": "1737:25:12"
													},
													"nativeSrc": "1737:38:12",
													"nodeType": "YulFunctionCall",
													"src": "1737:38:12"
												},
												{
													"name": "newLen",
													"nativeSrc": "1777:6:12",
													"nodeType": "YulIdentifier",
													"src": "1777:6:12"
												}
											],
											"functionName": {
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1687:43:12",
												"nodeType": "YulIdentifier",
												"src": "1687:43:12"
											},
											"nativeSrc": "1687:97:12",
											"nodeType": "YulFunctionCall",
											"src": "1687:97:12"
										},
										"nativeSrc": "1687:97:12",
										"nodeType": "YulExpressionStatement",
										"src": "1687:97:12"
									},
									{
										"nativeSrc": "1793:18:12",
										"nodeType": "YulVariableDeclaration",
										"src": "1793:18:12",
										"value": {
											"kind": "number",
											"nativeSrc": "1810:1:12",
											"nodeType": "YulLiteral",
											"src": "1810:1:12",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "srcOffset",
												"nativeSrc": "1797:9:12",
												"nodeType": "YulTypedName",
												"src": "1797:9:12",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "1820:23:12",
										"nodeType": "YulVariableDeclaration",
										"src": "1820:23:12",
										"value": {
											"kind": "number",
											"nativeSrc": "1839:4:12",
											"nodeType": "YulLiteral",
											"src": "1839:4:12",
											"type": "",
											"value": "0x20"
										},
										"variables": [
											{
												"name": "srcOffset_1",
												"nativeSrc": "1824:11:12",
												"nodeType": "YulTypedName",
												"src": "1824:11:12",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "1852:17:12",
										"nodeType": "YulAssignment",
										"src": "1852:17:12",
										"value": {
											"kind": "number",
											"nativeSrc": "1865:4:12",
											"nodeType": "YulLiteral",
											"src": "1865:4:12",
											"type": "",
											"value": "0x20"
										},
										"variableNames": [
											{
												"name": "srcOffset",
												"nativeSrc": "1852:9:12",
												"nodeType": "YulIdentifier",
												"src": "1852:9:12"
											}
										]
									},
									{
										"cases": [
											{
												"body": {
													"nativeSrc": "1915:656:12",
													"nodeType": "YulBlock",
													"src": "1915:656:12",
													"statements": [
														{
															"nativeSrc": "1929:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1929:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1948:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1948:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1960:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1960:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1956:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1956:3:12"
																		},
																		"nativeSrc": "1956:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1956:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1944:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1944:3:12"
																},
																"nativeSrc": "1944:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1944:20:12"
															},
															"variables": [
																{
																	"name": "loopEnd",
																	"nativeSrc": "1933:7:12",
																	"nodeType": "YulTypedName",
																	"src": "1933:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1977:49:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1977:49:12",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2021:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2021:4:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_string_storage",
																	"nativeSrc": "1991:29:12",
																	"nodeType": "YulIdentifier",
																	"src": "1991:29:12"
																},
																"nativeSrc": "1991:35:12",
																"nodeType": "YulFunctionCall",
																"src": "1991:35:12"
															},
															"variables": [
																{
																	"name": "dstPtr",
																	"nativeSrc": "1981:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1981:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2039:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2039:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2048:1:12",
																"nodeType": "YulLiteral",
																"src": "2048:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2043:1:12",
																	"nodeType": "YulTypedName",
																	"src": "2043:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2126:172:12",
																"nodeType": "YulBlock",
																"src": "2126:172:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "2151:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "2151:6:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "2169:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2169:3:12"
																								},
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2174:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "2174:9:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2165:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2165:3:12"
																							},
																							"nativeSrc": "2165:19:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2165:19:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2159:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2159:5:12"
																					},
																					"nativeSrc": "2159:26:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2159:26:12"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "2144:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2144:6:12"
																			},
																			"nativeSrc": "2144:42:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2144:42:12"
																		},
																		"nativeSrc": "2144:42:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2144:42:12"
																	},
																	{
																		"nativeSrc": "2203:24:12",
																		"nodeType": "YulAssignment",
																		"src": "2203:24:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "2217:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "2217:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2225:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2225:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2213:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2213:3:12"
																			},
																			"nativeSrc": "2213:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2213:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "dstPtr",
																				"nativeSrc": "2203:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2244:40:12",
																		"nodeType": "YulAssignment",
																		"src": "2244:40:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcOffset",
																					"nativeSrc": "2261:9:12",
																					"nodeType": "YulIdentifier",
																					"src": "2261:9:12"
																				},
																				{
																					"name": "srcOffset_1",
																					"nativeSrc": "2272:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "2272:11:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2257:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2257:3:12"
																			},
																			"nativeSrc": "2257:27:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2257:27:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcOffset",
																				"nativeSrc": "2244:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2244:9:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2073:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2073:1:12"
																	},
																	{
																		"name": "loopEnd",
																		"nativeSrc": "2076:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "2076:7:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2070:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2070:2:12"
																},
																"nativeSrc": "2070:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2070:14:12"
															},
															"nativeSrc": "2062:236:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2085:28:12",
																"nodeType": "YulBlock",
																"src": "2085:28:12",
																"statements": [
																	{
																		"nativeSrc": "2087:24:12",
																		"nodeType": "YulAssignment",
																		"src": "2087:24:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2096:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "2096:1:12"
																				},
																				{
																					"name": "srcOffset_1",
																					"nativeSrc": "2099:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "2099:11:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2092:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2092:3:12"
																			},
																			"nativeSrc": "2092:19:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2092:19:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2087:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2087:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2066:3:12",
																"nodeType": "YulBlock",
																"src": "2066:3:12",
																"statements": []
															},
															"src": "2062:236:12"
														},
														{
															"body": {
																"nativeSrc": "2346:166:12",
																"nodeType": "YulBlock",
																"src": "2346:166:12",
																"statements": [
																	{
																		"nativeSrc": "2364:43:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2364:43:12",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "2391:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2391:3:12"
																						},
																						{
																							"name": "srcOffset",
																							"nativeSrc": "2396:9:12",
																							"nodeType": "YulIdentifier",
																							"src": "2396:9:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2387:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2387:3:12"
																					},
																					"nativeSrc": "2387:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2387:19:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2381:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2381:5:12"
																			},
																			"nativeSrc": "2381:26:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2381:26:12"
																		},
																		"variables": [
																			{
																				"name": "lastValue",
																				"nativeSrc": "2368:9:12",
																				"nodeType": "YulTypedName",
																				"src": "2368:9:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "2431:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "2431:6:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "lastValue",
																							"nativeSrc": "2443:9:12",
																							"nodeType": "YulIdentifier",
																							"src": "2443:9:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "2470:1:12",
																															"nodeType": "YulLiteral",
																															"src": "2470:1:12",
																															"type": "",
																															"value": "3"
																														},
																														{
																															"name": "newLen",
																															"nativeSrc": "2473:6:12",
																															"nodeType": "YulIdentifier",
																															"src": "2473:6:12"
																														}
																													],
																													"functionName": {
																														"name": "shl",
																														"nativeSrc": "2466:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "2466:3:12"
																													},
																													"nativeSrc": "2466:14:12",
																													"nodeType": "YulFunctionCall",
																													"src": "2466:14:12"
																												},
																												{
																													"kind": "number",
																													"nativeSrc": "2482:3:12",
																													"nodeType": "YulLiteral",
																													"src": "2482:3:12",
																													"type": "",
																													"value": "248"
																												}
																											],
																											"functionName": {
																												"name": "and",
																												"nativeSrc": "2462:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "2462:3:12"
																											},
																											"nativeSrc": "2462:24:12",
																											"nodeType": "YulFunctionCall",
																											"src": "2462:24:12"
																										},
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "2492:1:12",
																													"nodeType": "YulLiteral",
																													"src": "2492:1:12",
																													"type": "",
																													"value": "0"
																												}
																											],
																											"functionName": {
																												"name": "not",
																												"nativeSrc": "2488:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "2488:3:12"
																											},
																											"nativeSrc": "2488:6:12",
																											"nodeType": "YulFunctionCall",
																											"src": "2488:6:12"
																										}
																									],
																									"functionName": {
																										"name": "shr",
																										"nativeSrc": "2458:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "2458:3:12"
																									},
																									"nativeSrc": "2458:37:12",
																									"nodeType": "YulFunctionCall",
																									"src": "2458:37:12"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2454:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2454:3:12"
																							},
																							"nativeSrc": "2454:42:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2454:42:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2439:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2439:3:12"
																					},
																					"nativeSrc": "2439:58:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2439:58:12"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "2424:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2424:6:12"
																			},
																			"nativeSrc": "2424:74:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2424:74:12"
																		},
																		"nativeSrc": "2424:74:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2424:74:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "loopEnd",
																		"nativeSrc": "2317:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "2317:7:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2326:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2326:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2314:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2314:2:12"
																},
																"nativeSrc": "2314:19:12",
																"nodeType": "YulFunctionCall",
																"src": "2314:19:12"
															},
															"nativeSrc": "2311:201:12",
															"nodeType": "YulIf",
															"src": "2311:201:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2532:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2532:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2546:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2546:1:12",
																						"type": "",
																						"value": "1"
																					},
																					{
																						"name": "newLen",
																						"nativeSrc": "2549:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2549:6:12"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2542:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2542:3:12"
																				},
																				"nativeSrc": "2542:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2542:14:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2558:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2558:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2538:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2538:3:12"
																		},
																		"nativeSrc": "2538:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2538:22:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2525:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2525:6:12"
																},
																"nativeSrc": "2525:36:12",
																"nodeType": "YulFunctionCall",
																"src": "2525:36:12"
															},
															"nativeSrc": "2525:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "2525:36:12"
														}
													]
												},
												"nativeSrc": "1908:663:12",
												"nodeType": "YulCase",
												"src": "1908:663:12",
												"value": {
													"kind": "number",
													"nativeSrc": "1913:1:12",
													"nodeType": "YulLiteral",
													"src": "1913:1:12",
													"type": "",
													"value": "1"
												}
											},
											{
												"body": {
													"nativeSrc": "2588:234:12",
													"nodeType": "YulBlock",
													"src": "2588:234:12",
													"statements": [
														{
															"nativeSrc": "2602:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2602:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2615:1:12",
																"nodeType": "YulLiteral",
																"src": "2615:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2606:5:12",
																	"nodeType": "YulTypedName",
																	"src": "2606:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2651:67:12",
																"nodeType": "YulBlock",
																"src": "2651:67:12",
																"statements": [
																	{
																		"nativeSrc": "2669:35:12",
																		"nodeType": "YulAssignment",
																		"src": "2669:35:12",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "2688:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2688:3:12"
																						},
																						{
																							"name": "srcOffset",
																							"nativeSrc": "2693:9:12",
																							"nodeType": "YulIdentifier",
																							"src": "2693:9:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2684:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2684:3:12"
																					},
																					"nativeSrc": "2684:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2684:19:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2678:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2678:5:12"
																			},
																			"nativeSrc": "2678:26:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2678:26:12"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "2669:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2669:5:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"name": "newLen",
																"nativeSrc": "2632:6:12",
																"nodeType": "YulIdentifier",
																"src": "2632:6:12"
															},
															"nativeSrc": "2629:89:12",
															"nodeType": "YulIf",
															"src": "2629:89:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2738:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2738:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2797:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2797:5:12"
																			},
																			{
																				"name": "newLen",
																				"nativeSrc": "2804:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2804:6:12"
																			}
																		],
																		"functionName": {
																			"name": "extract_used_part_and_set_length_of_short_byte_array",
																			"nativeSrc": "2744:52:12",
																			"nodeType": "YulIdentifier",
																			"src": "2744:52:12"
																		},
																		"nativeSrc": "2744:67:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2744:67:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2731:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2731:6:12"
																},
																"nativeSrc": "2731:81:12",
																"nodeType": "YulFunctionCall",
																"src": "2731:81:12"
															},
															"nativeSrc": "2731:81:12",
															"nodeType": "YulExpressionStatement",
															"src": "2731:81:12"
														}
													]
												},
												"nativeSrc": "2580:242:12",
												"nodeType": "YulCase",
												"src": "2580:242:12",
												"value": "default"
											}
										],
										"expression": {
											"arguments": [
												{
													"name": "newLen",
													"nativeSrc": "1888:6:12",
													"nodeType": "YulIdentifier",
													"src": "1888:6:12"
												},
												{
													"kind": "number",
													"nativeSrc": "1896:2:12",
													"nodeType": "YulLiteral",
													"src": "1896:2:12",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "1885:2:12",
												"nodeType": "YulIdentifier",
												"src": "1885:2:12"
											},
											"nativeSrc": "1885:14:12",
											"nodeType": "YulFunctionCall",
											"src": "1885:14:12"
										},
										"nativeSrc": "1878:944:12",
										"nodeType": "YulSwitch",
										"src": "1878:944:12"
									}
								]
							},
							"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
							"nativeSrc": "1483:1345:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nativeSrc": "1564:4:12",
									"nodeType": "YulTypedName",
									"src": "1564:4:12",
									"type": ""
								},
								{
									"name": "src",
									"nativeSrc": "1570:3:12",
									"nodeType": "YulTypedName",
									"src": "1570:3:12",
									"type": ""
								}
							],
							"src": "1483:1345:12"
						},
						{
							"body": {
								"nativeSrc": "2934:102:12",
								"nodeType": "YulBlock",
								"src": "2934:102:12",
								"statements": [
									{
										"nativeSrc": "2944:26:12",
										"nodeType": "YulAssignment",
										"src": "2944:26:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2956:9:12",
													"nodeType": "YulIdentifier",
													"src": "2956:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "2967:2:12",
													"nodeType": "YulLiteral",
													"src": "2967:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2952:3:12",
												"nodeType": "YulIdentifier",
												"src": "2952:3:12"
											},
											"nativeSrc": "2952:18:12",
											"nodeType": "YulFunctionCall",
											"src": "2952:18:12"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "2944:4:12",
												"nodeType": "YulIdentifier",
												"src": "2944:4:12"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2986:9:12",
													"nodeType": "YulIdentifier",
													"src": "2986:9:12"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nativeSrc": "3001:6:12",
															"nodeType": "YulIdentifier",
															"src": "3001:6:12"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "3017:3:12",
																			"nodeType": "YulLiteral",
																			"src": "3017:3:12",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "3022:1:12",
																			"nodeType": "YulLiteral",
																			"src": "3022:1:12",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nativeSrc": "3013:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3013:3:12"
																	},
																	"nativeSrc": "3013:11:12",
																	"nodeType": "YulFunctionCall",
																	"src": "3013:11:12"
																},
																{
																	"kind": "number",
																	"nativeSrc": "3026:1:12",
																	"nodeType": "YulLiteral",
																	"src": "3026:1:12",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nativeSrc": "3009:3:12",
																"nodeType": "YulIdentifier",
																"src": "3009:3:12"
															},
															"nativeSrc": "3009:19:12",
															"nodeType": "YulFunctionCall",
															"src": "3009:19:12"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "2997:3:12",
														"nodeType": "YulIdentifier",
														"src": "2997:3:12"
													},
													"nativeSrc": "2997:32:12",
													"nodeType": "YulFunctionCall",
													"src": "2997:32:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2979:6:12",
												"nodeType": "YulIdentifier",
												"src": "2979:6:12"
											},
											"nativeSrc": "2979:51:12",
											"nodeType": "YulFunctionCall",
											"src": "2979:51:12"
										},
										"nativeSrc": "2979:51:12",
										"nodeType": "YulExpressionStatement",
										"src": "2979:51:12"
									}
								]
							},
							"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
							"nativeSrc": "2833:203:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2903:9:12",
									"nodeType": "YulTypedName",
									"src": "2903:9:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "2914:6:12",
									"nodeType": "YulTypedName",
									"src": "2914:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "2925:4:12",
									"nodeType": "YulTypedName",
									"src": "2925:4:12",
									"type": ""
								}
							],
							"src": "2833:203:12"
						},
						{
							"body": {
								"nativeSrc": "3169:144:12",
								"nodeType": "YulBlock",
								"src": "3169:144:12",
								"statements": [
									{
										"nativeSrc": "3179:26:12",
										"nodeType": "YulAssignment",
										"src": "3179:26:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3191:9:12",
													"nodeType": "YulIdentifier",
													"src": "3191:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "3202:2:12",
													"nodeType": "YulLiteral",
													"src": "3202:2:12",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3187:3:12",
												"nodeType": "YulIdentifier",
												"src": "3187:3:12"
											},
											"nativeSrc": "3187:18:12",
											"nodeType": "YulFunctionCall",
											"src": "3187:18:12"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3179:4:12",
												"nodeType": "YulIdentifier",
												"src": "3179:4:12"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3221:9:12",
													"nodeType": "YulIdentifier",
													"src": "3221:9:12"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nativeSrc": "3236:6:12",
															"nodeType": "YulIdentifier",
															"src": "3236:6:12"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "3252:2:12",
																			"nodeType": "YulLiteral",
																			"src": "3252:2:12",
																			"type": "",
																			"value": "96"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "3256:1:12",
																			"nodeType": "YulLiteral",
																			"src": "3256:1:12",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nativeSrc": "3248:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3248:3:12"
																	},
																	"nativeSrc": "3248:10:12",
																	"nodeType": "YulFunctionCall",
																	"src": "3248:10:12"
																},
																{
																	"kind": "number",
																	"nativeSrc": "3260:1:12",
																	"nodeType": "YulLiteral",
																	"src": "3260:1:12",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nativeSrc": "3244:3:12",
																"nodeType": "YulIdentifier",
																"src": "3244:3:12"
															},
															"nativeSrc": "3244:18:12",
															"nodeType": "YulFunctionCall",
															"src": "3244:18:12"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "3232:3:12",
														"nodeType": "YulIdentifier",
														"src": "3232:3:12"
													},
													"nativeSrc": "3232:31:12",
													"nodeType": "YulFunctionCall",
													"src": "3232:31:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3214:6:12",
												"nodeType": "YulIdentifier",
												"src": "3214:6:12"
											},
											"nativeSrc": "3214:50:12",
											"nodeType": "YulFunctionCall",
											"src": "3214:50:12"
										},
										"nativeSrc": "3214:50:12",
										"nodeType": "YulExpressionStatement",
										"src": "3214:50:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3284:9:12",
															"nodeType": "YulIdentifier",
															"src": "3284:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "3295:2:12",
															"nodeType": "YulLiteral",
															"src": "3295:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3280:3:12",
														"nodeType": "YulIdentifier",
														"src": "3280:3:12"
													},
													"nativeSrc": "3280:18:12",
													"nodeType": "YulFunctionCall",
													"src": "3280:18:12"
												},
												{
													"name": "value1",
													"nativeSrc": "3300:6:12",
													"nodeType": "YulIdentifier",
													"src": "3300:6:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3273:6:12",
												"nodeType": "YulIdentifier",
												"src": "3273:6:12"
											},
											"nativeSrc": "3273:34:12",
											"nodeType": "YulFunctionCall",
											"src": "3273:34:12"
										},
										"nativeSrc": "3273:34:12",
										"nodeType": "YulExpressionStatement",
										"src": "3273:34:12"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
							"nativeSrc": "3041:272:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3130:9:12",
									"nodeType": "YulTypedName",
									"src": "3130:9:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "3141:6:12",
									"nodeType": "YulTypedName",
									"src": "3141:6:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "3149:6:12",
									"nodeType": "YulTypedName",
									"src": "3149:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "3160:4:12",
									"nodeType": "YulTypedName",
									"src": "3160:4:12",
									"type": ""
								}
							],
							"src": "3041:272:12"
						}
					]
				},
				"contents": "{\n    { }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(96, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
				"id": 12,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"linkReferences": {},
		"object": "600b805460ff60a01b191690556012805460ff19169055610100604052605c60808181529061285660a03960139061003790826102b7565b50348015610043575f80fd5b503360405180604001604052806008815260200167476c6f6f6d65727360c01b81525060405180604001604052806008815260200167474c4f4f4d45525360c01b815250610d066100998161011260201b60201c565b5060026100a683826102b7565b5060036100b382826102b7565b506100bc61011a565b5f556100c661011a565b5050506001600160a01b0381166100f757604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6101008161012c565b5061010d336101f461017d565b610376565b6328f7503255565b5f6101276328f750325490565b905090565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6127106001600160601b0382168110156101bc57604051636f483d0960e01b81526001600160601b0383166004820152602481018290526044016100ee565b6001600160a01b0383166101e557604051635b6cc80560e11b81525f60048201526024016100ee565b50604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600955565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061024757607f821691505b60208210810361026557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102b257805f5260205f20601f840160051c810160208510156102905750805b601f840160051c820191505b818110156102af575f815560010161029c565b50505b505050565b81516001600160401b038111156102d0576102d061021f565b6102e4816102de8454610233565b8461026b565b602080601f831160018114610317575f84156103005750858301515b5f19600386901b1c1916600185901b17855561036e565b5f85815260208120601f198616915b8281101561034557888601518255948401946001909101908401610326565b508582101561036257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6124d3806103835f395ff3fe608060405260043610610231575f3560e01c8063833b94991161012c578063b19960e6116100af578063c87b56dd11610076578063c87b56dd14610661578063e6798baa14610680578063e985e9c514610697578063f2fde38b146106de578063fe776953146106fd578063ff1b65561461071457005b8063b19960e6146105bb578063b19fde5a146105cf578063b88d4fde14610603578063c23dc68f14610616578063c62001bd1461064257005b806395d89b41116100f357806395d89b411461054257806399a2557a146105565780639a4f41ba14610575578063a0712d6814610589578063a22cb4651461059c57005b8063833b9499146104b55780638462151c146104cf57806386879235146104fb57806387f65c91146105105780638da5cb5b1461052557005b806329510d34116101b45780634b962d101161017b5780634b962d10146104185780635bbb2177146104375780636352211e1461046357806370a0823114610482578063715018a6146104a157005b806329510d34146103735780632a55205a146103865780633ccfd60b146103c457806342842e0e146103d857806346b00b6d146103eb57005b8063081812fc116101f8578063081812fc146102e1578063095ea7b31461031857806318160ddd1461032b57806323b872dd1461034d578063242261ac1461036057005b806301ffc9a71461023a57806304634d8d1461026e578063046ef9a51461028d5780630675b7c6146102a157806306fdde03146102c057005b3661023857005b005b348015610245575f80fd5b50610259610254366004611d70565b610747565b60405190151581526020015b60405180910390f35b348015610279575f80fd5b50610238610288366004611da8565b610766565b348015610298575f80fd5b5061023861077c565b3480156102ac575f80fd5b506102386102bb366004611de8565b610932565b3480156102cb575f80fd5b506102d4610999565b6040516102659190611e82565b3480156102ec575f80fd5b506103006102fb366004611e94565b610a29565b6040516001600160a01b039091168152602001610265565b610238610326366004611eab565b610a62565b348015610336575f80fd5b5061033f610a6e565b604051908152602001610265565b61023861035b366004611ed3565b610a83565b61023861036e366004611f0c565b610bdd565b610238610381366004611f0c565b610e02565b348015610391575f80fd5b506103a56103a0366004611f0c565b61102d565b604080516001600160a01b039093168352602083019190915201610265565b3480156103cf575f80fd5b506102386110d7565b6102386103e6366004611ed3565b61110b565b3480156103f6575f80fd5b50600b5461040b90600160a01b900460ff1681565b6040516102659190611f40565b348015610423575f80fd5b50610238610432366004611f66565b61112a565b348015610442575f80fd5b50610456610451366004611f84565b611196565b604051610265919061201e565b34801561046e575f80fd5b5061030061047d366004611e94565b6111e1565b34801561048d575f80fd5b5061033f61049c36600461206b565b6111eb565b3480156104ac575f80fd5b5061023861122f565b3480156104c0575f80fd5b5061033f666a94d74f43000081565b3480156104da575f80fd5b506104ee6104e936600461206b565b611242565b6040516102659190612084565b348015610506575f80fd5b5061033f611a0a81565b34801561051b575f80fd5b5061033f610d0681565b348015610530575f80fd5b50600b546001600160a01b0316610300565b34801561054d575f80fd5b506102d4611279565b348015610561575f80fd5b506104ee6105703660046120bb565b611288565b348015610580575f80fd5b5061033f611295565b610238610597366004611e94565b6112a8565b3480156105a7575f80fd5b506102386105b63660046120eb565b611489565b3480156105c6575f80fd5b5061033f600381565b3480156105da575f80fd5b5061033f6105e936600461206b565b6001600160a01b03165f908152600d602052604090205490565b61023861061136600461212d565b6114f4565b348015610621575f80fd5b50610635610630366004611e94565b611535565b6040516102659190612202565b34801561064d575f80fd5b5061023861065c366004611e94565b61159b565b34801561066c575f80fd5b506102d461067b366004611e94565b6115a8565b34801561068b575f80fd5b506328f750325461033f565b3480156106a2575f80fd5b506102596106b1366004612210565b6001600160a01b039182165f90815260076020908152604080832093909416825291909152205460ff1690565b3480156106e9575f80fd5b506102386106f836600461206b565b611661565b348015610708575f80fd5b5061033f6366365b8081565b34801561071f575f80fd5b5061033f7f5158cf3ac201d8d9dfe63ac7c7d1e7aa58b7c33426665c9bf643e0003e095e2f81565b5f610751826116a0565b806107605750610760826116ed565b92915050565b61076e611721565b610778828261174e565b5050565b5f600b54600160a01b900460ff16600381111561079b5761079b611f2c565b036107b95760405163af79b43760e01b815260040160405180910390fd5b6366365b804210156107de5760405163024fbaa960e41b815260040160405180910390fd5b335f908152600d6020526040812054900361080c57604051637c75aa6f60e11b815260040160405180910390fd5b335f908152600d6020908152604080832054600c909252909120546003908290610837908290612255565b6108419190612255565b1180156108595750600b546001600160a01b03163314155b15610877576040516367eec83360e01b815260040160405180910390fd5b323314610897576040516358516b3f60e01b815260040160405180910390fd5b335f908152600d6020908152604080832054600c90925282208054919283926108c1908490612255565b9091555050335f908152600d60205260408120819055601080548392906108e9908490612268565b909155506108f9905033826117f0565b60405181815233907ff07265907aaf7b6329bb73e97ea492ccbbc0678c94313e1f8331013a2e269d339060200160405180910390a25050565b61093a611721565b6012805460ff1916600117905560136109548284836122fe565b507f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c61097e6118aa565b604080519182525f1960208301520160405180910390a15050565b6060600280546109a89061227b565b80601f01602080910402602001604051908101604052809291908181526020018280546109d49061227b565b8015610a1f5780601f106109f657610100808354040283529160200191610a1f565b820191905f5260205f20905b815481529060010190602001808311610a0257829003601f168201915b5050505050905090565b5f610a33826118bc565b610a4757610a476333d1c03960e21b61190a565b505f908152600660205260409020546001600160a01b031690565b61077882826001611912565b5f610a776118aa565b6001545f540303905090565b5f610a8d826119b3565b6001600160a01b039485169490915081168414610ab357610ab362a1148160e81b61190a565b5f8281526006602052604090208054338082146001600160a01b03881690911417610af657610ae286336106b1565b610af657610af6632ce44b5f60e11b61190a565b8015610b00575f82555b6001600160a01b038681165f9081526005602052604080822080545f19019055918716808252919020805460010190554260a01b17600160e11b175f85815260046020526040812091909155600160e11b84169003610b8c57600184015f818152600460205260408120549003610b8a575f548114610b8a575f8181526004602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4805f03610bd457610bd4633a954ecd60e21b61190a565b50505050505050565b5f600b54600160a01b900460ff166003811115610bfc57610bfc611f2c565b03610c1a5760405163af79b43760e01b815260040160405180910390fd5b6366365b80421115610c3f57604051633844da5760e21b815260040160405180910390fd5b81610c5181666a94d74f4300006123b8565b341015610c715760405163356680b760e01b815260040160405180910390fd5b335f908152600d6020908152604080832054600c9092529091205484916003918391610c9c91612255565b610ca69190612255565b118015610cbe5750600b546001600160a01b03163314155b15610cdc576040516367eec83360e01b815260040160405180910390fd5b83601054611a0a610ced9190612268565b6001610cf75f5490565b610d019084612255565b610d0b9190612268565b1115610d2a5760405163c30436e960e01b815260040160405180910390fd5b838060115414610d4d57604051637c75aa6f60e11b815260040160405180910390fd5b323314610d6d576040516358516b3f60e01b815260040160405180910390fd5b600f5f8154610d7b906123cf565b919050819055508560105f828254610d939190612255565b9091555050335f818152600d602090815260408083208a9055600f548352600e82529182902080546001600160a01b0319168417905590518881527f954e53aaa9ee9f9ae7f4cc7c0ba01de261f35bd07352e3c3383ea3b45ad216d491015b60405180910390a2505050505050565b5f600b54600160a01b900460ff166003811115610e2157610e21611f2c565b03610e3f5760405163af79b43760e01b815260040160405180910390fd5b6366365b80421080610e5f5750610e5c6366365b80612a30612255565b42115b15610e7d576040516302664e7160e11b815260040160405180910390fd5b81610e8f81666a94d74f4300006123b8565b341015610eaf5760405163356680b760e01b815260040160405180910390fd5b335f908152600d6020908152604080832054600c9092529091205484916003918391610eda91612255565b610ee49190612255565b118015610efc5750600b546001600160a01b03163314155b15610f1a576040516367eec83360e01b815260040160405180910390fd5b83601054611a0a610f2b9190612268565b6001610f355f5490565b610f3f9084612255565b610f499190612268565b1115610f685760405163c30436e960e01b815260040160405180910390fd5b838060115414610f8b57604051637c75aa6f60e11b815260040160405180910390fd5b323314610fab576040516358516b3f60e01b815260040160405180910390fd5b8460115414610fcd57604051637c75aa6f60e11b815260040160405180910390fd5b335f908152600c602052604081208054889290610feb908490612255565b90915550610ffb905033876117f0565b60405186815233907fda47e427fb170a95b4539ea720c3caf8ad5a319335b1a85fb3a8db83a61159c090602001610df2565b5f828152600a602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b03169282019290925282916110a15750604080518082019091526009546001600160a01b0381168252600160a01b90046001600160601b031660208201525b60208101515f90612710906110bf906001600160601b0316876123b8565b6110c991906123e7565b915196919550909350505050565b6110df611721565b60405133904780156108fc02915f818181858888f19350505050158015611108573d5f803e3d5ffd5b50565b61112583838360405180602001604052805f8152506114f4565b505050565b611132611721565b600b805482919060ff60a01b1916600160a01b83600381111561115757611157611f2c565b02179055507f3bc110370c8d062d875866567d288433541b3f5f05c98fa991b82ef9f63158818160405161118b9190611f40565b60405180910390a150565b60408051828152600583901b8082016020019092526060915b80156111d957601f1980820191860101355f6111ca82611535565b84840160200152506111af9050565b509392505050565b5f610760826119b3565b5f6001600160a01b03821661120a5761120a6323d3ad8160e21b61190a565b506001600160a01b03165f9081526005602052604090205467ffffffffffffffff1690565b611237611721565b6112405f611a52565b565b60605f61124d6118aa565b90505f6112585f5490565b905060608183146112715761126e858484611aa3565b90505b949350505050565b6060600380546109a89061227b565b6060611271848484611aa3565b6112a56366365b80612a30612255565b81565b5f600b54600160a01b900460ff1660038111156112c7576112c7611f2c565b036112e55760405163af79b43760e01b815260040160405180910390fd5b6112f56366365b80612a30612255565b4210156113155760405163cd967e3560e01b815260040160405180910390fd5b8061132781666a94d74f4300006123b8565b3410156113475760405163356680b760e01b815260040160405180910390fd5b335f908152600d6020908152604080832054600c909252909120548391600391839161137291612255565b61137c9190612255565b1180156113945750600b546001600160a01b03163314155b156113b2576040516367eec83360e01b815260040160405180910390fd5b82601054611a0a6113c39190612268565b60016113cd5f5490565b6113d79084612255565b6113e19190612268565b11156114005760405163c30436e960e01b815260040160405180910390fd5b323314611420576040516358516b3f60e01b815260040160405180910390fd5b335f908152600c60205260408120805486929061143e908490612255565b9091555061144e905033856117f0565b60405184815233907ff07265907aaf7b6329bb73e97ea492ccbbc0678c94313e1f8331013a2e269d339060200160405180910390a250505050565b335f8181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6114ff848484610a83565b6001600160a01b0383163b1561152f5761151b84848484611bae565b61152f5761152f6368d2bf6b60e11b61190a565b50505050565b604080516080810182525f8082526020820181905291810182905260608101919091526115606118aa565b8210611596575f54821015611596575b5f8281526004602052604090205461158d575f1990910190611570565b61076082611c8c565b919050565b6115a3611721565b601155565b60125460609060ff166115bd57610760611d09565b6115c6826118bc565b6115e357604051630a14c4b560e41b815260040160405180910390fd5b5f6115ec611d09565b6012549091505f9060ff161561160a5761160584611d18565b61161a565b60405180602001604052805f8152505b90505f828260405160200161163092919061241d565b604051602081830303815290604052905082515f036112715760405180602001604052805f81525095945050505050565b611669611721565b6001600160a01b03811661169757604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61110881611a52565b5f6301ffc9a760e01b6001600160e01b0319831614806116d057506380ac58cd60e01b6001600160e01b03198316145b806107605750506001600160e01b031916635b5e139f60e01b1490565b5f6001600160e01b0319821663152a902d60e11b148061076057506301ffc9a760e01b6001600160e01b0319831614610760565b600b546001600160a01b031633146112405760405163118cdaa760e01b815233600482015260240161168e565b6127106001600160601b03821681101561178d57604051636f483d0960e01b81526001600160601b03831660048201526024810182905260440161168e565b6001600160a01b0383166117b657604051635b6cc80560e11b81525f600482015260240161168e565b50604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600955565b5f80549082900361180b5761180b63b562e8dd60e01b61190a565b5f8181526004602090815260408083206001600160a01b0387164260a01b6001881460e11b1781179091558084526005909252822080546801000000000000000186020190559081900361186857611868622e076360e81b61190a565b818301825b80835f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a481816001019150810361186d57505f5550505050565b5f6118b76328f750325490565b905090565b5f816118c66118aa565b11611596575f54821015611596575f5b505f82815260046020526040812054908190036118fd576118f683612431565b92506118d6565b600160e01b161592915050565b805f5260045ffd5b5f61191c836111e1565b90508180156119345750336001600160a01b03821614155b156119575761194381336106b1565b611957576119576367d9dca160e11b61190a565b5f8381526006602052604080822080546001600160a01b0319166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b5f816119bd6118aa565b11611a4257505f81815260046020526040902054805f03611a30575f5482106119f0576119f0636f96cda160e11b61190a565b5b505f19015f8181526004602052604090205480156119f157600160e01b81165f03611a1b57919050565b611a2b636f96cda160e11b61190a565b6119f1565b600160e01b81165f03611a4257919050565b611596636f96cda160e11b61190a565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6060818310611abc57611abc631960ccad60e11b61190a565b611ac46118aa565b831015611ad657611ad36118aa565b92505b5f5480808410611ae4578093505b5f611aee876111eb565b9050848610611afa57505f5b8015611ba4578086860311611b0e57508484035b604080516001830160051b81019182905294505f611b2b88611535565b90505f8160400151611b3b575080515b5f5b611b468a611c8c565b925060408301515f8114611b5c575f9250611b81565b835115611b6857835192505b8b831860601b611b81576001820191508a8260051b8a01525b5060018a01995083604052888a1480611b9957508481145b15611b3d5787525050505b5050509392505050565b604051630a85bd0160e11b81525f906001600160a01b0385169063150b7a0290611be2903390899088908890600401612446565b6020604051808303815f875af1925050508015611c1c575060408051601f3d908101601f19168201909252611c1991810190612482565b60015b611c6f573d808015611c49576040519150601f19603f3d011682016040523d82523d5f602084013e611c4e565b606091505b5080515f03611c6757611c676368d2bf6b60e11b61190a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080810182525f8082526020820181905291810182905260608101919091525f8281526004602052604090205461076090604080516080810182526001600160a01b038316815260a083901c67ffffffffffffffff166020820152600160e01b831615159181019190915260e89190911c606082015290565b6060601380546109a89061227b565b606060a06040510180604052602081039150505f815280825b600183039250600a81066030018353600a900480611d315750819003601f19909101908152919050565b6001600160e01b031981168114611108575f80fd5b5f60208284031215611d80575f80fd5b8135611d8b81611d5b565b9392505050565b80356001600160a01b0381168114611596575f80fd5b5f8060408385031215611db9575f80fd5b611dc283611d92565b915060208301356001600160601b0381168114611ddd575f80fd5b809150509250929050565b5f8060208385031215611df9575f80fd5b823567ffffffffffffffff80821115611e10575f80fd5b818501915085601f830112611e23575f80fd5b813581811115611e31575f80fd5b866020828501011115611e42575f80fd5b60209290920196919550909350505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f611d8b6020830184611e54565b5f60208284031215611ea4575f80fd5b5035919050565b5f8060408385031215611ebc575f80fd5b611ec583611d92565b946020939093013593505050565b5f805f60608486031215611ee5575f80fd5b611eee84611d92565b9250611efc60208501611d92565b9150604084013590509250925092565b5f8060408385031215611f1d575f80fd5b50508035926020909101359150565b634e487b7160e01b5f52602160045260245ffd5b6020810160048310611f6057634e487b7160e01b5f52602160045260245ffd5b91905290565b5f60208284031215611f76575f80fd5b813560048110611d8b575f80fd5b5f8060208385031215611f95575f80fd5b823567ffffffffffffffff80821115611fac575f80fd5b818501915085601f830112611fbf575f80fd5b813581811115611fcd575f80fd5b8660208260051b8501011115611e42575f80fd5b80516001600160a01b0316825260208082015167ffffffffffffffff169083015260408082015115159083015260609081015162ffffff16910152565b602080825282518282018190525f9190848201906040850190845b8181101561205f5761204c838551611fe1565b9284019260809290920191600101612039565b50909695505050505050565b5f6020828403121561207b575f80fd5b611d8b82611d92565b602080825282518282018190525f9190848201906040850190845b8181101561205f5783518352928401929184019160010161209f565b5f805f606084860312156120cd575f80fd5b6120d684611d92565b95602085013595506040909401359392505050565b5f80604083850312156120fc575f80fd5b61210583611d92565b915060208301358015158114611ddd575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215612140575f80fd5b61214985611d92565b935061215760208601611d92565b925060408501359150606085013567ffffffffffffffff8082111561217a575f80fd5b818701915087601f83011261218d575f80fd5b81358181111561219f5761219f612119565b604051601f8201601f19908116603f011681019083821181831017156121c7576121c7612119565b816040528281528a60208487010111156121df575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b608081016107608284611fe1565b5f8060408385031215612221575f80fd5b61222a83611d92565b915061223860208401611d92565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561076057610760612241565b8181038181111561076057610760612241565b600181811c9082168061228f57607f821691505b6020821081036122ad57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561112557805f5260205f20601f840160051c810160208510156122d85750805b601f840160051c820191505b818110156122f7575f81556001016122e4565b5050505050565b67ffffffffffffffff83111561231657612316612119565b61232a83612324835461227b565b836122b3565b5f601f84116001811461235b575f85156123445750838201355b5f19600387901b1c1916600186901b1783556122f7565b5f83815260208120601f198716915b8281101561238a578685013582556020948501946001909201910161236a565b50868210156123a6575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b808202811582820484141761076057610760612241565b5f600182016123e0576123e0612241565b5060010190565b5f8261240157634e487b7160e01b5f52601260045260245ffd5b500490565b5f81518060208401855e5f93019283525090919050565b5f61127161242b8386612406565b84612406565b5f8161243f5761243f612241565b505f190190565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061247890830184611e54565b9695505050505050565b5f60208284031215612492575f80fd5b8151611d8b81611d5b56fea2646970667358221220b13bd27fe976b9c80d7f049ec1ea9ffe4285f2dc41fb36a93af9dac3a399ff2b64736f6c6343000819003368747470733a2f2f697066732e676c6f6f6d746f6b656e2e78797a2f697066732f62616679626569646e726761677a726a76617672736a746e7a36716871766e6c626b7a337668357133356766676b6a323336796c737877706d7379",
		"opcodes": "PUSH1 0xB DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x100 PUSH1 0x40 MSTORE PUSH1 0x5C PUSH1 0x80 DUP2 DUP2 MSTORE SWAP1 PUSH2 0x2856 PUSH1 0xA0 CODECOPY PUSH1 0x13 SWAP1 PUSH2 0x37 SWAP1 DUP3 PUSH2 0x2B7 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x476C6F6F6D657273 PUSH1 0xC0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x474C4F4F4D455253 PUSH1 0xC0 SHL DUP2 MSTORE POP PUSH2 0xD06 PUSH2 0x99 DUP2 PUSH2 0x112 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0xA6 DUP4 DUP3 PUSH2 0x2B7 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0xB3 DUP3 DUP3 PUSH2 0x2B7 JUMP JUMPDEST POP PUSH2 0xBC PUSH2 0x11A JUMP JUMPDEST PUSH0 SSTORE PUSH2 0xC6 PUSH2 0x11A JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x100 DUP2 PUSH2 0x12C JUMP JUMPDEST POP PUSH2 0x10D CALLER PUSH2 0x1F4 PUSH2 0x17D JUMP JUMPDEST PUSH2 0x376 JUMP JUMPDEST PUSH4 0x28F75032 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x127 PUSH4 0x28F75032 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP2 LT ISZERO PUSH2 0x1BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x6F483D09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xEE JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 MUL OR PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x247 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x265 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2B2 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x290 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x29C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D0 JUMPI PUSH2 0x2D0 PUSH2 0x21F JUMP JUMPDEST PUSH2 0x2E4 DUP2 PUSH2 0x2DE DUP5 SLOAD PUSH2 0x233 JUMP JUMPDEST DUP5 PUSH2 0x26B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x317 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x300 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x36E JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x345 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x326 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x362 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x24D3 DUP1 PUSH2 0x383 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x231 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x833B9499 GT PUSH2 0x12C JUMPI DUP1 PUSH4 0xB19960E6 GT PUSH2 0xAF JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0xE6798BAA EQ PUSH2 0x680 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x697 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0xFE776953 EQ PUSH2 0x6FD JUMPI DUP1 PUSH4 0xFF1B6556 EQ PUSH2 0x714 JUMPI STOP JUMPDEST DUP1 PUSH4 0xB19960E6 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xB19FDE5A EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x603 JUMPI DUP1 PUSH4 0xC23DC68F EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0xC62001BD EQ PUSH2 0x642 JUMPI STOP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0x99A2557A EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0x9A4F41BA EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x59C JUMPI STOP JUMPDEST DUP1 PUSH4 0x833B9499 EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x86879235 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x87F65C91 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x525 JUMPI STOP JUMPDEST DUP1 PUSH4 0x29510D34 GT PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x4B962D10 GT PUSH2 0x17B JUMPI DUP1 PUSH4 0x4B962D10 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x5BBB2177 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4A1 JUMPI STOP JUMPDEST DUP1 PUSH4 0x29510D34 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x46B00B6D EQ PUSH2 0x3EB JUMPI STOP JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x242261AC EQ PUSH2 0x360 JUMPI STOP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x46EF9A5 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x675B7C6 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2C0 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x238 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA8 JUMP JUMPDEST PUSH2 0x766 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x77C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1DE8 JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x265 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EAB JUMP JUMPDEST PUSH2 0xA62 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x265 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x1ED3 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x238 PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0xE02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x265 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ED3 JUMP JUMPDEST PUSH2 0x110B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x40B SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1F40 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x112A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x456 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x201E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x47D CALLDATASIZE PUSH1 0x4 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x11E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x49C CALLDATASIZE PUSH1 0x4 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x11EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x122F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH7 0x6A94D74F430000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EE PUSH2 0x4E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x506 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x1A0A DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0xD06 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x530 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x300 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x1279 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EE PUSH2 0x570 CALLDATASIZE PUSH1 0x4 PUSH2 0x20BB JUMP JUMPDEST PUSH2 0x1288 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x1295 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x597 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x12A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x5B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x20EB JUMP JUMPDEST PUSH2 0x1489 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH1 0x3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x5E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x611 CALLDATASIZE PUSH1 0x4 PUSH2 0x212D JUMP JUMPDEST PUSH2 0x14F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x635 PUSH2 0x630 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x1535 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x2202 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x65C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x159B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x67B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x15A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH4 0x28F75032 SLOAD PUSH2 0x33F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x6B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x6F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x1661 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x708 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH4 0x66365B80 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH32 0x5158CF3AC201D8D9DFE63AC7C7D1E7AA58B7C33426665C9BF643E0003E095E2F DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x751 DUP3 PUSH2 0x16A0 JUMP JUMPDEST DUP1 PUSH2 0x760 JUMPI POP PUSH2 0x760 DUP3 PUSH2 0x16ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x76E PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x778 DUP3 DUP3 PUSH2 0x174E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x79B JUMPI PUSH2 0x79B PUSH2 0x1F2C JUMP JUMPDEST SUB PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAF79B437 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x66365B80 TIMESTAMP LT ISZERO PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH4 0x24FBAA9 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x80C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C75AA6F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x3 SWAP1 DUP3 SWAP1 PUSH2 0x837 SWAP1 DUP3 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x841 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x859 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67EEC833 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN CALLER EQ PUSH2 0x897 JUMPI PUSH1 0x40 MLOAD PUSH4 0x58516B3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x8C1 SWAP1 DUP5 SWAP1 PUSH2 0x2255 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x8E9 SWAP1 DUP5 SWAP1 PUSH2 0x2268 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8F9 SWAP1 POP CALLER DUP3 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF07265907AAF7B6329BB73E97EA492CCBBC0678C94313E1F8331013A2E269D33 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x93A PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x13 PUSH2 0x954 DUP3 DUP5 DUP4 PUSH2 0x22FE JUMP JUMPDEST POP PUSH32 0x6BD5C950A8D8DF17F772F5AF37CB3655737899CBF903264B9795592DA439661C PUSH2 0x97E PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH0 NOT PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x9A8 SWAP1 PUSH2 0x227B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D4 SWAP1 PUSH2 0x227B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xA33 DUP3 PUSH2 0x18BC JUMP JUMPDEST PUSH2 0xA47 JUMPI PUSH2 0xA47 PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0x190A JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x778 DUP3 DUP3 PUSH1 0x1 PUSH2 0x1912 JUMP JUMPDEST PUSH0 PUSH2 0xA77 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xA8D DUP3 PUSH2 0x19B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0xAB3 JUMPI PUSH2 0xAB3 PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0x190A JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0xAF6 JUMPI PUSH2 0xAE2 DUP7 CALLER PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0xAF6 JUMPI PUSH2 0xAF6 PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB00 JUMPI PUSH0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0xB8C JUMPI PUSH1 0x1 DUP5 ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xB8A JUMPI PUSH0 SLOAD DUP2 EQ PUSH2 0xB8A JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 DUP1 LOG4 DUP1 PUSH0 SUB PUSH2 0xBD4 JUMPI PUSH2 0xBD4 PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0x190A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBFC JUMPI PUSH2 0xBFC PUSH2 0x1F2C JUMP JUMPDEST SUB PUSH2 0xC1A JUMPI PUSH1 0x40 MLOAD PUSH4 0xAF79B437 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x66365B80 TIMESTAMP GT ISZERO PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH4 0x3844DA57 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xC51 DUP2 PUSH7 0x6A94D74F430000 PUSH2 0x23B8 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH4 0x356680B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP5 SWAP2 PUSH1 0x3 SWAP2 DUP4 SWAP2 PUSH2 0xC9C SWAP2 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0xCBE JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xCDC JUMPI PUSH1 0x40 MLOAD PUSH4 0x67EEC833 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x10 SLOAD PUSH2 0x1A0A PUSH2 0xCED SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xCF7 PUSH0 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD01 SWAP1 DUP5 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0xD0B SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST GT ISZERO PUSH2 0xD2A JUMPI PUSH1 0x40 MLOAD PUSH4 0xC30436E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP1 PUSH1 0x11 SLOAD EQ PUSH2 0xD4D JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C75AA6F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN CALLER EQ PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH4 0x58516B3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF PUSH0 DUP2 SLOAD PUSH2 0xD7B SWAP1 PUSH2 0x23CF JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x10 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD93 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 SWAP1 SSTORE PUSH1 0xF SLOAD DUP4 MSTORE PUSH1 0xE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE SWAP1 MLOAD DUP9 DUP2 MSTORE PUSH32 0x954E53AAA9EE9F9AE7F4CC7C0BA01DE261F35BD07352E3C3383EA3B45AD216D4 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE21 JUMPI PUSH2 0xE21 PUSH2 0x1F2C JUMP JUMPDEST SUB PUSH2 0xE3F JUMPI PUSH1 0x40 MLOAD PUSH4 0xAF79B437 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x66365B80 TIMESTAMP LT DUP1 PUSH2 0xE5F JUMPI POP PUSH2 0xE5C PUSH4 0x66365B80 PUSH2 0x2A30 PUSH2 0x2255 JUMP JUMPDEST TIMESTAMP GT JUMPDEST ISZERO PUSH2 0xE7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2664E71 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xE8F DUP2 PUSH7 0x6A94D74F430000 PUSH2 0x23B8 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xEAF JUMPI PUSH1 0x40 MLOAD PUSH4 0x356680B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP5 SWAP2 PUSH1 0x3 SWAP2 DUP4 SWAP2 PUSH2 0xEDA SWAP2 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0xEE4 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0xEFC JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH4 0x67EEC833 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x10 SLOAD PUSH2 0x1A0A PUSH2 0xF2B SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xF35 PUSH0 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF3F SWAP1 DUP5 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0xF49 SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST GT ISZERO PUSH2 0xF68 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC30436E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP1 PUSH1 0x11 SLOAD EQ PUSH2 0xF8B JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C75AA6F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN CALLER EQ PUSH2 0xFAB JUMPI PUSH1 0x40 MLOAD PUSH4 0x58516B3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x11 SLOAD EQ PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C75AA6F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xFEB SWAP1 DUP5 SWAP1 PUSH2 0x2255 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xFFB SWAP1 POP CALLER DUP8 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE CALLER SWAP1 PUSH32 0xDA47E427FB170A95B4539EA720C3CAF8AD5A319335B1A85FB3A8DB83A61159C0 SWAP1 PUSH1 0x20 ADD PUSH2 0xDF2 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 SWAP2 PUSH2 0x10A1 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH0 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x10BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP8 PUSH2 0x23B8 JUMP JUMPDEST PUSH2 0x10C9 SWAP2 SWAP1 PUSH2 0x23E7 JUMP JUMPDEST SWAP2 MLOAD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x10DF PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1108 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1125 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x14F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1132 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1157 JUMPI PUSH2 0x1157 PUSH2 0x1F2C JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x3BC110370C8D062D875866567D288433541B3F5F05C98FA991B82EF9F6315881 DUP2 PUSH1 0x40 MLOAD PUSH2 0x118B SWAP2 SWAP1 PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x5 DUP4 SWAP1 SHL DUP1 DUP3 ADD PUSH1 0x20 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 JUMPDEST DUP1 ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x1F NOT DUP1 DUP3 ADD SWAP2 DUP7 ADD ADD CALLDATALOAD PUSH0 PUSH2 0x11CA DUP3 PUSH2 0x1535 JUMP JUMPDEST DUP5 DUP5 ADD PUSH1 0x20 ADD MSTORE POP PUSH2 0x11AF SWAP1 POP JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x760 DUP3 PUSH2 0x19B3 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x120A JUMPI PUSH2 0x120A PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0x190A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1237 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1240 PUSH0 PUSH2 0x1A52 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x124D PUSH2 0x18AA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1258 PUSH0 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 DUP4 EQ PUSH2 0x1271 JUMPI PUSH2 0x126E DUP6 DUP5 DUP5 PUSH2 0x1AA3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x9A8 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1271 DUP5 DUP5 DUP5 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0x12A5 PUSH4 0x66365B80 PUSH2 0x2A30 PUSH2 0x2255 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12C7 JUMPI PUSH2 0x12C7 PUSH2 0x1F2C JUMP JUMPDEST SUB PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAF79B437 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12F5 PUSH4 0x66365B80 PUSH2 0x2A30 PUSH2 0x2255 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1315 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD967E35 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1327 DUP2 PUSH7 0x6A94D74F430000 PUSH2 0x23B8 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x1347 JUMPI PUSH1 0x40 MLOAD PUSH4 0x356680B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP4 SWAP2 PUSH1 0x3 SWAP2 DUP4 SWAP2 PUSH2 0x1372 SWAP2 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x137C SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x1394 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x13B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67EEC833 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x10 SLOAD PUSH2 0x1A0A PUSH2 0x13C3 SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x13CD PUSH0 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x13D7 SWAP1 DUP5 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x13E1 SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST GT ISZERO PUSH2 0x1400 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC30436E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN CALLER EQ PUSH2 0x1420 JUMPI PUSH1 0x40 MLOAD PUSH4 0x58516B3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x143E SWAP1 DUP5 SWAP1 PUSH2 0x2255 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x144E SWAP1 POP CALLER DUP6 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF07265907AAF7B6329BB73E97EA492CCBBC0678C94313E1F8331013A2E269D33 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x14FF DUP5 DUP5 DUP5 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x152F JUMPI PUSH2 0x151B DUP5 DUP5 DUP5 DUP5 PUSH2 0x1BAE JUMP JUMPDEST PUSH2 0x152F JUMPI PUSH2 0x152F PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1560 PUSH2 0x18AA JUMP JUMPDEST DUP3 LT PUSH2 0x1596 JUMPI PUSH0 SLOAD DUP3 LT ISZERO PUSH2 0x1596 JUMPI JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x158D JUMPI PUSH0 NOT SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x760 DUP3 PUSH2 0x1C8C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A3 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND PUSH2 0x15BD JUMPI PUSH2 0x760 PUSH2 0x1D09 JUMP JUMPDEST PUSH2 0x15C6 DUP3 PUSH2 0x18BC JUMP JUMPDEST PUSH2 0x15E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x15EC PUSH2 0x1D09 JUMP JUMPDEST PUSH1 0x12 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x160A JUMPI PUSH2 0x1605 DUP5 PUSH2 0x1D18 JUMP JUMPDEST PUSH2 0x161A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1630 SWAP3 SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP3 MLOAD PUSH0 SUB PUSH2 0x1271 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1669 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1697 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1108 DUP2 PUSH2 0x1A52 JUMP JUMPDEST PUSH0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x16D0 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x760 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x152A902D PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x760 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x760 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1240 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x168E JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP2 LT ISZERO PUSH2 0x178D JUMPI PUSH1 0x40 MLOAD PUSH4 0x6F483D09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x168E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x17B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x168E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 MUL OR PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0x180B JUMPI PUSH2 0x180B PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0x190A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND TIMESTAMP PUSH1 0xA0 SHL PUSH1 0x1 DUP9 EQ PUSH1 0xE1 SHL OR DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP7 MUL ADD SWAP1 SSTORE SWAP1 DUP2 SWAP1 SUB PUSH2 0x1868 JUMPI PUSH2 0x1868 PUSH3 0x2E0763 PUSH1 0xE8 SHL PUSH2 0x190A JUMP JUMPDEST DUP2 DUP4 ADD DUP3 JUMPDEST DUP1 DUP4 PUSH0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 DUP1 LOG4 DUP2 DUP2 PUSH1 0x1 ADD SWAP2 POP DUP2 SUB PUSH2 0x186D JUMPI POP PUSH0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18B7 PUSH4 0x28F75032 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x18C6 PUSH2 0x18AA JUMP JUMPDEST GT PUSH2 0x1596 JUMPI PUSH0 SLOAD DUP3 LT ISZERO PUSH2 0x1596 JUMPI PUSH0 JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x18FD JUMPI PUSH2 0x18F6 DUP4 PUSH2 0x2431 JUMP JUMPDEST SWAP3 POP PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x191C DUP4 PUSH2 0x11E1 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x1934 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1957 JUMPI PUSH2 0x1943 DUP2 CALLER PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x1957 JUMPI PUSH2 0x1957 PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x19BD PUSH2 0x18AA JUMP JUMPDEST GT PUSH2 0x1A42 JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH0 SUB PUSH2 0x1A30 JUMPI PUSH0 SLOAD DUP3 LT PUSH2 0x19F0 JUMPI PUSH2 0x19F0 PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST JUMPDEST POP PUSH0 NOT ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x19F1 JUMPI PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0x1A1B JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2B PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0x1A42 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1596 PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP4 LT PUSH2 0x1ABC JUMPI PUSH2 0x1ABC PUSH4 0x1960CCAD PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST PUSH2 0x1AC4 PUSH2 0x18AA JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x1AD6 JUMPI PUSH2 0x1AD3 PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 SLOAD DUP1 DUP1 DUP5 LT PUSH2 0x1AE4 JUMPI DUP1 SWAP4 POP JUMPDEST PUSH0 PUSH2 0x1AEE DUP8 PUSH2 0x11EB JUMP JUMPDEST SWAP1 POP DUP5 DUP7 LT PUSH2 0x1AFA JUMPI POP PUSH0 JUMPDEST DUP1 ISZERO PUSH2 0x1BA4 JUMPI DUP1 DUP7 DUP7 SUB GT PUSH2 0x1B0E JUMPI POP DUP5 DUP5 SUB JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP4 ADD PUSH1 0x5 SHL DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP5 POP PUSH0 PUSH2 0x1B2B DUP9 PUSH2 0x1535 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x1B3B JUMPI POP DUP1 MLOAD JUMPDEST PUSH0 JUMPDEST PUSH2 0x1B46 DUP11 PUSH2 0x1C8C JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP4 ADD MLOAD PUSH0 DUP2 EQ PUSH2 0x1B5C JUMPI PUSH0 SWAP3 POP PUSH2 0x1B81 JUMP JUMPDEST DUP4 MLOAD ISZERO PUSH2 0x1B68 JUMPI DUP4 MLOAD SWAP3 POP JUMPDEST DUP12 DUP4 XOR PUSH1 0x60 SHL PUSH2 0x1B81 JUMPI PUSH1 0x1 DUP3 ADD SWAP2 POP DUP11 DUP3 PUSH1 0x5 SHL DUP11 ADD MSTORE JUMPDEST POP PUSH1 0x1 DUP11 ADD SWAP10 POP DUP4 PUSH1 0x40 MSTORE DUP9 DUP11 EQ DUP1 PUSH2 0x1B99 JUMPI POP DUP5 DUP2 EQ JUMPDEST ISZERO PUSH2 0x1B3D JUMPI DUP8 MSTORE POP POP POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1BE2 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1C1C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1C19 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2482 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1C6F JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x1C67 JUMPI PUSH2 0x1C67 PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x760 SWAP1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0xA0 DUP4 SWAP1 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 AND ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x13 DUP1 SLOAD PUSH2 0x9A8 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x1D31 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1108 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D80 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D8B DUP2 PUSH2 0x1D5B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1596 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DC2 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DDD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E10 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E23 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1E31 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1E42 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1D8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E54 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EBC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EC5 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EEE DUP5 PUSH2 0x1D92 JUMP JUMPDEST SWAP3 POP PUSH2 0x1EFC PUSH1 0x20 DUP6 ADD PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x4 DUP4 LT PUSH2 0x1F60 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F76 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x1D8B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F95 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1FAC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FBF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1FCD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1E42 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD PUSH3 0xFFFFFF AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x205F JUMPI PUSH2 0x204C DUP4 DUP6 MLOAD PUSH2 0x1FE1 JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH1 0x80 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2039 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x207B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1D8B DUP3 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x205F JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x209F JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20CD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x20D6 DUP5 PUSH2 0x1D92 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20FC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2105 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1DDD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2140 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2149 DUP6 PUSH2 0x1D92 JUMP JUMPDEST SWAP4 POP PUSH2 0x2157 PUSH1 0x20 DUP7 ADD PUSH2 0x1D92 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x217A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x218D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x219F JUMPI PUSH2 0x219F PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x21C7 JUMPI PUSH2 0x21C7 PUSH2 0x2119 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x21DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x760 DUP3 DUP5 PUSH2 0x1FE1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2221 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x222A DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2238 PUSH1 0x20 DUP5 ADD PUSH2 0x1D92 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x760 JUMPI PUSH2 0x760 PUSH2 0x2241 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x760 JUMPI PUSH2 0x760 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x228F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1125 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x22D8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22F7 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x22E4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x2316 JUMPI PUSH2 0x2316 PUSH2 0x2119 JUMP JUMPDEST PUSH2 0x232A DUP4 PUSH2 0x2324 DUP4 SLOAD PUSH2 0x227B JUMP JUMPDEST DUP4 PUSH2 0x22B3 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x235B JUMPI PUSH0 DUP6 ISZERO PUSH2 0x2344 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x22F7 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP8 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x238A JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x236A JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x23A6 JUMPI PUSH0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x760 JUMPI PUSH2 0x760 PUSH2 0x2241 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x23E0 JUMPI PUSH2 0x23E0 PUSH2 0x2241 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2401 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1271 PUSH2 0x242B DUP4 DUP7 PUSH2 0x2406 JUMP JUMPDEST DUP5 PUSH2 0x2406 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x243F JUMPI PUSH2 0x243F PUSH2 0x2241 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x2478 SWAP1 DUP4 ADD DUP5 PUSH2 0x1E54 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2492 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1D8B DUP2 PUSH2 0x1D5B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXTCODESIZE 0xD2 PUSH32 0xE976B9C80D7F049EC1EA9FFE4285F2DC41FB36A93AF9DAC3A399FF2B64736F6C PUSH4 0x43000819 STOP CALLER PUSH9 0x747470733A2F2F6970 PUSH7 0x732E676C6F6F6D PUSH21 0x6F6B656E2E78797A2F697066732F62616679626569 PUSH5 0x6E72676167 PUSH27 0x726A76617672736A746E7A36716871766E6C626B7A337668357133 CALLDATALOAD PUSH8 0x66676B6A32333679 PUSH13 0x737877706D7379000000000000 ",
		"sourceMap": "1434:50:8:-:0;;;-1:-1:-1;;;;1434:50:8;;;1791:29;;;-1:-1:-1;;1791:29:8;;;1826:133;694:8351;1826:133;;694:8351;1826:133;;;694:8351;1826:133;;;;;;;;;:::i;:::-;;4674:181;;;;;;;;;;4787:10;5239:246:6;;;;;;;;;;;;;-1:-1:-1;;;5239:246:6;;;;;;;;;;;;;;;;-1:-1:-1;;;5239:246:6;;;846:4:8;616:38:11;640:13;616:23;;;:38;;:::i;:::-;-1:-1:-1;5305:5:6;:13;5313:5;5305;:13;:::i;:::-;-1:-1:-1;5328:7:6;:17;5338:7;5328;:17;:::i;:::-;-1:-1:-1;5371:15:6;:13;:15::i;:::-;5355:13;:31;5421:15;:13;:15::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2979:51:12;2952:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;4813:35:8::3;4832:10;4844:3;4813:18;:35::i;:::-;694:8351:::0;;828:310:11;1086:28;1079:43;828:310::o;7103:104:8:-;7160:7;7186:14;777:28:11;771:35;;667:155;7186:14:8;7179:21;;7103:104;:::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;3429:507:2:-;3156:5;-1:-1:-1;;;;;3576:26:2;;;-1:-1:-1;3572:173:2;;;3679:55;;-1:-1:-1;;;3679:55:2;;-1:-1:-1;;;;;3232:31:12;;3679:55:2;;;3214:50:12;3280:18;;;3273:34;;;3187:18;;3679:55:2;3041:272:12;3572:173:2;-1:-1:-1;;;;;3758:22:2;;3754:108;;3803:48;;-1:-1:-1;;;3803:48:2;;3848:1;3803:48;;;2979:51:12;2952:18;;3803:48:2;2833:203:12;3754:108:2;-1:-1:-1;3894:35:2;;;;;;;;;-1:-1:-1;;;;;3894:35:2;;;;;;-1:-1:-1;;;;;3894:35:2;;;;;;;;;;-1:-1:-1;;;3872:57:2;;;;:19;:57;3429:507::o;146:127:12:-;207:10;202:3;198:20;195:1;188:31;238:4;235:1;228:15;262:4;259:1;252:15;278:380;357:1;353:12;;;;400;;;421:61;;475:4;467:6;463:17;453:27;;421:61;528:2;520:6;517:14;497:18;494:38;491:161;;574:10;569:3;565:20;562:1;555:31;609:4;606:1;599:15;637:4;634:1;627:15;491:161;;278:380;;;:::o;789:518::-;891:2;886:3;883:11;880:421;;;927:5;924:1;917:16;971:4;968:1;958:18;1041:2;1029:10;1025:19;1022:1;1018:27;1012:4;1008:38;1077:4;1065:10;1062:20;1059:47;;;-1:-1:-1;1100:4:12;1059:47;1155:2;1150:3;1146:12;1143:1;1139:20;1133:4;1129:31;1119:41;;1210:81;1228:2;1221:5;1218:13;1210:81;;;1287:1;1273:16;;1254:1;1243:13;1210:81;;;1214:3;;880:421;789:518;;;:::o;1483:1345::-;1603:10;;-1:-1:-1;;;;;1625:30:12;;1622:56;;;1658:18;;:::i;:::-;1687:97;1777:6;1737:38;1769:4;1763:11;1737:38;:::i;:::-;1731:4;1687:97;:::i;:::-;1839:4;;1896:2;1885:14;;1913:1;1908:663;;;;2615:1;2632:6;2629:89;;;-1:-1:-1;2684:19:12;;;2678:26;2629:89;-1:-1:-1;;1440:1:12;1436:11;;;1432:24;1428:29;1418:40;1464:1;1460:11;;;1415:57;2731:81;;1878:944;;1908:663;736:1;729:14;;;773:4;760:18;;-1:-1:-1;;1944:20:12;;;2062:236;2076:7;2073:1;2070:14;2062:236;;;2165:19;;;2159:26;2144:42;;2257:27;;;;2225:1;2213:14;;;;2092:19;;2062:236;;;2066:3;2326:6;2317:7;2314:19;2311:201;;;2387:19;;;2381:26;-1:-1:-1;;2470:1:12;2466:14;;;2482:3;2462:24;2458:37;2454:42;2439:58;2424:74;;2311:201;;;2558:1;2549:6;2546:1;2542:14;2538:22;2532:4;2525:36;1878:944;;;;;1483:1345;;:::o;3041:272::-;694:8351:8;;;;;;"
	},
	"abi": [
		{
			"inputs": [],
			"name": "ApprovalCallerNotOwnerNorApproved",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "ApprovalQueryForNonexistentToken",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "BalanceQueryForZeroAddress",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "ClaimNotActive",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "numerator",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "denominator",
					"type": "uint256"
				}
			],
			"name": "ERC2981InvalidDefaultRoyalty",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "receiver",
					"type": "address"
				}
			],
			"name": "ERC2981InvalidDefaultRoyaltyReceiver",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "tokenId",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "numerator",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "denominator",
					"type": "uint256"
				}
			],
			"name": "ERC2981InvalidTokenRoyalty",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "tokenId",
					"type": "uint256"
				},
				{
					"internalType": "address",
					"name": "receiver",
					"type": "address"
				}
			],
			"name": "ERC2981InvalidTokenRoyaltyReceiver",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "ExceedsMaxMintPerWallet",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "ExceedsMaxSupply",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "InsufficientFunds",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "InvalidQueryRange",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "MintERC2309QuantityExceedsLimit",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "MintToZeroAddress",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "MintZeroQuantity",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "MintingDisabled",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "NonEOACaller",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "NotCompatibleWithSpotMints",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "NotEligible",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				}
			],
			"name": "OwnableInvalidOwner",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "OwnableUnauthorizedAccount",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "OwnerQueryForNonexistentToken",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "OwnershipNotInitializedForExtraData",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "PresaleNotActive",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "PublicMintNotActive",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "SequentialMintExceedsLimit",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "SequentialUpToTooSmall",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "SpotMintTokenIdTooSmall",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "TokenAlreadyExists",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "TransferCallerNotOwnerNorApproved",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "TransferFromIncorrectOwner",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "TransferToNonERC721ReceiverImplementer",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "TransferToZeroAddress",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "URIQueryForNonexistentToken",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "WhitelistNotActive",
			"type": "error"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "approved",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "uint256",
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "Approval",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "operator",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "bool",
					"name": "approved",
					"type": "bool"
				}
			],
			"name": "ApprovalForAll",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "_fromTokenId",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "_toTokenId",
					"type": "uint256"
				}
			],
			"name": "BatchMetadataUpdate",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "_to",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "_quantity",
					"type": "uint256"
				}
			],
			"name": "ClaimPresale",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "uint256",
					"name": "fromTokenId",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "toTokenId",
					"type": "uint256"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "to",
					"type": "address"
				}
			],
			"name": "ConsecutiveTransfer",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "_to",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "_quantity",
					"type": "uint256"
				}
			],
			"name": "GloomersMint",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "_to",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "_quantity",
					"type": "uint256"
				}
			],
			"name": "MintWhitelist",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "enum Gloomers.DropStatus",
					"name": "_dropStatus",
					"type": "uint8"
				}
			],
			"name": "NewDropStatus",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "_to",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "_quantity",
					"type": "uint256"
				}
			],
			"name": "RegisterPresale",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "uint256",
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "Transfer",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "approve",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "claimPresale",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "quantity",
					"type": "uint256"
				}
			],
			"name": "mint",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "quantity",
					"type": "uint256"
				},
				{
					"internalType": "bytes32",
					"name": "gloomerHash_",
					"type": "bytes32"
				}
			],
			"name": "mintWhitelist",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "quantity",
					"type": "uint256"
				},
				{
					"internalType": "bytes32",
					"name": "gloomerHash_",
					"type": "bytes32"
				}
			],
			"name": "registerPresale",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "renounceOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "safeTransferFrom",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "tokenId",
					"type": "uint256"
				},
				{
					"internalType": "bytes",
					"name": "_data",
					"type": "bytes"
				}
			],
			"name": "safeTransferFrom",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "operator",
					"type": "address"
				},
				{
					"internalType": "bool",
					"name": "approved",
					"type": "bool"
				}
			],
			"name": "setApprovalForAll",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "receiver",
					"type": "address"
				},
				{
					"internalType": "uint96",
					"name": "feeNumerator",
					"type": "uint96"
				}
			],
			"name": "setDefaultRoyalty",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "enum Gloomers.DropStatus",
					"name": "newDropStatus",
					"type": "uint8"
				}
			],
			"name": "setDropStatus",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "gloomerHash_",
					"type": "bytes32"
				}
			],
			"name": "setGloomerHash",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "string",
					"name": "baseTokenURI_",
					"type": "string"
				}
			],
			"name": "setTokenUri",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "transferFrom",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"stateMutability": "payable",
			"type": "receive"
		},
		{
			"inputs": [],
			"name": "withdraw",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"stateMutability": "payable",
			"type": "fallback"
		},
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				}
			],
			"name": "balanceOf",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "dropStatus",
			"outputs": [
				{
					"internalType": "enum Gloomers.DropStatus",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "END_TOKEN_ID",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "explicitOwnershipOf",
			"outputs": [
				{
					"components": [
						{
							"internalType": "address",
							"name": "addr",
							"type": "address"
						},
						{
							"internalType": "uint64",
							"name": "startTimestamp",
							"type": "uint64"
						},
						{
							"internalType": "bool",
							"name": "burned",
							"type": "bool"
						},
						{
							"internalType": "uint24",
							"name": "extraData",
							"type": "uint24"
						}
					],
					"internalType": "struct IERC721A.TokenOwnership",
					"name": "ownership",
					"type": "tuple"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256[]",
					"name": "tokenIds",
					"type": "uint256[]"
				}
			],
			"name": "explicitOwnershipsOf",
			"outputs": [
				{
					"components": [
						{
							"internalType": "address",
							"name": "addr",
							"type": "address"
						},
						{
							"internalType": "uint64",
							"name": "startTimestamp",
							"type": "uint64"
						},
						{
							"internalType": "bool",
							"name": "burned",
							"type": "bool"
						},
						{
							"internalType": "uint24",
							"name": "extraData",
							"type": "uint24"
						}
					],
					"internalType": "struct IERC721A.TokenOwnership[]",
					"name": "",
					"type": "tuple[]"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "getApproved",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "wallet",
					"type": "address"
				}
			],
			"name": "getPresaleAllocation",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "operator",
					"type": "address"
				}
			],
			"name": "isApprovedForAll",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "MAX_MINT_PER_WALLET",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "name",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "ownerOf",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "PRICE_PER_TOKEN",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "PROVENANCE_HASH",
			"outputs": [
				{
					"internalType": "bytes32",
					"name": "",
					"type": "bytes32"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "PUBLIC_MINT_TIMESTAMP",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "tokenId",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "salePrice",
					"type": "uint256"
				}
			],
			"name": "royaltyInfo",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "START_TOKEN_ID",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "startTokenId",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "result",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes4",
					"name": "interfaceId",
					"type": "bytes4"
				}
			],
			"name": "supportsInterface",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "symbol",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				}
			],
			"name": "tokensOfOwner",
			"outputs": [
				{
					"internalType": "uint256[]",
					"name": "",
					"type": "uint256[]"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "start",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "stop",
					"type": "uint256"
				}
			],
			"name": "tokensOfOwnerIn",
			"outputs": [
				{
					"internalType": "uint256[]",
					"name": "",
					"type": "uint256[]"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "tokenId",
					"type": "uint256"
				}
			],
			"name": "tokenURI",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalSupply",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "result",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "WHITELIST_START_TIMESTAMP",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 579,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_currentIndex",
				"offset": 0,
				"slot": "0",
				"type": "t_uint256"
			},
			{
				"astId": 581,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_burnCounter",
				"offset": 0,
				"slot": "1",
				"type": "t_uint256"
			},
			{
				"astId": 583,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_name",
				"offset": 0,
				"slot": "2",
				"type": "t_string_storage"
			},
			{
				"astId": 585,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_symbol",
				"offset": 0,
				"slot": "3",
				"type": "t_string_storage"
			},
			{
				"astId": 589,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_packedOwnerships",
				"offset": 0,
				"slot": "4",
				"type": "t_mapping(t_uint256,t_uint256)"
			},
			{
				"astId": 593,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_packedAddressData",
				"offset": 0,
				"slot": "5",
				"type": "t_mapping(t_address,t_uint256)"
			},
			{
				"astId": 598,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_tokenApprovals",
				"offset": 0,
				"slot": "6",
				"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)511_storage)"
			},
			{
				"astId": 604,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_operatorApprovals",
				"offset": 0,
				"slot": "7",
				"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
			},
			{
				"astId": 606,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_spotMinted",
				"offset": 0,
				"slot": "8",
				"type": "t_uint256"
			},
			{
				"astId": 187,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_defaultRoyaltyInfo",
				"offset": 0,
				"slot": "9",
				"type": "t_struct(RoyaltyInfo)184_storage"
			},
			{
				"astId": 192,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_tokenRoyaltyInfo",
				"offset": 0,
				"slot": "10",
				"type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)184_storage)"
			},
			{
				"astId": 8,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_owner",
				"offset": 0,
				"slot": "11",
				"type": "t_address"
			},
			{
				"astId": 2994,
				"contract": "Gloomers.sol:Gloomers",
				"label": "dropStatus",
				"offset": 20,
				"slot": "11",
				"type": "t_enum(DropStatus)2989"
			},
			{
				"astId": 2998,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_mintedPerWallet",
				"offset": 0,
				"slot": "12",
				"type": "t_mapping(t_address,t_uint256)"
			},
			{
				"astId": 3002,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_presaleAllocationsByWallet",
				"offset": 0,
				"slot": "13",
				"type": "t_mapping(t_address,t_uint256)"
			},
			{
				"astId": 3006,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_presaleWalletsById",
				"offset": 0,
				"slot": "14",
				"type": "t_mapping(t_uint256,t_address)"
			},
			{
				"astId": 3008,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_presalesCount",
				"offset": 0,
				"slot": "15",
				"type": "t_uint256"
			},
			{
				"astId": 3010,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_presaleSupplyOffset",
				"offset": 0,
				"slot": "16",
				"type": "t_uint256"
			},
			{
				"astId": 3012,
				"contract": "Gloomers.sol:Gloomers",
				"label": "gloomerHash",
				"offset": 0,
				"slot": "17",
				"type": "t_bytes32"
			},
			{
				"astId": 3015,
				"contract": "Gloomers.sol:Gloomers",
				"label": "revealed",
				"offset": 0,
				"slot": "18",
				"type": "t_bool"
			},
			{
				"astId": 3018,
				"contract": "Gloomers.sol:Gloomers",
				"label": "_baseTokenURI",
				"offset": 0,
				"slot": "19",
				"type": "t_string_storage"
			}
		],
		"types": {
			"t_address": {
				"encoding": "inplace",
				"label": "address",
				"numberOfBytes": "20"
			},
			"t_bool": {
				"encoding": "inplace",
				"label": "bool",
				"numberOfBytes": "1"
			},
			"t_bytes32": {
				"encoding": "inplace",
				"label": "bytes32",
				"numberOfBytes": "32"
			},
			"t_enum(DropStatus)2989": {
				"encoding": "inplace",
				"label": "enum Gloomers.DropStatus",
				"numberOfBytes": "1"
			},
			"t_mapping(t_address,t_bool)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => bool)",
				"numberOfBytes": "32",
				"value": "t_bool"
			},
			"t_mapping(t_address,t_mapping(t_address,t_bool))": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => mapping(address => bool))",
				"numberOfBytes": "32",
				"value": "t_mapping(t_address,t_bool)"
			},
			"t_mapping(t_address,t_uint256)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => uint256)",
				"numberOfBytes": "32",
				"value": "t_uint256"
			},
			"t_mapping(t_uint256,t_address)": {
				"encoding": "mapping",
				"key": "t_uint256",
				"label": "mapping(uint256 => address)",
				"numberOfBytes": "32",
				"value": "t_address"
			},
			"t_mapping(t_uint256,t_struct(RoyaltyInfo)184_storage)": {
				"encoding": "mapping",
				"key": "t_uint256",
				"label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
				"numberOfBytes": "32",
				"value": "t_struct(RoyaltyInfo)184_storage"
			},
			"t_mapping(t_uint256,t_struct(TokenApprovalRef)511_storage)": {
				"encoding": "mapping",
				"key": "t_uint256",
				"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
				"numberOfBytes": "32",
				"value": "t_struct(TokenApprovalRef)511_storage"
			},
			"t_mapping(t_uint256,t_uint256)": {
				"encoding": "mapping",
				"key": "t_uint256",
				"label": "mapping(uint256 => uint256)",
				"numberOfBytes": "32",
				"value": "t_uint256"
			},
			"t_string_storage": {
				"encoding": "bytes",
				"label": "string",
				"numberOfBytes": "32"
			},
			"t_struct(RoyaltyInfo)184_storage": {
				"encoding": "inplace",
				"label": "struct ERC2981.RoyaltyInfo",
				"members": [
					{
						"astId": 181,
						"contract": "Gloomers.sol:Gloomers",
						"label": "receiver",
						"offset": 0,
						"slot": "0",
						"type": "t_address"
					},
					{
						"astId": 183,
						"contract": "Gloomers.sol:Gloomers",
						"label": "royaltyFraction",
						"offset": 20,
						"slot": "0",
						"type": "t_uint96"
					}
				],
				"numberOfBytes": "32"
			},
			"t_struct(TokenApprovalRef)511_storage": {
				"encoding": "inplace",
				"label": "struct ERC721A.TokenApprovalRef",
				"members": [
					{
						"astId": 510,
						"contract": "Gloomers.sol:Gloomers",
						"label": "value",
						"offset": 0,
						"slot": "0",
						"type": "t_address"
					}
				],
				"numberOfBytes": "32"
			},
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			},
			"t_uint96": {
				"encoding": "inplace",
				"label": "uint96",
				"numberOfBytes": "12"
			}
		}
	},
	"web3Deploy": "var gloomersContract = new web3.eth.Contract([{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimNotActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedsMaxMintPerWallet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedsMaxSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintingDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonEOACaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEligible\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PresaleNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PublicMintNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WhitelistNotActive\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"ClaimPresale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"GloomersMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"MintWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum Gloomers.DropStatus\",\"name\":\"_dropStatus\",\"type\":\"uint8\"}],\"name\":\"NewDropStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"RegisterPresale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"END_TOKEN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_MINT_PER_WALLET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_PER_TOKEN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROVENANCE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUBLIC_MINT_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"START_TOKEN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WHITELIST_START_TIMESTAMP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dropStatus\",\"outputs\":[{\"internalType\":\"enum Gloomers.DropStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"ownership\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getPresaleAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gloomerHash_\",\"type\":\"bytes32\"}],\"name\":\"mintWhitelist\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gloomerHash_\",\"type\":\"bytes32\"}],\"name\":\"registerPresale\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setDefaultRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Gloomers.DropStatus\",\"name\":\"newDropStatus\",\"type\":\"uint8\"}],\"name\":\"setDropStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"gloomerHash_\",\"type\":\"bytes32\"}],\"name\":\"setGloomerHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseTokenURI_\",\"type\":\"string\"}],\"name\":\"setTokenUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]);\nvar gloomers = gloomersContract.deploy({\n     data: '0x600b805460ff60a01b191690556012805460ff19169055610100604052605c60808181529061285660a03960139061003790826102b7565b50348015610043575f80fd5b503360405180604001604052806008815260200167476c6f6f6d65727360c01b81525060405180604001604052806008815260200167474c4f4f4d45525360c01b815250610d066100998161011260201b60201c565b5060026100a683826102b7565b5060036100b382826102b7565b506100bc61011a565b5f556100c661011a565b5050506001600160a01b0381166100f757604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6101008161012c565b5061010d336101f461017d565b610376565b6328f7503255565b5f6101276328f750325490565b905090565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6127106001600160601b0382168110156101bc57604051636f483d0960e01b81526001600160601b0383166004820152602481018290526044016100ee565b6001600160a01b0383166101e557604051635b6cc80560e11b81525f60048201526024016100ee565b50604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600955565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061024757607f821691505b60208210810361026557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102b257805f5260205f20601f840160051c810160208510156102905750805b601f840160051c820191505b818110156102af575f815560010161029c565b50505b505050565b81516001600160401b038111156102d0576102d061021f565b6102e4816102de8454610233565b8461026b565b602080601f831160018114610317575f84156103005750858301515b5f19600386901b1c1916600185901b17855561036e565b5f85815260208120601f198616915b8281101561034557888601518255948401946001909101908401610326565b508582101561036257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6124d3806103835f395ff3fe608060405260043610610231575f3560e01c8063833b94991161012c578063b19960e6116100af578063c87b56dd11610076578063c87b56dd14610661578063e6798baa14610680578063e985e9c514610697578063f2fde38b146106de578063fe776953146106fd578063ff1b65561461071457005b8063b19960e6146105bb578063b19fde5a146105cf578063b88d4fde14610603578063c23dc68f14610616578063c62001bd1461064257005b806395d89b41116100f357806395d89b411461054257806399a2557a146105565780639a4f41ba14610575578063a0712d6814610589578063a22cb4651461059c57005b8063833b9499146104b55780638462151c146104cf57806386879235146104fb57806387f65c91146105105780638da5cb5b1461052557005b806329510d34116101b45780634b962d101161017b5780634b962d10146104185780635bbb2177146104375780636352211e1461046357806370a0823114610482578063715018a6146104a157005b806329510d34146103735780632a55205a146103865780633ccfd60b146103c457806342842e0e146103d857806346b00b6d146103eb57005b8063081812fc116101f8578063081812fc146102e1578063095ea7b31461031857806318160ddd1461032b57806323b872dd1461034d578063242261ac1461036057005b806301ffc9a71461023a57806304634d8d1461026e578063046ef9a51461028d5780630675b7c6146102a157806306fdde03146102c057005b3661023857005b005b348015610245575f80fd5b50610259610254366004611d70565b610747565b60405190151581526020015b60405180910390f35b348015610279575f80fd5b50610238610288366004611da8565b610766565b348015610298575f80fd5b5061023861077c565b3480156102ac575f80fd5b506102386102bb366004611de8565b610932565b3480156102cb575f80fd5b506102d4610999565b6040516102659190611e82565b3480156102ec575f80fd5b506103006102fb366004611e94565b610a29565b6040516001600160a01b039091168152602001610265565b610238610326366004611eab565b610a62565b348015610336575f80fd5b5061033f610a6e565b604051908152602001610265565b61023861035b366004611ed3565b610a83565b61023861036e366004611f0c565b610bdd565b610238610381366004611f0c565b610e02565b348015610391575f80fd5b506103a56103a0366004611f0c565b61102d565b604080516001600160a01b039093168352602083019190915201610265565b3480156103cf575f80fd5b506102386110d7565b6102386103e6366004611ed3565b61110b565b3480156103f6575f80fd5b50600b5461040b90600160a01b900460ff1681565b6040516102659190611f40565b348015610423575f80fd5b50610238610432366004611f66565b61112a565b348015610442575f80fd5b50610456610451366004611f84565b611196565b604051610265919061201e565b34801561046e575f80fd5b5061030061047d366004611e94565b6111e1565b34801561048d575f80fd5b5061033f61049c36600461206b565b6111eb565b3480156104ac575f80fd5b5061023861122f565b3480156104c0575f80fd5b5061033f666a94d74f43000081565b3480156104da575f80fd5b506104ee6104e936600461206b565b611242565b6040516102659190612084565b348015610506575f80fd5b5061033f611a0a81565b34801561051b575f80fd5b5061033f610d0681565b348015610530575f80fd5b50600b546001600160a01b0316610300565b34801561054d575f80fd5b506102d4611279565b348015610561575f80fd5b506104ee6105703660046120bb565b611288565b348015610580575f80fd5b5061033f611295565b610238610597366004611e94565b6112a8565b3480156105a7575f80fd5b506102386105b63660046120eb565b611489565b3480156105c6575f80fd5b5061033f600381565b3480156105da575f80fd5b5061033f6105e936600461206b565b6001600160a01b03165f908152600d602052604090205490565b61023861061136600461212d565b6114f4565b348015610621575f80fd5b50610635610630366004611e94565b611535565b6040516102659190612202565b34801561064d575f80fd5b5061023861065c366004611e94565b61159b565b34801561066c575f80fd5b506102d461067b366004611e94565b6115a8565b34801561068b575f80fd5b506328f750325461033f565b3480156106a2575f80fd5b506102596106b1366004612210565b6001600160a01b039182165f90815260076020908152604080832093909416825291909152205460ff1690565b3480156106e9575f80fd5b506102386106f836600461206b565b611661565b348015610708575f80fd5b5061033f6366365b8081565b34801561071f575f80fd5b5061033f7f5158cf3ac201d8d9dfe63ac7c7d1e7aa58b7c33426665c9bf643e0003e095e2f81565b5f610751826116a0565b806107605750610760826116ed565b92915050565b61076e611721565b610778828261174e565b5050565b5f600b54600160a01b900460ff16600381111561079b5761079b611f2c565b036107b95760405163af79b43760e01b815260040160405180910390fd5b6366365b804210156107de5760405163024fbaa960e41b815260040160405180910390fd5b335f908152600d6020526040812054900361080c57604051637c75aa6f60e11b815260040160405180910390fd5b335f908152600d6020908152604080832054600c909252909120546003908290610837908290612255565b6108419190612255565b1180156108595750600b546001600160a01b03163314155b15610877576040516367eec83360e01b815260040160405180910390fd5b323314610897576040516358516b3f60e01b815260040160405180910390fd5b335f908152600d6020908152604080832054600c90925282208054919283926108c1908490612255565b9091555050335f908152600d60205260408120819055601080548392906108e9908490612268565b909155506108f9905033826117f0565b60405181815233907ff07265907aaf7b6329bb73e97ea492ccbbc0678c94313e1f8331013a2e269d339060200160405180910390a25050565b61093a611721565b6012805460ff1916600117905560136109548284836122fe565b507f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c61097e6118aa565b604080519182525f1960208301520160405180910390a15050565b6060600280546109a89061227b565b80601f01602080910402602001604051908101604052809291908181526020018280546109d49061227b565b8015610a1f5780601f106109f657610100808354040283529160200191610a1f565b820191905f5260205f20905b815481529060010190602001808311610a0257829003601f168201915b5050505050905090565b5f610a33826118bc565b610a4757610a476333d1c03960e21b61190a565b505f908152600660205260409020546001600160a01b031690565b61077882826001611912565b5f610a776118aa565b6001545f540303905090565b5f610a8d826119b3565b6001600160a01b039485169490915081168414610ab357610ab362a1148160e81b61190a565b5f8281526006602052604090208054338082146001600160a01b03881690911417610af657610ae286336106b1565b610af657610af6632ce44b5f60e11b61190a565b8015610b00575f82555b6001600160a01b038681165f9081526005602052604080822080545f19019055918716808252919020805460010190554260a01b17600160e11b175f85815260046020526040812091909155600160e11b84169003610b8c57600184015f818152600460205260408120549003610b8a575f548114610b8a575f8181526004602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4805f03610bd457610bd4633a954ecd60e21b61190a565b50505050505050565b5f600b54600160a01b900460ff166003811115610bfc57610bfc611f2c565b03610c1a5760405163af79b43760e01b815260040160405180910390fd5b6366365b80421115610c3f57604051633844da5760e21b815260040160405180910390fd5b81610c5181666a94d74f4300006123b8565b341015610c715760405163356680b760e01b815260040160405180910390fd5b335f908152600d6020908152604080832054600c9092529091205484916003918391610c9c91612255565b610ca69190612255565b118015610cbe5750600b546001600160a01b03163314155b15610cdc576040516367eec83360e01b815260040160405180910390fd5b83601054611a0a610ced9190612268565b6001610cf75f5490565b610d019084612255565b610d0b9190612268565b1115610d2a5760405163c30436e960e01b815260040160405180910390fd5b838060115414610d4d57604051637c75aa6f60e11b815260040160405180910390fd5b323314610d6d576040516358516b3f60e01b815260040160405180910390fd5b600f5f8154610d7b906123cf565b919050819055508560105f828254610d939190612255565b9091555050335f818152600d602090815260408083208a9055600f548352600e82529182902080546001600160a01b0319168417905590518881527f954e53aaa9ee9f9ae7f4cc7c0ba01de261f35bd07352e3c3383ea3b45ad216d491015b60405180910390a2505050505050565b5f600b54600160a01b900460ff166003811115610e2157610e21611f2c565b03610e3f5760405163af79b43760e01b815260040160405180910390fd5b6366365b80421080610e5f5750610e5c6366365b80612a30612255565b42115b15610e7d576040516302664e7160e11b815260040160405180910390fd5b81610e8f81666a94d74f4300006123b8565b341015610eaf5760405163356680b760e01b815260040160405180910390fd5b335f908152600d6020908152604080832054600c9092529091205484916003918391610eda91612255565b610ee49190612255565b118015610efc5750600b546001600160a01b03163314155b15610f1a576040516367eec83360e01b815260040160405180910390fd5b83601054611a0a610f2b9190612268565b6001610f355f5490565b610f3f9084612255565b610f499190612268565b1115610f685760405163c30436e960e01b815260040160405180910390fd5b838060115414610f8b57604051637c75aa6f60e11b815260040160405180910390fd5b323314610fab576040516358516b3f60e01b815260040160405180910390fd5b8460115414610fcd57604051637c75aa6f60e11b815260040160405180910390fd5b335f908152600c602052604081208054889290610feb908490612255565b90915550610ffb905033876117f0565b60405186815233907fda47e427fb170a95b4539ea720c3caf8ad5a319335b1a85fb3a8db83a61159c090602001610df2565b5f828152600a602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b03169282019290925282916110a15750604080518082019091526009546001600160a01b0381168252600160a01b90046001600160601b031660208201525b60208101515f90612710906110bf906001600160601b0316876123b8565b6110c991906123e7565b915196919550909350505050565b6110df611721565b60405133904780156108fc02915f818181858888f19350505050158015611108573d5f803e3d5ffd5b50565b61112583838360405180602001604052805f8152506114f4565b505050565b611132611721565b600b805482919060ff60a01b1916600160a01b83600381111561115757611157611f2c565b02179055507f3bc110370c8d062d875866567d288433541b3f5f05c98fa991b82ef9f63158818160405161118b9190611f40565b60405180910390a150565b60408051828152600583901b8082016020019092526060915b80156111d957601f1980820191860101355f6111ca82611535565b84840160200152506111af9050565b509392505050565b5f610760826119b3565b5f6001600160a01b03821661120a5761120a6323d3ad8160e21b61190a565b506001600160a01b03165f9081526005602052604090205467ffffffffffffffff1690565b611237611721565b6112405f611a52565b565b60605f61124d6118aa565b90505f6112585f5490565b905060608183146112715761126e858484611aa3565b90505b949350505050565b6060600380546109a89061227b565b6060611271848484611aa3565b6112a56366365b80612a30612255565b81565b5f600b54600160a01b900460ff1660038111156112c7576112c7611f2c565b036112e55760405163af79b43760e01b815260040160405180910390fd5b6112f56366365b80612a30612255565b4210156113155760405163cd967e3560e01b815260040160405180910390fd5b8061132781666a94d74f4300006123b8565b3410156113475760405163356680b760e01b815260040160405180910390fd5b335f908152600d6020908152604080832054600c909252909120548391600391839161137291612255565b61137c9190612255565b1180156113945750600b546001600160a01b03163314155b156113b2576040516367eec83360e01b815260040160405180910390fd5b82601054611a0a6113c39190612268565b60016113cd5f5490565b6113d79084612255565b6113e19190612268565b11156114005760405163c30436e960e01b815260040160405180910390fd5b323314611420576040516358516b3f60e01b815260040160405180910390fd5b335f908152600c60205260408120805486929061143e908490612255565b9091555061144e905033856117f0565b60405184815233907ff07265907aaf7b6329bb73e97ea492ccbbc0678c94313e1f8331013a2e269d339060200160405180910390a250505050565b335f8181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6114ff848484610a83565b6001600160a01b0383163b1561152f5761151b84848484611bae565b61152f5761152f6368d2bf6b60e11b61190a565b50505050565b604080516080810182525f8082526020820181905291810182905260608101919091526115606118aa565b8210611596575f54821015611596575b5f8281526004602052604090205461158d575f1990910190611570565b61076082611c8c565b919050565b6115a3611721565b601155565b60125460609060ff166115bd57610760611d09565b6115c6826118bc565b6115e357604051630a14c4b560e41b815260040160405180910390fd5b5f6115ec611d09565b6012549091505f9060ff161561160a5761160584611d18565b61161a565b60405180602001604052805f8152505b90505f828260405160200161163092919061241d565b604051602081830303815290604052905082515f036112715760405180602001604052805f81525095945050505050565b611669611721565b6001600160a01b03811661169757604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61110881611a52565b5f6301ffc9a760e01b6001600160e01b0319831614806116d057506380ac58cd60e01b6001600160e01b03198316145b806107605750506001600160e01b031916635b5e139f60e01b1490565b5f6001600160e01b0319821663152a902d60e11b148061076057506301ffc9a760e01b6001600160e01b0319831614610760565b600b546001600160a01b031633146112405760405163118cdaa760e01b815233600482015260240161168e565b6127106001600160601b03821681101561178d57604051636f483d0960e01b81526001600160601b03831660048201526024810182905260440161168e565b6001600160a01b0383166117b657604051635b6cc80560e11b81525f600482015260240161168e565b50604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600955565b5f80549082900361180b5761180b63b562e8dd60e01b61190a565b5f8181526004602090815260408083206001600160a01b0387164260a01b6001881460e11b1781179091558084526005909252822080546801000000000000000186020190559081900361186857611868622e076360e81b61190a565b818301825b80835f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a481816001019150810361186d57505f5550505050565b5f6118b76328f750325490565b905090565b5f816118c66118aa565b11611596575f54821015611596575f5b505f82815260046020526040812054908190036118fd576118f683612431565b92506118d6565b600160e01b161592915050565b805f5260045ffd5b5f61191c836111e1565b90508180156119345750336001600160a01b03821614155b156119575761194381336106b1565b611957576119576367d9dca160e11b61190a565b5f8381526006602052604080822080546001600160a01b0319166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b5f816119bd6118aa565b11611a4257505f81815260046020526040902054805f03611a30575f5482106119f0576119f0636f96cda160e11b61190a565b5b505f19015f8181526004602052604090205480156119f157600160e01b81165f03611a1b57919050565b611a2b636f96cda160e11b61190a565b6119f1565b600160e01b81165f03611a4257919050565b611596636f96cda160e11b61190a565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6060818310611abc57611abc631960ccad60e11b61190a565b611ac46118aa565b831015611ad657611ad36118aa565b92505b5f5480808410611ae4578093505b5f611aee876111eb565b9050848610611afa57505f5b8015611ba4578086860311611b0e57508484035b604080516001830160051b81019182905294505f611b2b88611535565b90505f8160400151611b3b575080515b5f5b611b468a611c8c565b925060408301515f8114611b5c575f9250611b81565b835115611b6857835192505b8b831860601b611b81576001820191508a8260051b8a01525b5060018a01995083604052888a1480611b9957508481145b15611b3d5787525050505b5050509392505050565b604051630a85bd0160e11b81525f906001600160a01b0385169063150b7a0290611be2903390899088908890600401612446565b6020604051808303815f875af1925050508015611c1c575060408051601f3d908101601f19168201909252611c1991810190612482565b60015b611c6f573d808015611c49576040519150601f19603f3d011682016040523d82523d5f602084013e611c4e565b606091505b5080515f03611c6757611c676368d2bf6b60e11b61190a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080810182525f8082526020820181905291810182905260608101919091525f8281526004602052604090205461076090604080516080810182526001600160a01b038316815260a083901c67ffffffffffffffff166020820152600160e01b831615159181019190915260e89190911c606082015290565b6060601380546109a89061227b565b606060a06040510180604052602081039150505f815280825b600183039250600a81066030018353600a900480611d315750819003601f19909101908152919050565b6001600160e01b031981168114611108575f80fd5b5f60208284031215611d80575f80fd5b8135611d8b81611d5b565b9392505050565b80356001600160a01b0381168114611596575f80fd5b5f8060408385031215611db9575f80fd5b611dc283611d92565b915060208301356001600160601b0381168114611ddd575f80fd5b809150509250929050565b5f8060208385031215611df9575f80fd5b823567ffffffffffffffff80821115611e10575f80fd5b818501915085601f830112611e23575f80fd5b813581811115611e31575f80fd5b866020828501011115611e42575f80fd5b60209290920196919550909350505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f611d8b6020830184611e54565b5f60208284031215611ea4575f80fd5b5035919050565b5f8060408385031215611ebc575f80fd5b611ec583611d92565b946020939093013593505050565b5f805f60608486031215611ee5575f80fd5b611eee84611d92565b9250611efc60208501611d92565b9150604084013590509250925092565b5f8060408385031215611f1d575f80fd5b50508035926020909101359150565b634e487b7160e01b5f52602160045260245ffd5b6020810160048310611f6057634e487b7160e01b5f52602160045260245ffd5b91905290565b5f60208284031215611f76575f80fd5b813560048110611d8b575f80fd5b5f8060208385031215611f95575f80fd5b823567ffffffffffffffff80821115611fac575f80fd5b818501915085601f830112611fbf575f80fd5b813581811115611fcd575f80fd5b8660208260051b8501011115611e42575f80fd5b80516001600160a01b0316825260208082015167ffffffffffffffff169083015260408082015115159083015260609081015162ffffff16910152565b602080825282518282018190525f9190848201906040850190845b8181101561205f5761204c838551611fe1565b9284019260809290920191600101612039565b50909695505050505050565b5f6020828403121561207b575f80fd5b611d8b82611d92565b602080825282518282018190525f9190848201906040850190845b8181101561205f5783518352928401929184019160010161209f565b5f805f606084860312156120cd575f80fd5b6120d684611d92565b95602085013595506040909401359392505050565b5f80604083850312156120fc575f80fd5b61210583611d92565b915060208301358015158114611ddd575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215612140575f80fd5b61214985611d92565b935061215760208601611d92565b925060408501359150606085013567ffffffffffffffff8082111561217a575f80fd5b818701915087601f83011261218d575f80fd5b81358181111561219f5761219f612119565b604051601f8201601f19908116603f011681019083821181831017156121c7576121c7612119565b816040528281528a60208487010111156121df575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b608081016107608284611fe1565b5f8060408385031215612221575f80fd5b61222a83611d92565b915061223860208401611d92565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561076057610760612241565b8181038181111561076057610760612241565b600181811c9082168061228f57607f821691505b6020821081036122ad57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561112557805f5260205f20601f840160051c810160208510156122d85750805b601f840160051c820191505b818110156122f7575f81556001016122e4565b5050505050565b67ffffffffffffffff83111561231657612316612119565b61232a83612324835461227b565b836122b3565b5f601f84116001811461235b575f85156123445750838201355b5f19600387901b1c1916600186901b1783556122f7565b5f83815260208120601f198716915b8281101561238a578685013582556020948501946001909201910161236a565b50868210156123a6575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b808202811582820484141761076057610760612241565b5f600182016123e0576123e0612241565b5060010190565b5f8261240157634e487b7160e01b5f52601260045260245ffd5b500490565b5f81518060208401855e5f93019283525090919050565b5f61127161242b8386612406565b84612406565b5f8161243f5761243f612241565b505f190190565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061247890830184611e54565b9695505050505050565b5f60208284031215612492575f80fd5b8151611d8b81611d5b56fea2646970667358221220b13bd27fe976b9c80d7f049ec1ea9ffe4285f2dc41fb36a93af9dac3a399ff2b64736f6c6343000819003368747470733a2f2f697066732e676c6f6f6d746f6b656e2e78797a2f697066732f62616679626569646e726761677a726a76617672736a746e7a36716871766e6c626b7a337668357133356766676b6a323336796c737877706d7379', \n     arguments: [\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"86879235": "END_TOKEN_ID()",
		"b19960e6": "MAX_MINT_PER_WALLET()",
		"833b9499": "PRICE_PER_TOKEN()",
		"ff1b6556": "PROVENANCE_HASH()",
		"9a4f41ba": "PUBLIC_MINT_TIMESTAMP()",
		"87f65c91": "START_TOKEN_ID()",
		"fe776953": "WHITELIST_START_TIMESTAMP()",
		"095ea7b3": "approve(address,uint256)",
		"70a08231": "balanceOf(address)",
		"046ef9a5": "claimPresale()",
		"46b00b6d": "dropStatus()",
		"c23dc68f": "explicitOwnershipOf(uint256)",
		"5bbb2177": "explicitOwnershipsOf(uint256[])",
		"081812fc": "getApproved(uint256)",
		"b19fde5a": "getPresaleAllocation(address)",
		"e985e9c5": "isApprovedForAll(address,address)",
		"a0712d68": "mint(uint256)",
		"29510d34": "mintWhitelist(uint256,bytes32)",
		"06fdde03": "name()",
		"8da5cb5b": "owner()",
		"6352211e": "ownerOf(uint256)",
		"242261ac": "registerPresale(uint256,bytes32)",
		"715018a6": "renounceOwnership()",
		"2a55205a": "royaltyInfo(uint256,uint256)",
		"42842e0e": "safeTransferFrom(address,address,uint256)",
		"b88d4fde": "safeTransferFrom(address,address,uint256,bytes)",
		"a22cb465": "setApprovalForAll(address,bool)",
		"04634d8d": "setDefaultRoyalty(address,uint96)",
		"4b962d10": "setDropStatus(uint8)",
		"c62001bd": "setGloomerHash(bytes32)",
		"0675b7c6": "setTokenUri(string)",
		"e6798baa": "startTokenId()",
		"01ffc9a7": "supportsInterface(bytes4)",
		"95d89b41": "symbol()",
		"c87b56dd": "tokenURI(uint256)",
		"8462151c": "tokensOfOwner(address)",
		"99a2557a": "tokensOfOwnerIn(address,uint256,uint256)",
		"18160ddd": "totalSupply()",
		"23b872dd": "transferFrom(address,address,uint256)",
		"f2fde38b": "transferOwnership(address)",
		"3ccfd60b": "withdraw()"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "1885400",
			"executionCost": "infinite",
			"totalCost": "infinite"
		},
		"External": {
			"": "229",
			"END_TOKEN_ID()": "284",
			"MAX_MINT_PER_WALLET()": "239",
			"PRICE_PER_TOKEN()": "240",
			"PROVENANCE_HASH()": "348",
			"PUBLIC_MINT_TIMESTAMP()": "367",
			"START_TOKEN_ID()": "306",
			"WHITELIST_START_TIMESTAMP()": "326",
			"approve(address,uint256)": "infinite",
			"balanceOf(address)": "2702",
			"claimPresale()": "infinite",
			"dropStatus()": "2501",
			"explicitOwnershipOf(uint256)": "infinite",
			"explicitOwnershipsOf(uint256[])": "infinite",
			"getApproved(uint256)": "infinite",
			"getPresaleAllocation(address)": "2601",
			"isApprovedForAll(address,address)": "infinite",
			"mint(uint256)": "infinite",
			"mintWhitelist(uint256,bytes32)": "infinite",
			"name()": "infinite",
			"owner()": "2464",
			"ownerOf(uint256)": "infinite",
			"registerPresale(uint256,bytes32)": "infinite",
			"renounceOwnership()": "infinite",
			"royaltyInfo(uint256,uint256)": "5162",
			"safeTransferFrom(address,address,uint256)": "infinite",
			"safeTransferFrom(address,address,uint256,bytes)": "infinite",
			"setApprovalForAll(address,bool)": "26715",
			"setDefaultRoyalty(address,uint96)": "24963",
			"setDropStatus(uint8)": "27855",
			"setGloomerHash(bytes32)": "24619",
			"setTokenUri(string)": "infinite",
			"startTokenId()": "2357",
			"supportsInterface(bytes4)": "infinite",
			"symbol()": "infinite",
			"tokenURI(uint256)": "infinite",
			"tokensOfOwner(address)": "infinite",
			"tokensOfOwnerIn(address,uint256,uint256)": "infinite",
			"totalSupply()": "6663",
			"transferFrom(address,address,uint256)": "infinite",
			"transferOwnership(address)": "28443",
			"withdraw()": "infinite"
		},
		"Internal": {
			"_baseURI()": "infinite",
			"_startTokenId()": "2137"
		}
	},
	"devdoc": {
		"author": "soko.eth | Gloom Labs | https://www.gloomtoken.com",
		"details": "ERC721A contract with presale, whitelist, and public minting periods.",
		"errors": {
			"ERC2981InvalidDefaultRoyalty(uint256,uint256)": [
				{
					"details": "The default royalty set is invalid (eg. (numerator / denominator) >= 1)."
				}
			],
			"ERC2981InvalidDefaultRoyaltyReceiver(address)": [
				{
					"details": "The default royalty receiver is invalid."
				}
			],
			"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)": [
				{
					"details": "The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."
				}
			],
			"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)": [
				{
					"details": "The royalty receiver for `tokenId` is invalid."
				}
			],
			"OwnableInvalidOwner(address)": [
				{
					"details": "The owner is not a valid owner account. (eg. `address(0)`)"
				}
			],
			"OwnableUnauthorizedAccount(address)": [
				{
					"details": "The caller account is not authorized to perform an operation."
				}
			]
		},
		"events": {
			"Approval(address,address,uint256)": {
				"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
			},
			"ApprovalForAll(address,address,bool)": {
				"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
			},
			"ConsecutiveTransfer(uint256,uint256,address,address)": {
				"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
			},
			"Transfer(address,address,uint256)": {
				"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
			}
		},
		"kind": "dev",
		"methods": {
			"approve(address,uint256)": {
				"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
			},
			"balanceOf(address)": {
				"details": "Returns the number of tokens in `owner`'s account."
			},
			"explicitOwnershipOf(uint256)": {
				"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
			},
			"explicitOwnershipsOf(uint256[])": {
				"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
			},
			"getApproved(uint256)": {
				"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
			},
			"isApprovedForAll(address,address)": {
				"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
			},
			"name()": {
				"details": "Returns the token collection name."
			},
			"owner()": {
				"details": "Returns the address of the current owner."
			},
			"ownerOf(uint256)": {
				"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
			},
			"renounceOwnership()": {
				"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
			},
			"royaltyInfo(uint256,uint256)": {
				"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
			},
			"safeTransferFrom(address,address,uint256)": {
				"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
			},
			"safeTransferFrom(address,address,uint256,bytes)": {
				"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
			},
			"setApprovalForAll(address,bool)": {
				"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
			},
			"symbol()": {
				"details": "Returns the token collection symbol."
			},
			"tokensOfOwner(address)": {
				"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
			},
			"tokensOfOwnerIn(address,uint256,uint256)": {
				"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
			},
			"totalSupply()": {
				"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
			},
			"transferFrom(address,address,uint256)": {
				"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
			},
			"transferOwnership(address)": {
				"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
			}
		},
		"title": "Gloomers #3334 - #6666",
		"version": 1
	},
	"userdoc": {
		"errors": {
			"ApprovalCallerNotOwnerNorApproved()": [
				{
					"notice": "The caller must own the token or be an approved operator."
				}
			],
			"ApprovalQueryForNonexistentToken()": [
				{
					"notice": "The token does not exist."
				}
			],
			"BalanceQueryForZeroAddress()": [
				{
					"notice": "Cannot query the balance for the zero address."
				}
			],
			"InvalidQueryRange()": [
				{
					"notice": "Invalid query range (`start` >= `stop`)."
				}
			],
			"MintERC2309QuantityExceedsLimit()": [
				{
					"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
				}
			],
			"MintToZeroAddress()": [
				{
					"notice": "Cannot mint to the zero address."
				}
			],
			"MintZeroQuantity()": [
				{
					"notice": "The quantity of tokens minted must be more than zero."
				}
			],
			"NotCompatibleWithSpotMints()": [
				{
					"notice": "The feature is not compatible with spot mints."
				}
			],
			"OwnerQueryForNonexistentToken()": [
				{
					"notice": "The token does not exist."
				}
			],
			"OwnershipNotInitializedForExtraData()": [
				{
					"notice": "The `extraData` cannot be set on an unintialized ownership slot."
				}
			],
			"SequentialMintExceedsLimit()": [
				{
					"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
				}
			],
			"SequentialUpToTooSmall()": [
				{
					"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
				}
			],
			"SpotMintTokenIdTooSmall()": [
				{
					"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
				}
			],
			"TokenAlreadyExists()": [
				{
					"notice": "Cannot mint over a token that already exists."
				}
			],
			"TransferCallerNotOwnerNorApproved()": [
				{
					"notice": "The caller must own the token or be an approved operator."
				}
			],
			"TransferFromIncorrectOwner()": [
				{
					"notice": "The token must be owned by `from`."
				}
			],
			"TransferToNonERC721ReceiverImplementer()": [
				{
					"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
				}
			],
			"TransferToZeroAddress()": [
				{
					"notice": "Cannot transfer to the zero address."
				}
			],
			"URIQueryForNonexistentToken()": [
				{
					"notice": "The token does not exist."
				}
			]
		},
		"kind": "user",
		"methods": {},
		"notice": "Gloomers is a 10k PFP collection launched across Base, Solana, and Optimism with teleburning to Bitcoin",
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@END_TOKEN_ID_2967": {
				"entryPoint": null,
				"id": 2967,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@MAX_MINT_PER_WALLET_2973": {
				"entryPoint": null,
				"id": 2973,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@PRICE_PER_TOKEN_2970": {
				"entryPoint": null,
				"id": 2970,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@PROVENANCE_HASH_2976": {
				"entryPoint": null,
				"id": 2976,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@PUBLIC_MINT_TIMESTAMP_2984": {
				"entryPoint": 4757,
				"id": 2984,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@START_TOKEN_ID_2964": {
				"entryPoint": null,
				"id": 2964,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@WHITELIST_START_TIMESTAMP_2979": {
				"entryPoint": null,
				"id": 2979,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_3678": {
				"entryPoint": null,
				"id": 3678,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_3682": {
				"entryPoint": null,
				"id": 3682,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_afterTokenTransfers_1661": {
				"entryPoint": null,
				"id": 1661,
				"parameterSlots": 4,
				"returnSlots": 0
			},
			"@_approve_2303": {
				"entryPoint": 6418,
				"id": 2303,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_baseURI_3520": {
				"entryPoint": 7433,
				"id": 3520,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_beforeTokenTransfers_1648": {
				"entryPoint": null,
				"id": 1648,
				"parameterSlots": 4,
				"returnSlots": 0
			},
			"@_checkContractOnERC721Received_1717": {
				"entryPoint": 7086,
				"id": 1717,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"@_checkOwner_84": {
				"entryPoint": 5921,
				"id": 84,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_exists_1358": {
				"entryPoint": 6332,
				"id": 1358,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_extraData_2529": {
				"entryPoint": null,
				"id": 2529,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@_feeDenominator_302": {
				"entryPoint": null,
				"id": 302,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_getApprovedSlotAndAddress_1401": {
				"entryPoint": null,
				"id": 1401,
				"parameterSlots": 1,
				"returnSlots": 2
			},
			"@_isSenderApprovedOrOwner_1382": {
				"entryPoint": null,
				"id": 1382,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@_mint_1848": {
				"entryPoint": 6128,
				"id": 1848,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_msgSenderERC721A_2572": {
				"entryPoint": null,
				"id": 2572,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_msgSender_433": {
				"entryPoint": null,
				"id": 433,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_nextExtraData_2562": {
				"entryPoint": null,
				"id": 2562,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@_nextInitializedFlag_1219": {
				"entryPoint": null,
				"id": 1219,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_nextTokenId_669": {
				"entryPoint": null,
				"id": 669,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_ownershipAt_1013": {
				"entryPoint": 7308,
				"id": 1013,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_ownershipIsInitialized_1028": {
				"entryPoint": null,
				"id": 1028,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_packOwnershipData_1209": {
				"entryPoint": null,
				"id": 1209,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@_packedOwnershipExists_1368": {
				"entryPoint": null,
				"id": 1368,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_packedOwnershipOf_1143": {
				"entryPoint": 6579,
				"id": 1143,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_revert_2590": {
				"entryPoint": 6410,
				"id": 2590,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_sequentialUpTo_660": {
				"entryPoint": null,
				"id": 660,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_setDefaultRoyalty_348": {
				"entryPoint": 5966,
				"id": 348,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_startTokenId_3510": {
				"entryPoint": 6314,
				"id": 3510,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_toString_2582": {
				"entryPoint": 7448,
				"id": 2582,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_tokensOfOwnerIn_2935": {
				"entryPoint": 6819,
				"id": 2935,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@_transferOwnership_146": {
				"entryPoint": 6738,
				"id": 146,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_unpackedOwnership_1197": {
				"entryPoint": null,
				"id": 1197,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@approve_1235": {
				"entryPoint": 2658,
				"id": 1235,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@balanceOf_774": {
				"entryPoint": 4587,
				"id": 774,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@claimPresale_3488": {
				"entryPoint": 1916,
				"id": 3488,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@dropStatus_2994": {
				"entryPoint": null,
				"id": 2994,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@explicitOwnershipOf_2645": {
				"entryPoint": 5429,
				"id": 2645,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@explicitOwnershipsOf_2689": {
				"entryPoint": 4502,
				"id": 2689,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@getApproved_1260": {
				"entryPoint": 2601,
				"id": 1260,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@getPresaleAllocation_3500": {
				"entryPoint": null,
				"id": 3500,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@isApprovedForAll_1304": {
				"entryPoint": null,
				"id": 1304,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@mintWhitelist_3374": {
				"entryPoint": 3586,
				"id": 3374,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@mint_3315": {
				"entryPoint": 4776,
				"id": 3315,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@name_897": {
				"entryPoint": 2457,
				"id": 897,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@ownerOf_981": {
				"entryPoint": 4577,
				"id": 981,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@owner_67": {
				"entryPoint": null,
				"id": 67,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@registerPresale_3433": {
				"entryPoint": 3037,
				"id": 3433,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@renounceOwnership_98": {
				"entryPoint": 4655,
				"id": 98,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@royaltyInfo_293": {
				"entryPoint": 4141,
				"id": 293,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"@safeTransferFrom_1594": {
				"entryPoint": 4363,
				"id": 1594,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@safeTransferFrom_1635": {
				"entryPoint": 5364,
				"id": 1635,
				"parameterSlots": 4,
				"returnSlots": 0
			},
			"@setApprovalForAll_1286": {
				"entryPoint": 5257,
				"id": 1286,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@setDefaultRoyalty_3626": {
				"entryPoint": 1894,
				"id": 3626,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@setDropStatus_3643": {
				"entryPoint": 4394,
				"id": 3643,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@setGloomerHash_3655": {
				"entryPoint": 5531,
				"id": 3655,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@setTokenUri_3611": {
				"entryPoint": 2354,
				"id": 3611,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@startTokenId_4001": {
				"entryPoint": null,
				"id": 4001,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@supportsInterface_244": {
				"entryPoint": 5869,
				"id": 244,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@supportsInterface_3704": {
				"entryPoint": 1863,
				"id": 3704,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@supportsInterface_474": {
				"entryPoint": null,
				"id": 474,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@supportsInterface_887": {
				"entryPoint": 5792,
				"id": 887,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@symbol_907": {
				"entryPoint": 4729,
				"id": 907,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@tokenURI_3584": {
				"entryPoint": 5544,
				"id": 3584,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@tokensOfOwnerIn_2710": {
				"entryPoint": 4744,
				"id": 2710,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@tokensOfOwner_2765": {
				"entryPoint": 4674,
				"id": 2765,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@totalSupply_700": {
				"entryPoint": 2670,
				"id": 700,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@transferFrom_1575": {
				"entryPoint": 2691,
				"id": 1575,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@transferOwnership_126": {
				"entryPoint": 5729,
				"id": 126,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@withdraw_3674": {
				"entryPoint": 4311,
				"id": 3674,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"abi_decode_address": {
				"entryPoint": 7570,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_address": {
				"entryPoint": 8299,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_addresst_address": {
				"entryPoint": 8720,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_addresst_addresst_uint256": {
				"entryPoint": 7891,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 3
			},
			"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
				"entryPoint": 8493,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 4
			},
			"abi_decode_tuple_t_addresst_bool": {
				"entryPoint": 8427,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_addresst_uint256": {
				"entryPoint": 7851,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_addresst_uint256t_uint256": {
				"entryPoint": 8379,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 3
			},
			"abi_decode_tuple_t_addresst_uint96": {
				"entryPoint": 7592,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
				"entryPoint": 8068,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_bytes32": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_bytes4": {
				"entryPoint": 7536,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_bytes4_fromMemory": {
				"entryPoint": 9346,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_enum$_DropStatus_$2989": {
				"entryPoint": 8038,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_string_calldata_ptr": {
				"entryPoint": 7656,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_uint256": {
				"entryPoint": 7828,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_uint256t_bytes32": {
				"entryPoint": 7948,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_uint256t_uint256": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_encode_string": {
				"entryPoint": 9222,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_string_memory_ptr": {
				"entryPoint": 7764,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_struct_TokenOwnership": {
				"entryPoint": 8161,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
				"entryPoint": 9245,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
				"entryPoint": 9286,
				"id": null,
				"parameterSlots": 5,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_array$_t_struct$_TokenOwnership_$3771_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenOwnership_$3771_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
				"entryPoint": 8222,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
				"entryPoint": 8324,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_enum$_DropStatus_$2989__to_t_uint8__fromStack_reversed": {
				"entryPoint": 8000,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 7810,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_struct$_TokenOwnership_$3771_memory_ptr__to_t_struct$_TokenOwnership_$3771_memory_ptr__fromStack_reversed": {
				"entryPoint": 8706,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"array_dataslot_string_storage": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"checked_add_t_uint256": {
				"entryPoint": 8789,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_div_t_uint256": {
				"entryPoint": 9191,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_mul_t_uint256": {
				"entryPoint": 9144,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_sub_t_uint256": {
				"entryPoint": 8808,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"clean_up_bytearray_end_slots_string_storage": {
				"entryPoint": 8883,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage": {
				"entryPoint": 8958,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"decrement_t_uint256": {
				"entryPoint": 9265,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"extract_byte_array_length": {
				"entryPoint": 8827,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"extract_used_part_and_set_length_of_short_byte_array": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"increment_t_uint256": {
				"entryPoint": 9167,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"panic_error_0x11": {
				"entryPoint": 8769,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x21": {
				"entryPoint": 7980,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x41": {
				"entryPoint": 8473,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"validator_revert_bytes4": {
				"entryPoint": 7515,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:15639:12",
					"nodeType": "YulBlock",
					"src": "0:15639:12",
					"statements": [
						{
							"nativeSrc": "6:3:12",
							"nodeType": "YulBlock",
							"src": "6:3:12",
							"statements": []
						},
						{
							"body": {
								"nativeSrc": "58:87:12",
								"nodeType": "YulBlock",
								"src": "58:87:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "123:16:12",
											"nodeType": "YulBlock",
											"src": "123:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "132:1:12",
																"nodeType": "YulLiteral",
																"src": "132:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "135:1:12",
																"nodeType": "YulLiteral",
																"src": "135:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "125:6:12",
															"nodeType": "YulIdentifier",
															"src": "125:6:12"
														},
														"nativeSrc": "125:12:12",
														"nodeType": "YulFunctionCall",
														"src": "125:12:12"
													},
													"nativeSrc": "125:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "125:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "81:5:12",
															"nodeType": "YulIdentifier",
															"src": "81:5:12"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "92:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "92:5:12"
																},
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "103:3:12",
																			"nodeType": "YulLiteral",
																			"src": "103:3:12",
																			"type": "",
																			"value": "224"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "108:10:12",
																			"nodeType": "YulLiteral",
																			"src": "108:10:12",
																			"type": "",
																			"value": "0xffffffff"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nativeSrc": "99:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "99:3:12"
																	},
																	"nativeSrc": "99:20:12",
																	"nodeType": "YulFunctionCall",
																	"src": "99:20:12"
																}
															],
															"functionName": {
																"name": "and",
																"nativeSrc": "88:3:12",
																"nodeType": "YulIdentifier",
																"src": "88:3:12"
															},
															"nativeSrc": "88:32:12",
															"nodeType": "YulFunctionCall",
															"src": "88:32:12"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "78:2:12",
														"nodeType": "YulIdentifier",
														"src": "78:2:12"
													},
													"nativeSrc": "78:43:12",
													"nodeType": "YulFunctionCall",
													"src": "78:43:12"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "71:6:12",
												"nodeType": "YulIdentifier",
												"src": "71:6:12"
											},
											"nativeSrc": "71:51:12",
											"nodeType": "YulFunctionCall",
											"src": "71:51:12"
										},
										"nativeSrc": "68:71:12",
										"nodeType": "YulIf",
										"src": "68:71:12"
									}
								]
							},
							"name": "validator_revert_bytes4",
							"nativeSrc": "14:131:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "47:5:12",
									"nodeType": "YulTypedName",
									"src": "47:5:12",
									"type": ""
								}
							],
							"src": "14:131:12"
						},
						{
							"body": {
								"nativeSrc": "219:176:12",
								"nodeType": "YulBlock",
								"src": "219:176:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "265:16:12",
											"nodeType": "YulBlock",
											"src": "265:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "274:1:12",
																"nodeType": "YulLiteral",
																"src": "274:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "277:1:12",
																"nodeType": "YulLiteral",
																"src": "277:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "267:6:12",
															"nodeType": "YulIdentifier",
															"src": "267:6:12"
														},
														"nativeSrc": "267:12:12",
														"nodeType": "YulFunctionCall",
														"src": "267:12:12"
													},
													"nativeSrc": "267:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "267:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "240:7:12",
															"nodeType": "YulIdentifier",
															"src": "240:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "249:9:12",
															"nodeType": "YulIdentifier",
															"src": "249:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "236:3:12",
														"nodeType": "YulIdentifier",
														"src": "236:3:12"
													},
													"nativeSrc": "236:23:12",
													"nodeType": "YulFunctionCall",
													"src": "236:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "261:2:12",
													"nodeType": "YulLiteral",
													"src": "261:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "232:3:12",
												"nodeType": "YulIdentifier",
												"src": "232:3:12"
											},
											"nativeSrc": "232:32:12",
											"nodeType": "YulFunctionCall",
											"src": "232:32:12"
										},
										"nativeSrc": "229:52:12",
										"nodeType": "YulIf",
										"src": "229:52:12"
									},
									{
										"nativeSrc": "290:36:12",
										"nodeType": "YulVariableDeclaration",
										"src": "290:36:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "316:9:12",
													"nodeType": "YulIdentifier",
													"src": "316:9:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "303:12:12",
												"nodeType": "YulIdentifier",
												"src": "303:12:12"
											},
											"nativeSrc": "303:23:12",
											"nodeType": "YulFunctionCall",
											"src": "303:23:12"
										},
										"variables": [
											{
												"name": "value",
												"nativeSrc": "294:5:12",
												"nodeType": "YulTypedName",
												"src": "294:5:12",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "359:5:12",
													"nodeType": "YulIdentifier",
													"src": "359:5:12"
												}
											],
											"functionName": {
												"name": "validator_revert_bytes4",
												"nativeSrc": "335:23:12",
												"nodeType": "YulIdentifier",
												"src": "335:23:12"
											},
											"nativeSrc": "335:30:12",
											"nodeType": "YulFunctionCall",
											"src": "335:30:12"
										},
										"nativeSrc": "335:30:12",
										"nodeType": "YulExpressionStatement",
										"src": "335:30:12"
									},
									{
										"nativeSrc": "374:15:12",
										"nodeType": "YulAssignment",
										"src": "374:15:12",
										"value": {
											"name": "value",
											"nativeSrc": "384:5:12",
											"nodeType": "YulIdentifier",
											"src": "384:5:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "374:6:12",
												"nodeType": "YulIdentifier",
												"src": "374:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_bytes4",
							"nativeSrc": "150:245:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "185:9:12",
									"nodeType": "YulTypedName",
									"src": "185:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "196:7:12",
									"nodeType": "YulTypedName",
									"src": "196:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "208:6:12",
									"nodeType": "YulTypedName",
									"src": "208:6:12",
									"type": ""
								}
							],
							"src": "150:245:12"
						},
						{
							"body": {
								"nativeSrc": "495:92:12",
								"nodeType": "YulBlock",
								"src": "495:92:12",
								"statements": [
									{
										"nativeSrc": "505:26:12",
										"nodeType": "YulAssignment",
										"src": "505:26:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "517:9:12",
													"nodeType": "YulIdentifier",
													"src": "517:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "528:2:12",
													"nodeType": "YulLiteral",
													"src": "528:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "513:3:12",
												"nodeType": "YulIdentifier",
												"src": "513:3:12"
											},
											"nativeSrc": "513:18:12",
											"nodeType": "YulFunctionCall",
											"src": "513:18:12"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "505:4:12",
												"nodeType": "YulIdentifier",
												"src": "505:4:12"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "547:9:12",
													"nodeType": "YulIdentifier",
													"src": "547:9:12"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "value0",
																	"nativeSrc": "572:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "572:6:12"
																}
															],
															"functionName": {
																"name": "iszero",
																"nativeSrc": "565:6:12",
																"nodeType": "YulIdentifier",
																"src": "565:6:12"
															},
															"nativeSrc": "565:14:12",
															"nodeType": "YulFunctionCall",
															"src": "565:14:12"
														}
													],
													"functionName": {
														"name": "iszero",
														"nativeSrc": "558:6:12",
														"nodeType": "YulIdentifier",
														"src": "558:6:12"
													},
													"nativeSrc": "558:22:12",
													"nodeType": "YulFunctionCall",
													"src": "558:22:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "540:6:12",
												"nodeType": "YulIdentifier",
												"src": "540:6:12"
											},
											"nativeSrc": "540:41:12",
											"nodeType": "YulFunctionCall",
											"src": "540:41:12"
										},
										"nativeSrc": "540:41:12",
										"nodeType": "YulExpressionStatement",
										"src": "540:41:12"
									}
								]
							},
							"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
							"nativeSrc": "400:187:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "464:9:12",
									"nodeType": "YulTypedName",
									"src": "464:9:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "475:6:12",
									"nodeType": "YulTypedName",
									"src": "475:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "486:4:12",
									"nodeType": "YulTypedName",
									"src": "486:4:12",
									"type": ""
								}
							],
							"src": "400:187:12"
						},
						{
							"body": {
								"nativeSrc": "641:124:12",
								"nodeType": "YulBlock",
								"src": "641:124:12",
								"statements": [
									{
										"nativeSrc": "651:29:12",
										"nodeType": "YulAssignment",
										"src": "651:29:12",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "673:6:12",
													"nodeType": "YulIdentifier",
													"src": "673:6:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "660:12:12",
												"nodeType": "YulIdentifier",
												"src": "660:12:12"
											},
											"nativeSrc": "660:20:12",
											"nodeType": "YulFunctionCall",
											"src": "660:20:12"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "651:5:12",
												"nodeType": "YulIdentifier",
												"src": "651:5:12"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "743:16:12",
											"nodeType": "YulBlock",
											"src": "743:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "752:1:12",
																"nodeType": "YulLiteral",
																"src": "752:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "755:1:12",
																"nodeType": "YulLiteral",
																"src": "755:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "745:6:12",
															"nodeType": "YulIdentifier",
															"src": "745:6:12"
														},
														"nativeSrc": "745:12:12",
														"nodeType": "YulFunctionCall",
														"src": "745:12:12"
													},
													"nativeSrc": "745:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "745:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "702:5:12",
															"nodeType": "YulIdentifier",
															"src": "702:5:12"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "713:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "713:5:12"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "728:3:12",
																					"nodeType": "YulLiteral",
																					"src": "728:3:12",
																					"type": "",
																					"value": "160"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "733:1:12",
																					"nodeType": "YulLiteral",
																					"src": "733:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "724:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "724:3:12"
																			},
																			"nativeSrc": "724:11:12",
																			"nodeType": "YulFunctionCall",
																			"src": "724:11:12"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "737:1:12",
																			"nodeType": "YulLiteral",
																			"src": "737:1:12",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "sub",
																		"nativeSrc": "720:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "720:3:12"
																	},
																	"nativeSrc": "720:19:12",
																	"nodeType": "YulFunctionCall",
																	"src": "720:19:12"
																}
															],
															"functionName": {
																"name": "and",
																"nativeSrc": "709:3:12",
																"nodeType": "YulIdentifier",
																"src": "709:3:12"
															},
															"nativeSrc": "709:31:12",
															"nodeType": "YulFunctionCall",
															"src": "709:31:12"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "699:2:12",
														"nodeType": "YulIdentifier",
														"src": "699:2:12"
													},
													"nativeSrc": "699:42:12",
													"nodeType": "YulFunctionCall",
													"src": "699:42:12"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "692:6:12",
												"nodeType": "YulIdentifier",
												"src": "692:6:12"
											},
											"nativeSrc": "692:50:12",
											"nodeType": "YulFunctionCall",
											"src": "692:50:12"
										},
										"nativeSrc": "689:70:12",
										"nodeType": "YulIf",
										"src": "689:70:12"
									}
								]
							},
							"name": "abi_decode_address",
							"nativeSrc": "592:173:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "620:6:12",
									"nodeType": "YulTypedName",
									"src": "620:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "631:5:12",
									"nodeType": "YulTypedName",
									"src": "631:5:12",
									"type": ""
								}
							],
							"src": "592:173:12"
						},
						{
							"body": {
								"nativeSrc": "856:280:12",
								"nodeType": "YulBlock",
								"src": "856:280:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "902:16:12",
											"nodeType": "YulBlock",
											"src": "902:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "911:1:12",
																"nodeType": "YulLiteral",
																"src": "911:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "914:1:12",
																"nodeType": "YulLiteral",
																"src": "914:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "904:6:12",
															"nodeType": "YulIdentifier",
															"src": "904:6:12"
														},
														"nativeSrc": "904:12:12",
														"nodeType": "YulFunctionCall",
														"src": "904:12:12"
													},
													"nativeSrc": "904:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "904:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "877:7:12",
															"nodeType": "YulIdentifier",
															"src": "877:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "886:9:12",
															"nodeType": "YulIdentifier",
															"src": "886:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "873:3:12",
														"nodeType": "YulIdentifier",
														"src": "873:3:12"
													},
													"nativeSrc": "873:23:12",
													"nodeType": "YulFunctionCall",
													"src": "873:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "898:2:12",
													"nodeType": "YulLiteral",
													"src": "898:2:12",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "869:3:12",
												"nodeType": "YulIdentifier",
												"src": "869:3:12"
											},
											"nativeSrc": "869:32:12",
											"nodeType": "YulFunctionCall",
											"src": "869:32:12"
										},
										"nativeSrc": "866:52:12",
										"nodeType": "YulIf",
										"src": "866:52:12"
									},
									{
										"nativeSrc": "927:39:12",
										"nodeType": "YulAssignment",
										"src": "927:39:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "956:9:12",
													"nodeType": "YulIdentifier",
													"src": "956:9:12"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "937:18:12",
												"nodeType": "YulIdentifier",
												"src": "937:18:12"
											},
											"nativeSrc": "937:29:12",
											"nodeType": "YulFunctionCall",
											"src": "937:29:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "927:6:12",
												"nodeType": "YulIdentifier",
												"src": "927:6:12"
											}
										]
									},
									{
										"nativeSrc": "975:45:12",
										"nodeType": "YulVariableDeclaration",
										"src": "975:45:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "1005:9:12",
															"nodeType": "YulIdentifier",
															"src": "1005:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "1016:2:12",
															"nodeType": "YulLiteral",
															"src": "1016:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1001:3:12",
														"nodeType": "YulIdentifier",
														"src": "1001:3:12"
													},
													"nativeSrc": "1001:18:12",
													"nodeType": "YulFunctionCall",
													"src": "1001:18:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "988:12:12",
												"nodeType": "YulIdentifier",
												"src": "988:12:12"
											},
											"nativeSrc": "988:32:12",
											"nodeType": "YulFunctionCall",
											"src": "988:32:12"
										},
										"variables": [
											{
												"name": "value",
												"nativeSrc": "979:5:12",
												"nodeType": "YulTypedName",
												"src": "979:5:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "1090:16:12",
											"nodeType": "YulBlock",
											"src": "1090:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1099:1:12",
																"nodeType": "YulLiteral",
																"src": "1099:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "1102:1:12",
																"nodeType": "YulLiteral",
																"src": "1102:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "1092:6:12",
															"nodeType": "YulIdentifier",
															"src": "1092:6:12"
														},
														"nativeSrc": "1092:12:12",
														"nodeType": "YulFunctionCall",
														"src": "1092:12:12"
													},
													"nativeSrc": "1092:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "1092:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1042:5:12",
															"nodeType": "YulIdentifier",
															"src": "1042:5:12"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "1053:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1053:5:12"
																},
																{
																	"kind": "number",
																	"nativeSrc": "1060:26:12",
																	"nodeType": "YulLiteral",
																	"src": "1060:26:12",
																	"type": "",
																	"value": "0xffffffffffffffffffffffff"
																}
															],
															"functionName": {
																"name": "and",
																"nativeSrc": "1049:3:12",
																"nodeType": "YulIdentifier",
																"src": "1049:3:12"
															},
															"nativeSrc": "1049:38:12",
															"nodeType": "YulFunctionCall",
															"src": "1049:38:12"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "1039:2:12",
														"nodeType": "YulIdentifier",
														"src": "1039:2:12"
													},
													"nativeSrc": "1039:49:12",
													"nodeType": "YulFunctionCall",
													"src": "1039:49:12"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "1032:6:12",
												"nodeType": "YulIdentifier",
												"src": "1032:6:12"
											},
											"nativeSrc": "1032:57:12",
											"nodeType": "YulFunctionCall",
											"src": "1032:57:12"
										},
										"nativeSrc": "1029:77:12",
										"nodeType": "YulIf",
										"src": "1029:77:12"
									},
									{
										"nativeSrc": "1115:15:12",
										"nodeType": "YulAssignment",
										"src": "1115:15:12",
										"value": {
											"name": "value",
											"nativeSrc": "1125:5:12",
											"nodeType": "YulIdentifier",
											"src": "1125:5:12"
										},
										"variableNames": [
											{
												"name": "value1",
												"nativeSrc": "1115:6:12",
												"nodeType": "YulIdentifier",
												"src": "1115:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_uint96",
							"nativeSrc": "770:366:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "814:9:12",
									"nodeType": "YulTypedName",
									"src": "814:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "825:7:12",
									"nodeType": "YulTypedName",
									"src": "825:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "837:6:12",
									"nodeType": "YulTypedName",
									"src": "837:6:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "845:6:12",
									"nodeType": "YulTypedName",
									"src": "845:6:12",
									"type": ""
								}
							],
							"src": "770:366:12"
						},
						{
							"body": {
								"nativeSrc": "1231:502:12",
								"nodeType": "YulBlock",
								"src": "1231:502:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "1277:16:12",
											"nodeType": "YulBlock",
											"src": "1277:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1286:1:12",
																"nodeType": "YulLiteral",
																"src": "1286:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "1289:1:12",
																"nodeType": "YulLiteral",
																"src": "1289:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "1279:6:12",
															"nodeType": "YulIdentifier",
															"src": "1279:6:12"
														},
														"nativeSrc": "1279:12:12",
														"nodeType": "YulFunctionCall",
														"src": "1279:12:12"
													},
													"nativeSrc": "1279:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "1279:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "1252:7:12",
															"nodeType": "YulIdentifier",
															"src": "1252:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "1261:9:12",
															"nodeType": "YulIdentifier",
															"src": "1261:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "1248:3:12",
														"nodeType": "YulIdentifier",
														"src": "1248:3:12"
													},
													"nativeSrc": "1248:23:12",
													"nodeType": "YulFunctionCall",
													"src": "1248:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "1273:2:12",
													"nodeType": "YulLiteral",
													"src": "1273:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "1244:3:12",
												"nodeType": "YulIdentifier",
												"src": "1244:3:12"
											},
											"nativeSrc": "1244:32:12",
											"nodeType": "YulFunctionCall",
											"src": "1244:32:12"
										},
										"nativeSrc": "1241:52:12",
										"nodeType": "YulIf",
										"src": "1241:52:12"
									},
									{
										"nativeSrc": "1302:37:12",
										"nodeType": "YulVariableDeclaration",
										"src": "1302:37:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1329:9:12",
													"nodeType": "YulIdentifier",
													"src": "1329:9:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "1316:12:12",
												"nodeType": "YulIdentifier",
												"src": "1316:12:12"
											},
											"nativeSrc": "1316:23:12",
											"nodeType": "YulFunctionCall",
											"src": "1316:23:12"
										},
										"variables": [
											{
												"name": "offset",
												"nativeSrc": "1306:6:12",
												"nodeType": "YulTypedName",
												"src": "1306:6:12",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "1348:28:12",
										"nodeType": "YulVariableDeclaration",
										"src": "1348:28:12",
										"value": {
											"kind": "number",
											"nativeSrc": "1358:18:12",
											"nodeType": "YulLiteral",
											"src": "1358:18:12",
											"type": "",
											"value": "0xffffffffffffffff"
										},
										"variables": [
											{
												"name": "_1",
												"nativeSrc": "1352:2:12",
												"nodeType": "YulTypedName",
												"src": "1352:2:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "1403:16:12",
											"nodeType": "YulBlock",
											"src": "1403:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1412:1:12",
																"nodeType": "YulLiteral",
																"src": "1412:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "1415:1:12",
																"nodeType": "YulLiteral",
																"src": "1415:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "1405:6:12",
															"nodeType": "YulIdentifier",
															"src": "1405:6:12"
														},
														"nativeSrc": "1405:12:12",
														"nodeType": "YulFunctionCall",
														"src": "1405:12:12"
													},
													"nativeSrc": "1405:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "1405:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "1391:6:12",
													"nodeType": "YulIdentifier",
													"src": "1391:6:12"
												},
												{
													"name": "_1",
													"nativeSrc": "1399:2:12",
													"nodeType": "YulIdentifier",
													"src": "1399:2:12"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "1388:2:12",
												"nodeType": "YulIdentifier",
												"src": "1388:2:12"
											},
											"nativeSrc": "1388:14:12",
											"nodeType": "YulFunctionCall",
											"src": "1388:14:12"
										},
										"nativeSrc": "1385:34:12",
										"nodeType": "YulIf",
										"src": "1385:34:12"
									},
									{
										"nativeSrc": "1428:32:12",
										"nodeType": "YulVariableDeclaration",
										"src": "1428:32:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1442:9:12",
													"nodeType": "YulIdentifier",
													"src": "1442:9:12"
												},
												{
													"name": "offset",
													"nativeSrc": "1453:6:12",
													"nodeType": "YulIdentifier",
													"src": "1453:6:12"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1438:3:12",
												"nodeType": "YulIdentifier",
												"src": "1438:3:12"
											},
											"nativeSrc": "1438:22:12",
											"nodeType": "YulFunctionCall",
											"src": "1438:22:12"
										},
										"variables": [
											{
												"name": "_2",
												"nativeSrc": "1432:2:12",
												"nodeType": "YulTypedName",
												"src": "1432:2:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "1508:16:12",
											"nodeType": "YulBlock",
											"src": "1508:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1517:1:12",
																"nodeType": "YulLiteral",
																"src": "1517:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "1520:1:12",
																"nodeType": "YulLiteral",
																"src": "1520:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "1510:6:12",
															"nodeType": "YulIdentifier",
															"src": "1510:6:12"
														},
														"nativeSrc": "1510:12:12",
														"nodeType": "YulFunctionCall",
														"src": "1510:12:12"
													},
													"nativeSrc": "1510:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "1510:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "_2",
																	"nativeSrc": "1487:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1487:2:12"
																},
																{
																	"kind": "number",
																	"nativeSrc": "1491:4:12",
																	"nodeType": "YulLiteral",
																	"src": "1491:4:12",
																	"type": "",
																	"value": "0x1f"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1483:3:12",
																"nodeType": "YulIdentifier",
																"src": "1483:3:12"
															},
															"nativeSrc": "1483:13:12",
															"nodeType": "YulFunctionCall",
															"src": "1483:13:12"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "1498:7:12",
															"nodeType": "YulIdentifier",
															"src": "1498:7:12"
														}
													],
													"functionName": {
														"name": "slt",
														"nativeSrc": "1479:3:12",
														"nodeType": "YulIdentifier",
														"src": "1479:3:12"
													},
													"nativeSrc": "1479:27:12",
													"nodeType": "YulFunctionCall",
													"src": "1479:27:12"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "1472:6:12",
												"nodeType": "YulIdentifier",
												"src": "1472:6:12"
											},
											"nativeSrc": "1472:35:12",
											"nodeType": "YulFunctionCall",
											"src": "1472:35:12"
										},
										"nativeSrc": "1469:55:12",
										"nodeType": "YulIf",
										"src": "1469:55:12"
									},
									{
										"nativeSrc": "1533:30:12",
										"nodeType": "YulVariableDeclaration",
										"src": "1533:30:12",
										"value": {
											"arguments": [
												{
													"name": "_2",
													"nativeSrc": "1560:2:12",
													"nodeType": "YulIdentifier",
													"src": "1560:2:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "1547:12:12",
												"nodeType": "YulIdentifier",
												"src": "1547:12:12"
											},
											"nativeSrc": "1547:16:12",
											"nodeType": "YulFunctionCall",
											"src": "1547:16:12"
										},
										"variables": [
											{
												"name": "length",
												"nativeSrc": "1537:6:12",
												"nodeType": "YulTypedName",
												"src": "1537:6:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "1590:16:12",
											"nodeType": "YulBlock",
											"src": "1590:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1599:1:12",
																"nodeType": "YulLiteral",
																"src": "1599:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "1602:1:12",
																"nodeType": "YulLiteral",
																"src": "1602:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "1592:6:12",
															"nodeType": "YulIdentifier",
															"src": "1592:6:12"
														},
														"nativeSrc": "1592:12:12",
														"nodeType": "YulFunctionCall",
														"src": "1592:12:12"
													},
													"nativeSrc": "1592:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "1592:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "length",
													"nativeSrc": "1578:6:12",
													"nodeType": "YulIdentifier",
													"src": "1578:6:12"
												},
												{
													"name": "_1",
													"nativeSrc": "1586:2:12",
													"nodeType": "YulIdentifier",
													"src": "1586:2:12"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "1575:2:12",
												"nodeType": "YulIdentifier",
												"src": "1575:2:12"
											},
											"nativeSrc": "1575:14:12",
											"nodeType": "YulFunctionCall",
											"src": "1575:14:12"
										},
										"nativeSrc": "1572:34:12",
										"nodeType": "YulIf",
										"src": "1572:34:12"
									},
									{
										"body": {
											"nativeSrc": "1656:16:12",
											"nodeType": "YulBlock",
											"src": "1656:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1665:1:12",
																"nodeType": "YulLiteral",
																"src": "1665:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "1668:1:12",
																"nodeType": "YulLiteral",
																"src": "1668:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "1658:6:12",
															"nodeType": "YulIdentifier",
															"src": "1658:6:12"
														},
														"nativeSrc": "1658:12:12",
														"nodeType": "YulFunctionCall",
														"src": "1658:12:12"
													},
													"nativeSrc": "1658:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "1658:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "_2",
																	"nativeSrc": "1629:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1629:2:12"
																},
																{
																	"name": "length",
																	"nativeSrc": "1633:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1633:6:12"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1625:3:12",
																"nodeType": "YulIdentifier",
																"src": "1625:3:12"
															},
															"nativeSrc": "1625:15:12",
															"nodeType": "YulFunctionCall",
															"src": "1625:15:12"
														},
														{
															"kind": "number",
															"nativeSrc": "1642:2:12",
															"nodeType": "YulLiteral",
															"src": "1642:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1621:3:12",
														"nodeType": "YulIdentifier",
														"src": "1621:3:12"
													},
													"nativeSrc": "1621:24:12",
													"nodeType": "YulFunctionCall",
													"src": "1621:24:12"
												},
												{
													"name": "dataEnd",
													"nativeSrc": "1647:7:12",
													"nodeType": "YulIdentifier",
													"src": "1647:7:12"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "1618:2:12",
												"nodeType": "YulIdentifier",
												"src": "1618:2:12"
											},
											"nativeSrc": "1618:37:12",
											"nodeType": "YulFunctionCall",
											"src": "1618:37:12"
										},
										"nativeSrc": "1615:57:12",
										"nodeType": "YulIf",
										"src": "1615:57:12"
									},
									{
										"nativeSrc": "1681:21:12",
										"nodeType": "YulAssignment",
										"src": "1681:21:12",
										"value": {
											"arguments": [
												{
													"name": "_2",
													"nativeSrc": "1695:2:12",
													"nodeType": "YulIdentifier",
													"src": "1695:2:12"
												},
												{
													"kind": "number",
													"nativeSrc": "1699:2:12",
													"nodeType": "YulLiteral",
													"src": "1699:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1691:3:12",
												"nodeType": "YulIdentifier",
												"src": "1691:3:12"
											},
											"nativeSrc": "1691:11:12",
											"nodeType": "YulFunctionCall",
											"src": "1691:11:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "1681:6:12",
												"nodeType": "YulIdentifier",
												"src": "1681:6:12"
											}
										]
									},
									{
										"nativeSrc": "1711:16:12",
										"nodeType": "YulAssignment",
										"src": "1711:16:12",
										"value": {
											"name": "length",
											"nativeSrc": "1721:6:12",
											"nodeType": "YulIdentifier",
											"src": "1721:6:12"
										},
										"variableNames": [
											{
												"name": "value1",
												"nativeSrc": "1711:6:12",
												"nodeType": "YulIdentifier",
												"src": "1711:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_string_calldata_ptr",
							"nativeSrc": "1141:592:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1189:9:12",
									"nodeType": "YulTypedName",
									"src": "1189:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "1200:7:12",
									"nodeType": "YulTypedName",
									"src": "1200:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "1212:6:12",
									"nodeType": "YulTypedName",
									"src": "1212:6:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "1220:6:12",
									"nodeType": "YulTypedName",
									"src": "1220:6:12",
									"type": ""
								}
							],
							"src": "1141:592:12"
						},
						{
							"body": {
								"nativeSrc": "1799:239:12",
								"nodeType": "YulBlock",
								"src": "1799:239:12",
								"statements": [
									{
										"nativeSrc": "1809:26:12",
										"nodeType": "YulVariableDeclaration",
										"src": "1809:26:12",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1829:5:12",
													"nodeType": "YulIdentifier",
													"src": "1829:5:12"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "1823:5:12",
												"nodeType": "YulIdentifier",
												"src": "1823:5:12"
											},
											"nativeSrc": "1823:12:12",
											"nodeType": "YulFunctionCall",
											"src": "1823:12:12"
										},
										"variables": [
											{
												"name": "length",
												"nativeSrc": "1813:6:12",
												"nodeType": "YulTypedName",
												"src": "1813:6:12",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1851:3:12",
													"nodeType": "YulIdentifier",
													"src": "1851:3:12"
												},
												{
													"name": "length",
													"nativeSrc": "1856:6:12",
													"nodeType": "YulIdentifier",
													"src": "1856:6:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1844:6:12",
												"nodeType": "YulIdentifier",
												"src": "1844:6:12"
											},
											"nativeSrc": "1844:19:12",
											"nodeType": "YulFunctionCall",
											"src": "1844:19:12"
										},
										"nativeSrc": "1844:19:12",
										"nodeType": "YulExpressionStatement",
										"src": "1844:19:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "pos",
															"nativeSrc": "1882:3:12",
															"nodeType": "YulIdentifier",
															"src": "1882:3:12"
														},
														{
															"kind": "number",
															"nativeSrc": "1887:4:12",
															"nodeType": "YulLiteral",
															"src": "1887:4:12",
															"type": "",
															"value": "0x20"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1878:3:12",
														"nodeType": "YulIdentifier",
														"src": "1878:3:12"
													},
													"nativeSrc": "1878:14:12",
													"nodeType": "YulFunctionCall",
													"src": "1878:14:12"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1898:5:12",
															"nodeType": "YulIdentifier",
															"src": "1898:5:12"
														},
														{
															"kind": "number",
															"nativeSrc": "1905:4:12",
															"nodeType": "YulLiteral",
															"src": "1905:4:12",
															"type": "",
															"value": "0x20"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1894:3:12",
														"nodeType": "YulIdentifier",
														"src": "1894:3:12"
													},
													"nativeSrc": "1894:16:12",
													"nodeType": "YulFunctionCall",
													"src": "1894:16:12"
												},
												{
													"name": "length",
													"nativeSrc": "1912:6:12",
													"nodeType": "YulIdentifier",
													"src": "1912:6:12"
												}
											],
											"functionName": {
												"name": "mcopy",
												"nativeSrc": "1872:5:12",
												"nodeType": "YulIdentifier",
												"src": "1872:5:12"
											},
											"nativeSrc": "1872:47:12",
											"nodeType": "YulFunctionCall",
											"src": "1872:47:12"
										},
										"nativeSrc": "1872:47:12",
										"nodeType": "YulExpressionStatement",
										"src": "1872:47:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "pos",
																	"nativeSrc": "1943:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1943:3:12"
																},
																{
																	"name": "length",
																	"nativeSrc": "1948:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1948:6:12"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1939:3:12",
																"nodeType": "YulIdentifier",
																"src": "1939:3:12"
															},
															"nativeSrc": "1939:16:12",
															"nodeType": "YulFunctionCall",
															"src": "1939:16:12"
														},
														{
															"kind": "number",
															"nativeSrc": "1957:4:12",
															"nodeType": "YulLiteral",
															"src": "1957:4:12",
															"type": "",
															"value": "0x20"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1935:3:12",
														"nodeType": "YulIdentifier",
														"src": "1935:3:12"
													},
													"nativeSrc": "1935:27:12",
													"nodeType": "YulFunctionCall",
													"src": "1935:27:12"
												},
												{
													"kind": "number",
													"nativeSrc": "1964:1:12",
													"nodeType": "YulLiteral",
													"src": "1964:1:12",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1928:6:12",
												"nodeType": "YulIdentifier",
												"src": "1928:6:12"
											},
											"nativeSrc": "1928:38:12",
											"nodeType": "YulFunctionCall",
											"src": "1928:38:12"
										},
										"nativeSrc": "1928:38:12",
										"nodeType": "YulExpressionStatement",
										"src": "1928:38:12"
									},
									{
										"nativeSrc": "1975:57:12",
										"nodeType": "YulAssignment",
										"src": "1975:57:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "pos",
															"nativeSrc": "1990:3:12",
															"nodeType": "YulIdentifier",
															"src": "1990:3:12"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "length",
																			"nativeSrc": "2003:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:12"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "2011:2:12",
																			"nodeType": "YulLiteral",
																			"src": "2011:2:12",
																			"type": "",
																			"value": "31"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nativeSrc": "1999:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1999:3:12"
																	},
																	"nativeSrc": "1999:15:12",
																	"nodeType": "YulFunctionCall",
																	"src": "1999:15:12"
																},
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "2020:2:12",
																			"nodeType": "YulLiteral",
																			"src": "2020:2:12",
																			"type": "",
																			"value": "31"
																		}
																	],
																	"functionName": {
																		"name": "not",
																		"nativeSrc": "2016:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2016:3:12"
																	},
																	"nativeSrc": "2016:7:12",
																	"nodeType": "YulFunctionCall",
																	"src": "2016:7:12"
																}
															],
															"functionName": {
																"name": "and",
																"nativeSrc": "1995:3:12",
																"nodeType": "YulIdentifier",
																"src": "1995:3:12"
															},
															"nativeSrc": "1995:29:12",
															"nodeType": "YulFunctionCall",
															"src": "1995:29:12"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1986:3:12",
														"nodeType": "YulIdentifier",
														"src": "1986:3:12"
													},
													"nativeSrc": "1986:39:12",
													"nodeType": "YulFunctionCall",
													"src": "1986:39:12"
												},
												{
													"kind": "number",
													"nativeSrc": "2027:4:12",
													"nodeType": "YulLiteral",
													"src": "2027:4:12",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1982:3:12",
												"nodeType": "YulIdentifier",
												"src": "1982:3:12"
											},
											"nativeSrc": "1982:50:12",
											"nodeType": "YulFunctionCall",
											"src": "1982:50:12"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "1975:3:12",
												"nodeType": "YulIdentifier",
												"src": "1975:3:12"
											}
										]
									}
								]
							},
							"name": "abi_encode_string_memory_ptr",
							"nativeSrc": "1738:300:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1776:5:12",
									"nodeType": "YulTypedName",
									"src": "1776:5:12",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "1783:3:12",
									"nodeType": "YulTypedName",
									"src": "1783:3:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "1791:3:12",
									"nodeType": "YulTypedName",
									"src": "1791:3:12",
									"type": ""
								}
							],
							"src": "1738:300:12"
						},
						{
							"body": {
								"nativeSrc": "2164:110:12",
								"nodeType": "YulBlock",
								"src": "2164:110:12",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2181:9:12",
													"nodeType": "YulIdentifier",
													"src": "2181:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "2192:2:12",
													"nodeType": "YulLiteral",
													"src": "2192:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2174:6:12",
												"nodeType": "YulIdentifier",
												"src": "2174:6:12"
											},
											"nativeSrc": "2174:21:12",
											"nodeType": "YulFunctionCall",
											"src": "2174:21:12"
										},
										"nativeSrc": "2174:21:12",
										"nodeType": "YulExpressionStatement",
										"src": "2174:21:12"
									},
									{
										"nativeSrc": "2204:64:12",
										"nodeType": "YulAssignment",
										"src": "2204:64:12",
										"value": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "2241:6:12",
													"nodeType": "YulIdentifier",
													"src": "2241:6:12"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "2253:9:12",
															"nodeType": "YulIdentifier",
															"src": "2253:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "2264:2:12",
															"nodeType": "YulLiteral",
															"src": "2264:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "2249:3:12",
														"nodeType": "YulIdentifier",
														"src": "2249:3:12"
													},
													"nativeSrc": "2249:18:12",
													"nodeType": "YulFunctionCall",
													"src": "2249:18:12"
												}
											],
											"functionName": {
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "2212:28:12",
												"nodeType": "YulIdentifier",
												"src": "2212:28:12"
											},
											"nativeSrc": "2212:56:12",
											"nodeType": "YulFunctionCall",
											"src": "2212:56:12"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "2204:4:12",
												"nodeType": "YulIdentifier",
												"src": "2204:4:12"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "2043:231:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2133:9:12",
									"nodeType": "YulTypedName",
									"src": "2133:9:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "2144:6:12",
									"nodeType": "YulTypedName",
									"src": "2144:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "2155:4:12",
									"nodeType": "YulTypedName",
									"src": "2155:4:12",
									"type": ""
								}
							],
							"src": "2043:231:12"
						},
						{
							"body": {
								"nativeSrc": "2349:110:12",
								"nodeType": "YulBlock",
								"src": "2349:110:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "2395:16:12",
											"nodeType": "YulBlock",
											"src": "2395:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "2404:1:12",
																"nodeType": "YulLiteral",
																"src": "2404:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "2407:1:12",
																"nodeType": "YulLiteral",
																"src": "2407:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "2397:6:12",
															"nodeType": "YulIdentifier",
															"src": "2397:6:12"
														},
														"nativeSrc": "2397:12:12",
														"nodeType": "YulFunctionCall",
														"src": "2397:12:12"
													},
													"nativeSrc": "2397:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "2397:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "2370:7:12",
															"nodeType": "YulIdentifier",
															"src": "2370:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "2379:9:12",
															"nodeType": "YulIdentifier",
															"src": "2379:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "2366:3:12",
														"nodeType": "YulIdentifier",
														"src": "2366:3:12"
													},
													"nativeSrc": "2366:23:12",
													"nodeType": "YulFunctionCall",
													"src": "2366:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "2391:2:12",
													"nodeType": "YulLiteral",
													"src": "2391:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "2362:3:12",
												"nodeType": "YulIdentifier",
												"src": "2362:3:12"
											},
											"nativeSrc": "2362:32:12",
											"nodeType": "YulFunctionCall",
											"src": "2362:32:12"
										},
										"nativeSrc": "2359:52:12",
										"nodeType": "YulIf",
										"src": "2359:52:12"
									},
									{
										"nativeSrc": "2420:33:12",
										"nodeType": "YulAssignment",
										"src": "2420:33:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2443:9:12",
													"nodeType": "YulIdentifier",
													"src": "2443:9:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "2430:12:12",
												"nodeType": "YulIdentifier",
												"src": "2430:12:12"
											},
											"nativeSrc": "2430:23:12",
											"nodeType": "YulFunctionCall",
											"src": "2430:23:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "2420:6:12",
												"nodeType": "YulIdentifier",
												"src": "2420:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256",
							"nativeSrc": "2279:180:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2315:9:12",
									"nodeType": "YulTypedName",
									"src": "2315:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "2326:7:12",
									"nodeType": "YulTypedName",
									"src": "2326:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "2338:6:12",
									"nodeType": "YulTypedName",
									"src": "2338:6:12",
									"type": ""
								}
							],
							"src": "2279:180:12"
						},
						{
							"body": {
								"nativeSrc": "2565:102:12",
								"nodeType": "YulBlock",
								"src": "2565:102:12",
								"statements": [
									{
										"nativeSrc": "2575:26:12",
										"nodeType": "YulAssignment",
										"src": "2575:26:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2587:9:12",
													"nodeType": "YulIdentifier",
													"src": "2587:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "2598:2:12",
													"nodeType": "YulLiteral",
													"src": "2598:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2583:3:12",
												"nodeType": "YulIdentifier",
												"src": "2583:3:12"
											},
											"nativeSrc": "2583:18:12",
											"nodeType": "YulFunctionCall",
											"src": "2583:18:12"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "2575:4:12",
												"nodeType": "YulIdentifier",
												"src": "2575:4:12"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2617:9:12",
													"nodeType": "YulIdentifier",
													"src": "2617:9:12"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nativeSrc": "2632:6:12",
															"nodeType": "YulIdentifier",
															"src": "2632:6:12"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "2648:3:12",
																			"nodeType": "YulLiteral",
																			"src": "2648:3:12",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "2653:1:12",
																			"nodeType": "YulLiteral",
																			"src": "2653:1:12",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nativeSrc": "2644:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2644:3:12"
																	},
																	"nativeSrc": "2644:11:12",
																	"nodeType": "YulFunctionCall",
																	"src": "2644:11:12"
																},
																{
																	"kind": "number",
																	"nativeSrc": "2657:1:12",
																	"nodeType": "YulLiteral",
																	"src": "2657:1:12",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nativeSrc": "2640:3:12",
																"nodeType": "YulIdentifier",
																"src": "2640:3:12"
															},
															"nativeSrc": "2640:19:12",
															"nodeType": "YulFunctionCall",
															"src": "2640:19:12"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "2628:3:12",
														"nodeType": "YulIdentifier",
														"src": "2628:3:12"
													},
													"nativeSrc": "2628:32:12",
													"nodeType": "YulFunctionCall",
													"src": "2628:32:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2610:6:12",
												"nodeType": "YulIdentifier",
												"src": "2610:6:12"
											},
											"nativeSrc": "2610:51:12",
											"nodeType": "YulFunctionCall",
											"src": "2610:51:12"
										},
										"nativeSrc": "2610:51:12",
										"nodeType": "YulExpressionStatement",
										"src": "2610:51:12"
									}
								]
							},
							"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
							"nativeSrc": "2464:203:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2534:9:12",
									"nodeType": "YulTypedName",
									"src": "2534:9:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "2545:6:12",
									"nodeType": "YulTypedName",
									"src": "2545:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "2556:4:12",
									"nodeType": "YulTypedName",
									"src": "2556:4:12",
									"type": ""
								}
							],
							"src": "2464:203:12"
						},
						{
							"body": {
								"nativeSrc": "2759:167:12",
								"nodeType": "YulBlock",
								"src": "2759:167:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "2805:16:12",
											"nodeType": "YulBlock",
											"src": "2805:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "2814:1:12",
																"nodeType": "YulLiteral",
																"src": "2814:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "2817:1:12",
																"nodeType": "YulLiteral",
																"src": "2817:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "2807:6:12",
															"nodeType": "YulIdentifier",
															"src": "2807:6:12"
														},
														"nativeSrc": "2807:12:12",
														"nodeType": "YulFunctionCall",
														"src": "2807:12:12"
													},
													"nativeSrc": "2807:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "2807:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "2780:7:12",
															"nodeType": "YulIdentifier",
															"src": "2780:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "2789:9:12",
															"nodeType": "YulIdentifier",
															"src": "2789:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "2776:3:12",
														"nodeType": "YulIdentifier",
														"src": "2776:3:12"
													},
													"nativeSrc": "2776:23:12",
													"nodeType": "YulFunctionCall",
													"src": "2776:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "2801:2:12",
													"nodeType": "YulLiteral",
													"src": "2801:2:12",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "2772:3:12",
												"nodeType": "YulIdentifier",
												"src": "2772:3:12"
											},
											"nativeSrc": "2772:32:12",
											"nodeType": "YulFunctionCall",
											"src": "2772:32:12"
										},
										"nativeSrc": "2769:52:12",
										"nodeType": "YulIf",
										"src": "2769:52:12"
									},
									{
										"nativeSrc": "2830:39:12",
										"nodeType": "YulAssignment",
										"src": "2830:39:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2859:9:12",
													"nodeType": "YulIdentifier",
													"src": "2859:9:12"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "2840:18:12",
												"nodeType": "YulIdentifier",
												"src": "2840:18:12"
											},
											"nativeSrc": "2840:29:12",
											"nodeType": "YulFunctionCall",
											"src": "2840:29:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "2830:6:12",
												"nodeType": "YulIdentifier",
												"src": "2830:6:12"
											}
										]
									},
									{
										"nativeSrc": "2878:42:12",
										"nodeType": "YulAssignment",
										"src": "2878:42:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "2905:9:12",
															"nodeType": "YulIdentifier",
															"src": "2905:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "2916:2:12",
															"nodeType": "YulLiteral",
															"src": "2916:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "2901:3:12",
														"nodeType": "YulIdentifier",
														"src": "2901:3:12"
													},
													"nativeSrc": "2901:18:12",
													"nodeType": "YulFunctionCall",
													"src": "2901:18:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "2888:12:12",
												"nodeType": "YulIdentifier",
												"src": "2888:12:12"
											},
											"nativeSrc": "2888:32:12",
											"nodeType": "YulFunctionCall",
											"src": "2888:32:12"
										},
										"variableNames": [
											{
												"name": "value1",
												"nativeSrc": "2878:6:12",
												"nodeType": "YulIdentifier",
												"src": "2878:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_uint256",
							"nativeSrc": "2672:254:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2717:9:12",
									"nodeType": "YulTypedName",
									"src": "2717:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "2728:7:12",
									"nodeType": "YulTypedName",
									"src": "2728:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "2740:6:12",
									"nodeType": "YulTypedName",
									"src": "2740:6:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "2748:6:12",
									"nodeType": "YulTypedName",
									"src": "2748:6:12",
									"type": ""
								}
							],
							"src": "2672:254:12"
						},
						{
							"body": {
								"nativeSrc": "3032:76:12",
								"nodeType": "YulBlock",
								"src": "3032:76:12",
								"statements": [
									{
										"nativeSrc": "3042:26:12",
										"nodeType": "YulAssignment",
										"src": "3042:26:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3054:9:12",
													"nodeType": "YulIdentifier",
													"src": "3054:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "3065:2:12",
													"nodeType": "YulLiteral",
													"src": "3065:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3050:3:12",
												"nodeType": "YulIdentifier",
												"src": "3050:3:12"
											},
											"nativeSrc": "3050:18:12",
											"nodeType": "YulFunctionCall",
											"src": "3050:18:12"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3042:4:12",
												"nodeType": "YulIdentifier",
												"src": "3042:4:12"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3084:9:12",
													"nodeType": "YulIdentifier",
													"src": "3084:9:12"
												},
												{
													"name": "value0",
													"nativeSrc": "3095:6:12",
													"nodeType": "YulIdentifier",
													"src": "3095:6:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3077:6:12",
												"nodeType": "YulIdentifier",
												"src": "3077:6:12"
											},
											"nativeSrc": "3077:25:12",
											"nodeType": "YulFunctionCall",
											"src": "3077:25:12"
										},
										"nativeSrc": "3077:25:12",
										"nodeType": "YulExpressionStatement",
										"src": "3077:25:12"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "2931:177:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3001:9:12",
									"nodeType": "YulTypedName",
									"src": "3001:9:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "3012:6:12",
									"nodeType": "YulTypedName",
									"src": "3012:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "3023:4:12",
									"nodeType": "YulTypedName",
									"src": "3023:4:12",
									"type": ""
								}
							],
							"src": "2931:177:12"
						},
						{
							"body": {
								"nativeSrc": "3217:224:12",
								"nodeType": "YulBlock",
								"src": "3217:224:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "3263:16:12",
											"nodeType": "YulBlock",
											"src": "3263:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "3272:1:12",
																"nodeType": "YulLiteral",
																"src": "3272:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "3275:1:12",
																"nodeType": "YulLiteral",
																"src": "3275:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "3265:6:12",
															"nodeType": "YulIdentifier",
															"src": "3265:6:12"
														},
														"nativeSrc": "3265:12:12",
														"nodeType": "YulFunctionCall",
														"src": "3265:12:12"
													},
													"nativeSrc": "3265:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "3265:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "3238:7:12",
															"nodeType": "YulIdentifier",
															"src": "3238:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "3247:9:12",
															"nodeType": "YulIdentifier",
															"src": "3247:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "3234:3:12",
														"nodeType": "YulIdentifier",
														"src": "3234:3:12"
													},
													"nativeSrc": "3234:23:12",
													"nodeType": "YulFunctionCall",
													"src": "3234:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "3259:2:12",
													"nodeType": "YulLiteral",
													"src": "3259:2:12",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "3230:3:12",
												"nodeType": "YulIdentifier",
												"src": "3230:3:12"
											},
											"nativeSrc": "3230:32:12",
											"nodeType": "YulFunctionCall",
											"src": "3230:32:12"
										},
										"nativeSrc": "3227:52:12",
										"nodeType": "YulIf",
										"src": "3227:52:12"
									},
									{
										"nativeSrc": "3288:39:12",
										"nodeType": "YulAssignment",
										"src": "3288:39:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3317:9:12",
													"nodeType": "YulIdentifier",
													"src": "3317:9:12"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "3298:18:12",
												"nodeType": "YulIdentifier",
												"src": "3298:18:12"
											},
											"nativeSrc": "3298:29:12",
											"nodeType": "YulFunctionCall",
											"src": "3298:29:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "3288:6:12",
												"nodeType": "YulIdentifier",
												"src": "3288:6:12"
											}
										]
									},
									{
										"nativeSrc": "3336:48:12",
										"nodeType": "YulAssignment",
										"src": "3336:48:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3369:9:12",
															"nodeType": "YulIdentifier",
															"src": "3369:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "3380:2:12",
															"nodeType": "YulLiteral",
															"src": "3380:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3365:3:12",
														"nodeType": "YulIdentifier",
														"src": "3365:3:12"
													},
													"nativeSrc": "3365:18:12",
													"nodeType": "YulFunctionCall",
													"src": "3365:18:12"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "3346:18:12",
												"nodeType": "YulIdentifier",
												"src": "3346:18:12"
											},
											"nativeSrc": "3346:38:12",
											"nodeType": "YulFunctionCall",
											"src": "3346:38:12"
										},
										"variableNames": [
											{
												"name": "value1",
												"nativeSrc": "3336:6:12",
												"nodeType": "YulIdentifier",
												"src": "3336:6:12"
											}
										]
									},
									{
										"nativeSrc": "3393:42:12",
										"nodeType": "YulAssignment",
										"src": "3393:42:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3420:9:12",
															"nodeType": "YulIdentifier",
															"src": "3420:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "3431:2:12",
															"nodeType": "YulLiteral",
															"src": "3431:2:12",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3416:3:12",
														"nodeType": "YulIdentifier",
														"src": "3416:3:12"
													},
													"nativeSrc": "3416:18:12",
													"nodeType": "YulFunctionCall",
													"src": "3416:18:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "3403:12:12",
												"nodeType": "YulIdentifier",
												"src": "3403:12:12"
											},
											"nativeSrc": "3403:32:12",
											"nodeType": "YulFunctionCall",
											"src": "3403:32:12"
										},
										"variableNames": [
											{
												"name": "value2",
												"nativeSrc": "3393:6:12",
												"nodeType": "YulIdentifier",
												"src": "3393:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_addresst_uint256",
							"nativeSrc": "3113:328:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3167:9:12",
									"nodeType": "YulTypedName",
									"src": "3167:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "3178:7:12",
									"nodeType": "YulTypedName",
									"src": "3178:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "3190:6:12",
									"nodeType": "YulTypedName",
									"src": "3190:6:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "3198:6:12",
									"nodeType": "YulTypedName",
									"src": "3198:6:12",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "3206:6:12",
									"nodeType": "YulTypedName",
									"src": "3206:6:12",
									"type": ""
								}
							],
							"src": "3113:328:12"
						},
						{
							"body": {
								"nativeSrc": "3533:161:12",
								"nodeType": "YulBlock",
								"src": "3533:161:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "3579:16:12",
											"nodeType": "YulBlock",
											"src": "3579:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "3588:1:12",
																"nodeType": "YulLiteral",
																"src": "3588:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "3591:1:12",
																"nodeType": "YulLiteral",
																"src": "3591:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "3581:6:12",
															"nodeType": "YulIdentifier",
															"src": "3581:6:12"
														},
														"nativeSrc": "3581:12:12",
														"nodeType": "YulFunctionCall",
														"src": "3581:12:12"
													},
													"nativeSrc": "3581:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "3581:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "3554:7:12",
															"nodeType": "YulIdentifier",
															"src": "3554:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "3563:9:12",
															"nodeType": "YulIdentifier",
															"src": "3563:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "3550:3:12",
														"nodeType": "YulIdentifier",
														"src": "3550:3:12"
													},
													"nativeSrc": "3550:23:12",
													"nodeType": "YulFunctionCall",
													"src": "3550:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "3575:2:12",
													"nodeType": "YulLiteral",
													"src": "3575:2:12",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "3546:3:12",
												"nodeType": "YulIdentifier",
												"src": "3546:3:12"
											},
											"nativeSrc": "3546:32:12",
											"nodeType": "YulFunctionCall",
											"src": "3546:32:12"
										},
										"nativeSrc": "3543:52:12",
										"nodeType": "YulIf",
										"src": "3543:52:12"
									},
									{
										"nativeSrc": "3604:33:12",
										"nodeType": "YulAssignment",
										"src": "3604:33:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3627:9:12",
													"nodeType": "YulIdentifier",
													"src": "3627:9:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "3614:12:12",
												"nodeType": "YulIdentifier",
												"src": "3614:12:12"
											},
											"nativeSrc": "3614:23:12",
											"nodeType": "YulFunctionCall",
											"src": "3614:23:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "3604:6:12",
												"nodeType": "YulIdentifier",
												"src": "3604:6:12"
											}
										]
									},
									{
										"nativeSrc": "3646:42:12",
										"nodeType": "YulAssignment",
										"src": "3646:42:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3673:9:12",
															"nodeType": "YulIdentifier",
															"src": "3673:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "3684:2:12",
															"nodeType": "YulLiteral",
															"src": "3684:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3669:3:12",
														"nodeType": "YulIdentifier",
														"src": "3669:3:12"
													},
													"nativeSrc": "3669:18:12",
													"nodeType": "YulFunctionCall",
													"src": "3669:18:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "3656:12:12",
												"nodeType": "YulIdentifier",
												"src": "3656:12:12"
											},
											"nativeSrc": "3656:32:12",
											"nodeType": "YulFunctionCall",
											"src": "3656:32:12"
										},
										"variableNames": [
											{
												"name": "value1",
												"nativeSrc": "3646:6:12",
												"nodeType": "YulIdentifier",
												"src": "3646:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256t_bytes32",
							"nativeSrc": "3446:248:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3491:9:12",
									"nodeType": "YulTypedName",
									"src": "3491:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "3502:7:12",
									"nodeType": "YulTypedName",
									"src": "3502:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "3514:6:12",
									"nodeType": "YulTypedName",
									"src": "3514:6:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "3522:6:12",
									"nodeType": "YulTypedName",
									"src": "3522:6:12",
									"type": ""
								}
							],
							"src": "3446:248:12"
						},
						{
							"body": {
								"nativeSrc": "3786:161:12",
								"nodeType": "YulBlock",
								"src": "3786:161:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "3832:16:12",
											"nodeType": "YulBlock",
											"src": "3832:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "3841:1:12",
																"nodeType": "YulLiteral",
																"src": "3841:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "3844:1:12",
																"nodeType": "YulLiteral",
																"src": "3844:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "3834:6:12",
															"nodeType": "YulIdentifier",
															"src": "3834:6:12"
														},
														"nativeSrc": "3834:12:12",
														"nodeType": "YulFunctionCall",
														"src": "3834:12:12"
													},
													"nativeSrc": "3834:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "3834:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "3807:7:12",
															"nodeType": "YulIdentifier",
															"src": "3807:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "3816:9:12",
															"nodeType": "YulIdentifier",
															"src": "3816:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "3803:3:12",
														"nodeType": "YulIdentifier",
														"src": "3803:3:12"
													},
													"nativeSrc": "3803:23:12",
													"nodeType": "YulFunctionCall",
													"src": "3803:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "3828:2:12",
													"nodeType": "YulLiteral",
													"src": "3828:2:12",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "3799:3:12",
												"nodeType": "YulIdentifier",
												"src": "3799:3:12"
											},
											"nativeSrc": "3799:32:12",
											"nodeType": "YulFunctionCall",
											"src": "3799:32:12"
										},
										"nativeSrc": "3796:52:12",
										"nodeType": "YulIf",
										"src": "3796:52:12"
									},
									{
										"nativeSrc": "3857:33:12",
										"nodeType": "YulAssignment",
										"src": "3857:33:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3880:9:12",
													"nodeType": "YulIdentifier",
													"src": "3880:9:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "3867:12:12",
												"nodeType": "YulIdentifier",
												"src": "3867:12:12"
											},
											"nativeSrc": "3867:23:12",
											"nodeType": "YulFunctionCall",
											"src": "3867:23:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "3857:6:12",
												"nodeType": "YulIdentifier",
												"src": "3857:6:12"
											}
										]
									},
									{
										"nativeSrc": "3899:42:12",
										"nodeType": "YulAssignment",
										"src": "3899:42:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3926:9:12",
															"nodeType": "YulIdentifier",
															"src": "3926:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "3937:2:12",
															"nodeType": "YulLiteral",
															"src": "3937:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3922:3:12",
														"nodeType": "YulIdentifier",
														"src": "3922:3:12"
													},
													"nativeSrc": "3922:18:12",
													"nodeType": "YulFunctionCall",
													"src": "3922:18:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "3909:12:12",
												"nodeType": "YulIdentifier",
												"src": "3909:12:12"
											},
											"nativeSrc": "3909:32:12",
											"nodeType": "YulFunctionCall",
											"src": "3909:32:12"
										},
										"variableNames": [
											{
												"name": "value1",
												"nativeSrc": "3899:6:12",
												"nodeType": "YulIdentifier",
												"src": "3899:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256t_uint256",
							"nativeSrc": "3699:248:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3744:9:12",
									"nodeType": "YulTypedName",
									"src": "3744:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "3755:7:12",
									"nodeType": "YulTypedName",
									"src": "3755:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "3767:6:12",
									"nodeType": "YulTypedName",
									"src": "3767:6:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "3775:6:12",
									"nodeType": "YulTypedName",
									"src": "3775:6:12",
									"type": ""
								}
							],
							"src": "3699:248:12"
						},
						{
							"body": {
								"nativeSrc": "4081:145:12",
								"nodeType": "YulBlock",
								"src": "4081:145:12",
								"statements": [
									{
										"nativeSrc": "4091:26:12",
										"nodeType": "YulAssignment",
										"src": "4091:26:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "4103:9:12",
													"nodeType": "YulIdentifier",
													"src": "4103:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "4114:2:12",
													"nodeType": "YulLiteral",
													"src": "4114:2:12",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "4099:3:12",
												"nodeType": "YulIdentifier",
												"src": "4099:3:12"
											},
											"nativeSrc": "4099:18:12",
											"nodeType": "YulFunctionCall",
											"src": "4099:18:12"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "4091:4:12",
												"nodeType": "YulIdentifier",
												"src": "4091:4:12"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "4133:9:12",
													"nodeType": "YulIdentifier",
													"src": "4133:9:12"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nativeSrc": "4148:6:12",
															"nodeType": "YulIdentifier",
															"src": "4148:6:12"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "4164:3:12",
																			"nodeType": "YulLiteral",
																			"src": "4164:3:12",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "4169:1:12",
																			"nodeType": "YulLiteral",
																			"src": "4169:1:12",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nativeSrc": "4160:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4160:3:12"
																	},
																	"nativeSrc": "4160:11:12",
																	"nodeType": "YulFunctionCall",
																	"src": "4160:11:12"
																},
																{
																	"kind": "number",
																	"nativeSrc": "4173:1:12",
																	"nodeType": "YulLiteral",
																	"src": "4173:1:12",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nativeSrc": "4156:3:12",
																"nodeType": "YulIdentifier",
																"src": "4156:3:12"
															},
															"nativeSrc": "4156:19:12",
															"nodeType": "YulFunctionCall",
															"src": "4156:19:12"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "4144:3:12",
														"nodeType": "YulIdentifier",
														"src": "4144:3:12"
													},
													"nativeSrc": "4144:32:12",
													"nodeType": "YulFunctionCall",
													"src": "4144:32:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "4126:6:12",
												"nodeType": "YulIdentifier",
												"src": "4126:6:12"
											},
											"nativeSrc": "4126:51:12",
											"nodeType": "YulFunctionCall",
											"src": "4126:51:12"
										},
										"nativeSrc": "4126:51:12",
										"nodeType": "YulExpressionStatement",
										"src": "4126:51:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "4197:9:12",
															"nodeType": "YulIdentifier",
															"src": "4197:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "4208:2:12",
															"nodeType": "YulLiteral",
															"src": "4208:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "4193:3:12",
														"nodeType": "YulIdentifier",
														"src": "4193:3:12"
													},
													"nativeSrc": "4193:18:12",
													"nodeType": "YulFunctionCall",
													"src": "4193:18:12"
												},
												{
													"name": "value1",
													"nativeSrc": "4213:6:12",
													"nodeType": "YulIdentifier",
													"src": "4213:6:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "4186:6:12",
												"nodeType": "YulIdentifier",
												"src": "4186:6:12"
											},
											"nativeSrc": "4186:34:12",
											"nodeType": "YulFunctionCall",
											"src": "4186:34:12"
										},
										"nativeSrc": "4186:34:12",
										"nodeType": "YulExpressionStatement",
										"src": "4186:34:12"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
							"nativeSrc": "3952:274:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "4042:9:12",
									"nodeType": "YulTypedName",
									"src": "4042:9:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "4053:6:12",
									"nodeType": "YulTypedName",
									"src": "4053:6:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "4061:6:12",
									"nodeType": "YulTypedName",
									"src": "4061:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "4072:4:12",
									"nodeType": "YulTypedName",
									"src": "4072:4:12",
									"type": ""
								}
							],
							"src": "3952:274:12"
						},
						{
							"body": {
								"nativeSrc": "4263:95:12",
								"nodeType": "YulBlock",
								"src": "4263:95:12",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "4280:1:12",
													"nodeType": "YulLiteral",
													"src": "4280:1:12",
													"type": "",
													"value": "0"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "4287:3:12",
															"nodeType": "YulLiteral",
															"src": "4287:3:12",
															"type": "",
															"value": "224"
														},
														{
															"kind": "number",
															"nativeSrc": "4292:10:12",
															"nodeType": "YulLiteral",
															"src": "4292:10:12",
															"type": "",
															"value": "0x4e487b71"
														}
													],
													"functionName": {
														"name": "shl",
														"nativeSrc": "4283:3:12",
														"nodeType": "YulIdentifier",
														"src": "4283:3:12"
													},
													"nativeSrc": "4283:20:12",
													"nodeType": "YulFunctionCall",
													"src": "4283:20:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "4273:6:12",
												"nodeType": "YulIdentifier",
												"src": "4273:6:12"
											},
											"nativeSrc": "4273:31:12",
											"nodeType": "YulFunctionCall",
											"src": "4273:31:12"
										},
										"nativeSrc": "4273:31:12",
										"nodeType": "YulExpressionStatement",
										"src": "4273:31:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "4320:1:12",
													"nodeType": "YulLiteral",
													"src": "4320:1:12",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "4323:4:12",
													"nodeType": "YulLiteral",
													"src": "4323:4:12",
													"type": "",
													"value": "0x21"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "4313:6:12",
												"nodeType": "YulIdentifier",
												"src": "4313:6:12"
											},
											"nativeSrc": "4313:15:12",
											"nodeType": "YulFunctionCall",
											"src": "4313:15:12"
										},
										"nativeSrc": "4313:15:12",
										"nodeType": "YulExpressionStatement",
										"src": "4313:15:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "4344:1:12",
													"nodeType": "YulLiteral",
													"src": "4344:1:12",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "4347:4:12",
													"nodeType": "YulLiteral",
													"src": "4347:4:12",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "4337:6:12",
												"nodeType": "YulIdentifier",
												"src": "4337:6:12"
											},
											"nativeSrc": "4337:15:12",
											"nodeType": "YulFunctionCall",
											"src": "4337:15:12"
										},
										"nativeSrc": "4337:15:12",
										"nodeType": "YulExpressionStatement",
										"src": "4337:15:12"
									}
								]
							},
							"name": "panic_error_0x21",
							"nativeSrc": "4231:127:12",
							"nodeType": "YulFunctionDefinition",
							"src": "4231:127:12"
						},
						{
							"body": {
								"nativeSrc": "4477:229:12",
								"nodeType": "YulBlock",
								"src": "4477:229:12",
								"statements": [
									{
										"nativeSrc": "4487:26:12",
										"nodeType": "YulAssignment",
										"src": "4487:26:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "4499:9:12",
													"nodeType": "YulIdentifier",
													"src": "4499:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "4510:2:12",
													"nodeType": "YulLiteral",
													"src": "4510:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "4495:3:12",
												"nodeType": "YulIdentifier",
												"src": "4495:3:12"
											},
											"nativeSrc": "4495:18:12",
											"nodeType": "YulFunctionCall",
											"src": "4495:18:12"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "4487:4:12",
												"nodeType": "YulIdentifier",
												"src": "4487:4:12"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "4555:111:12",
											"nodeType": "YulBlock",
											"src": "4555:111:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "4576:1:12",
																"nodeType": "YulLiteral",
																"src": "4576:1:12",
																"type": "",
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4583:3:12",
																		"nodeType": "YulLiteral",
																		"src": "4583:3:12",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4588:10:12",
																		"nodeType": "YulLiteral",
																		"src": "4588:10:12",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4579:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4579:3:12"
																},
																"nativeSrc": "4579:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4579:20:12"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "4569:6:12",
															"nodeType": "YulIdentifier",
															"src": "4569:6:12"
														},
														"nativeSrc": "4569:31:12",
														"nodeType": "YulFunctionCall",
														"src": "4569:31:12"
													},
													"nativeSrc": "4569:31:12",
													"nodeType": "YulExpressionStatement",
													"src": "4569:31:12"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "4620:1:12",
																"nodeType": "YulLiteral",
																"src": "4620:1:12",
																"type": "",
																"value": "4"
															},
															{
																"kind": "number",
																"nativeSrc": "4623:4:12",
																"nodeType": "YulLiteral",
																"src": "4623:4:12",
																"type": "",
																"value": "0x21"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "4613:6:12",
															"nodeType": "YulIdentifier",
															"src": "4613:6:12"
														},
														"nativeSrc": "4613:15:12",
														"nodeType": "YulFunctionCall",
														"src": "4613:15:12"
													},
													"nativeSrc": "4613:15:12",
													"nodeType": "YulExpressionStatement",
													"src": "4613:15:12"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "4648:1:12",
																"nodeType": "YulLiteral",
																"src": "4648:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "4651:4:12",
																"nodeType": "YulLiteral",
																"src": "4651:4:12",
																"type": "",
																"value": "0x24"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "4641:6:12",
															"nodeType": "YulIdentifier",
															"src": "4641:6:12"
														},
														"nativeSrc": "4641:15:12",
														"nodeType": "YulFunctionCall",
														"src": "4641:15:12"
													},
													"nativeSrc": "4641:15:12",
													"nodeType": "YulExpressionStatement",
													"src": "4641:15:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value0",
															"nativeSrc": "4535:6:12",
															"nodeType": "YulIdentifier",
															"src": "4535:6:12"
														},
														{
															"kind": "number",
															"nativeSrc": "4543:1:12",
															"nodeType": "YulLiteral",
															"src": "4543:1:12",
															"type": "",
															"value": "4"
														}
													],
													"functionName": {
														"name": "lt",
														"nativeSrc": "4532:2:12",
														"nodeType": "YulIdentifier",
														"src": "4532:2:12"
													},
													"nativeSrc": "4532:13:12",
													"nodeType": "YulFunctionCall",
													"src": "4532:13:12"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "4525:6:12",
												"nodeType": "YulIdentifier",
												"src": "4525:6:12"
											},
											"nativeSrc": "4525:21:12",
											"nodeType": "YulFunctionCall",
											"src": "4525:21:12"
										},
										"nativeSrc": "4522:144:12",
										"nodeType": "YulIf",
										"src": "4522:144:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "4682:9:12",
													"nodeType": "YulIdentifier",
													"src": "4682:9:12"
												},
												{
													"name": "value0",
													"nativeSrc": "4693:6:12",
													"nodeType": "YulIdentifier",
													"src": "4693:6:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "4675:6:12",
												"nodeType": "YulIdentifier",
												"src": "4675:6:12"
											},
											"nativeSrc": "4675:25:12",
											"nodeType": "YulFunctionCall",
											"src": "4675:25:12"
										},
										"nativeSrc": "4675:25:12",
										"nodeType": "YulExpressionStatement",
										"src": "4675:25:12"
									}
								]
							},
							"name": "abi_encode_tuple_t_enum$_DropStatus_$2989__to_t_uint8__fromStack_reversed",
							"nativeSrc": "4363:343:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "4446:9:12",
									"nodeType": "YulTypedName",
									"src": "4446:9:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "4457:6:12",
									"nodeType": "YulTypedName",
									"src": "4457:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "4468:4:12",
									"nodeType": "YulTypedName",
									"src": "4468:4:12",
									"type": ""
								}
							],
							"src": "4363:343:12"
						},
						{
							"body": {
								"nativeSrc": "4796:186:12",
								"nodeType": "YulBlock",
								"src": "4796:186:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "4842:16:12",
											"nodeType": "YulBlock",
											"src": "4842:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "4851:1:12",
																"nodeType": "YulLiteral",
																"src": "4851:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "4854:1:12",
																"nodeType": "YulLiteral",
																"src": "4854:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "4844:6:12",
															"nodeType": "YulIdentifier",
															"src": "4844:6:12"
														},
														"nativeSrc": "4844:12:12",
														"nodeType": "YulFunctionCall",
														"src": "4844:12:12"
													},
													"nativeSrc": "4844:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "4844:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "4817:7:12",
															"nodeType": "YulIdentifier",
															"src": "4817:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "4826:9:12",
															"nodeType": "YulIdentifier",
															"src": "4826:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "4813:3:12",
														"nodeType": "YulIdentifier",
														"src": "4813:3:12"
													},
													"nativeSrc": "4813:23:12",
													"nodeType": "YulFunctionCall",
													"src": "4813:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "4838:2:12",
													"nodeType": "YulLiteral",
													"src": "4838:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "4809:3:12",
												"nodeType": "YulIdentifier",
												"src": "4809:3:12"
											},
											"nativeSrc": "4809:32:12",
											"nodeType": "YulFunctionCall",
											"src": "4809:32:12"
										},
										"nativeSrc": "4806:52:12",
										"nodeType": "YulIf",
										"src": "4806:52:12"
									},
									{
										"nativeSrc": "4867:36:12",
										"nodeType": "YulVariableDeclaration",
										"src": "4867:36:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "4893:9:12",
													"nodeType": "YulIdentifier",
													"src": "4893:9:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "4880:12:12",
												"nodeType": "YulIdentifier",
												"src": "4880:12:12"
											},
											"nativeSrc": "4880:23:12",
											"nodeType": "YulFunctionCall",
											"src": "4880:23:12"
										},
										"variables": [
											{
												"name": "value",
												"nativeSrc": "4871:5:12",
												"nodeType": "YulTypedName",
												"src": "4871:5:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "4936:16:12",
											"nodeType": "YulBlock",
											"src": "4936:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "4945:1:12",
																"nodeType": "YulLiteral",
																"src": "4945:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "4948:1:12",
																"nodeType": "YulLiteral",
																"src": "4948:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "4938:6:12",
															"nodeType": "YulIdentifier",
															"src": "4938:6:12"
														},
														"nativeSrc": "4938:12:12",
														"nodeType": "YulFunctionCall",
														"src": "4938:12:12"
													},
													"nativeSrc": "4938:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "4938:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "4925:5:12",
															"nodeType": "YulIdentifier",
															"src": "4925:5:12"
														},
														{
															"kind": "number",
															"nativeSrc": "4932:1:12",
															"nodeType": "YulLiteral",
															"src": "4932:1:12",
															"type": "",
															"value": "4"
														}
													],
													"functionName": {
														"name": "lt",
														"nativeSrc": "4922:2:12",
														"nodeType": "YulIdentifier",
														"src": "4922:2:12"
													},
													"nativeSrc": "4922:12:12",
													"nodeType": "YulFunctionCall",
													"src": "4922:12:12"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "4915:6:12",
												"nodeType": "YulIdentifier",
												"src": "4915:6:12"
											},
											"nativeSrc": "4915:20:12",
											"nodeType": "YulFunctionCall",
											"src": "4915:20:12"
										},
										"nativeSrc": "4912:40:12",
										"nodeType": "YulIf",
										"src": "4912:40:12"
									},
									{
										"nativeSrc": "4961:15:12",
										"nodeType": "YulAssignment",
										"src": "4961:15:12",
										"value": {
											"name": "value",
											"nativeSrc": "4971:5:12",
											"nodeType": "YulIdentifier",
											"src": "4971:5:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "4961:6:12",
												"nodeType": "YulIdentifier",
												"src": "4961:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_enum$_DropStatus_$2989",
							"nativeSrc": "4711:271:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "4762:9:12",
									"nodeType": "YulTypedName",
									"src": "4762:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "4773:7:12",
									"nodeType": "YulTypedName",
									"src": "4773:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "4785:6:12",
									"nodeType": "YulTypedName",
									"src": "4785:6:12",
									"type": ""
								}
							],
							"src": "4711:271:12"
						},
						{
							"body": {
								"nativeSrc": "5092:510:12",
								"nodeType": "YulBlock",
								"src": "5092:510:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "5138:16:12",
											"nodeType": "YulBlock",
											"src": "5138:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "5147:1:12",
																"nodeType": "YulLiteral",
																"src": "5147:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "5150:1:12",
																"nodeType": "YulLiteral",
																"src": "5150:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "5140:6:12",
															"nodeType": "YulIdentifier",
															"src": "5140:6:12"
														},
														"nativeSrc": "5140:12:12",
														"nodeType": "YulFunctionCall",
														"src": "5140:12:12"
													},
													"nativeSrc": "5140:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "5140:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "5113:7:12",
															"nodeType": "YulIdentifier",
															"src": "5113:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "5122:9:12",
															"nodeType": "YulIdentifier",
															"src": "5122:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "5109:3:12",
														"nodeType": "YulIdentifier",
														"src": "5109:3:12"
													},
													"nativeSrc": "5109:23:12",
													"nodeType": "YulFunctionCall",
													"src": "5109:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "5134:2:12",
													"nodeType": "YulLiteral",
													"src": "5134:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "5105:3:12",
												"nodeType": "YulIdentifier",
												"src": "5105:3:12"
											},
											"nativeSrc": "5105:32:12",
											"nodeType": "YulFunctionCall",
											"src": "5105:32:12"
										},
										"nativeSrc": "5102:52:12",
										"nodeType": "YulIf",
										"src": "5102:52:12"
									},
									{
										"nativeSrc": "5163:37:12",
										"nodeType": "YulVariableDeclaration",
										"src": "5163:37:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "5190:9:12",
													"nodeType": "YulIdentifier",
													"src": "5190:9:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "5177:12:12",
												"nodeType": "YulIdentifier",
												"src": "5177:12:12"
											},
											"nativeSrc": "5177:23:12",
											"nodeType": "YulFunctionCall",
											"src": "5177:23:12"
										},
										"variables": [
											{
												"name": "offset",
												"nativeSrc": "5167:6:12",
												"nodeType": "YulTypedName",
												"src": "5167:6:12",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "5209:28:12",
										"nodeType": "YulVariableDeclaration",
										"src": "5209:28:12",
										"value": {
											"kind": "number",
											"nativeSrc": "5219:18:12",
											"nodeType": "YulLiteral",
											"src": "5219:18:12",
											"type": "",
											"value": "0xffffffffffffffff"
										},
										"variables": [
											{
												"name": "_1",
												"nativeSrc": "5213:2:12",
												"nodeType": "YulTypedName",
												"src": "5213:2:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "5264:16:12",
											"nodeType": "YulBlock",
											"src": "5264:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "5273:1:12",
																"nodeType": "YulLiteral",
																"src": "5273:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "5276:1:12",
																"nodeType": "YulLiteral",
																"src": "5276:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "5266:6:12",
															"nodeType": "YulIdentifier",
															"src": "5266:6:12"
														},
														"nativeSrc": "5266:12:12",
														"nodeType": "YulFunctionCall",
														"src": "5266:12:12"
													},
													"nativeSrc": "5266:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "5266:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "5252:6:12",
													"nodeType": "YulIdentifier",
													"src": "5252:6:12"
												},
												{
													"name": "_1",
													"nativeSrc": "5260:2:12",
													"nodeType": "YulIdentifier",
													"src": "5260:2:12"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "5249:2:12",
												"nodeType": "YulIdentifier",
												"src": "5249:2:12"
											},
											"nativeSrc": "5249:14:12",
											"nodeType": "YulFunctionCall",
											"src": "5249:14:12"
										},
										"nativeSrc": "5246:34:12",
										"nodeType": "YulIf",
										"src": "5246:34:12"
									},
									{
										"nativeSrc": "5289:32:12",
										"nodeType": "YulVariableDeclaration",
										"src": "5289:32:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "5303:9:12",
													"nodeType": "YulIdentifier",
													"src": "5303:9:12"
												},
												{
													"name": "offset",
													"nativeSrc": "5314:6:12",
													"nodeType": "YulIdentifier",
													"src": "5314:6:12"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "5299:3:12",
												"nodeType": "YulIdentifier",
												"src": "5299:3:12"
											},
											"nativeSrc": "5299:22:12",
											"nodeType": "YulFunctionCall",
											"src": "5299:22:12"
										},
										"variables": [
											{
												"name": "_2",
												"nativeSrc": "5293:2:12",
												"nodeType": "YulTypedName",
												"src": "5293:2:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "5369:16:12",
											"nodeType": "YulBlock",
											"src": "5369:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "5378:1:12",
																"nodeType": "YulLiteral",
																"src": "5378:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "5381:1:12",
																"nodeType": "YulLiteral",
																"src": "5381:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "5371:6:12",
															"nodeType": "YulIdentifier",
															"src": "5371:6:12"
														},
														"nativeSrc": "5371:12:12",
														"nodeType": "YulFunctionCall",
														"src": "5371:12:12"
													},
													"nativeSrc": "5371:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "5371:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "_2",
																	"nativeSrc": "5348:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5348:2:12"
																},
																{
																	"kind": "number",
																	"nativeSrc": "5352:4:12",
																	"nodeType": "YulLiteral",
																	"src": "5352:4:12",
																	"type": "",
																	"value": "0x1f"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "5344:3:12",
																"nodeType": "YulIdentifier",
																"src": "5344:3:12"
															},
															"nativeSrc": "5344:13:12",
															"nodeType": "YulFunctionCall",
															"src": "5344:13:12"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "5359:7:12",
															"nodeType": "YulIdentifier",
															"src": "5359:7:12"
														}
													],
													"functionName": {
														"name": "slt",
														"nativeSrc": "5340:3:12",
														"nodeType": "YulIdentifier",
														"src": "5340:3:12"
													},
													"nativeSrc": "5340:27:12",
													"nodeType": "YulFunctionCall",
													"src": "5340:27:12"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "5333:6:12",
												"nodeType": "YulIdentifier",
												"src": "5333:6:12"
											},
											"nativeSrc": "5333:35:12",
											"nodeType": "YulFunctionCall",
											"src": "5333:35:12"
										},
										"nativeSrc": "5330:55:12",
										"nodeType": "YulIf",
										"src": "5330:55:12"
									},
									{
										"nativeSrc": "5394:30:12",
										"nodeType": "YulVariableDeclaration",
										"src": "5394:30:12",
										"value": {
											"arguments": [
												{
													"name": "_2",
													"nativeSrc": "5421:2:12",
													"nodeType": "YulIdentifier",
													"src": "5421:2:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "5408:12:12",
												"nodeType": "YulIdentifier",
												"src": "5408:12:12"
											},
											"nativeSrc": "5408:16:12",
											"nodeType": "YulFunctionCall",
											"src": "5408:16:12"
										},
										"variables": [
											{
												"name": "length",
												"nativeSrc": "5398:6:12",
												"nodeType": "YulTypedName",
												"src": "5398:6:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "5451:16:12",
											"nodeType": "YulBlock",
											"src": "5451:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "5460:1:12",
																"nodeType": "YulLiteral",
																"src": "5460:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "5463:1:12",
																"nodeType": "YulLiteral",
																"src": "5463:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "5453:6:12",
															"nodeType": "YulIdentifier",
															"src": "5453:6:12"
														},
														"nativeSrc": "5453:12:12",
														"nodeType": "YulFunctionCall",
														"src": "5453:12:12"
													},
													"nativeSrc": "5453:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "5453:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "length",
													"nativeSrc": "5439:6:12",
													"nodeType": "YulIdentifier",
													"src": "5439:6:12"
												},
												{
													"name": "_1",
													"nativeSrc": "5447:2:12",
													"nodeType": "YulIdentifier",
													"src": "5447:2:12"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "5436:2:12",
												"nodeType": "YulIdentifier",
												"src": "5436:2:12"
											},
											"nativeSrc": "5436:14:12",
											"nodeType": "YulFunctionCall",
											"src": "5436:14:12"
										},
										"nativeSrc": "5433:34:12",
										"nodeType": "YulIf",
										"src": "5433:34:12"
									},
									{
										"body": {
											"nativeSrc": "5525:16:12",
											"nodeType": "YulBlock",
											"src": "5525:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "5534:1:12",
																"nodeType": "YulLiteral",
																"src": "5534:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "5537:1:12",
																"nodeType": "YulLiteral",
																"src": "5537:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "5527:6:12",
															"nodeType": "YulIdentifier",
															"src": "5527:6:12"
														},
														"nativeSrc": "5527:12:12",
														"nodeType": "YulFunctionCall",
														"src": "5527:12:12"
													},
													"nativeSrc": "5527:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "5527:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "_2",
																	"nativeSrc": "5490:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5490:2:12"
																},
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "5498:1:12",
																			"nodeType": "YulLiteral",
																			"src": "5498:1:12",
																			"type": "",
																			"value": "5"
																		},
																		{
																			"name": "length",
																			"nativeSrc": "5501:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5501:6:12"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nativeSrc": "5494:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5494:3:12"
																	},
																	"nativeSrc": "5494:14:12",
																	"nodeType": "YulFunctionCall",
																	"src": "5494:14:12"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "5486:3:12",
																"nodeType": "YulIdentifier",
																"src": "5486:3:12"
															},
															"nativeSrc": "5486:23:12",
															"nodeType": "YulFunctionCall",
															"src": "5486:23:12"
														},
														{
															"kind": "number",
															"nativeSrc": "5511:2:12",
															"nodeType": "YulLiteral",
															"src": "5511:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "5482:3:12",
														"nodeType": "YulIdentifier",
														"src": "5482:3:12"
													},
													"nativeSrc": "5482:32:12",
													"nodeType": "YulFunctionCall",
													"src": "5482:32:12"
												},
												{
													"name": "dataEnd",
													"nativeSrc": "5516:7:12",
													"nodeType": "YulIdentifier",
													"src": "5516:7:12"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "5479:2:12",
												"nodeType": "YulIdentifier",
												"src": "5479:2:12"
											},
											"nativeSrc": "5479:45:12",
											"nodeType": "YulFunctionCall",
											"src": "5479:45:12"
										},
										"nativeSrc": "5476:65:12",
										"nodeType": "YulIf",
										"src": "5476:65:12"
									},
									{
										"nativeSrc": "5550:21:12",
										"nodeType": "YulAssignment",
										"src": "5550:21:12",
										"value": {
											"arguments": [
												{
													"name": "_2",
													"nativeSrc": "5564:2:12",
													"nodeType": "YulIdentifier",
													"src": "5564:2:12"
												},
												{
													"kind": "number",
													"nativeSrc": "5568:2:12",
													"nodeType": "YulLiteral",
													"src": "5568:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "5560:3:12",
												"nodeType": "YulIdentifier",
												"src": "5560:3:12"
											},
											"nativeSrc": "5560:11:12",
											"nodeType": "YulFunctionCall",
											"src": "5560:11:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "5550:6:12",
												"nodeType": "YulIdentifier",
												"src": "5550:6:12"
											}
										]
									},
									{
										"nativeSrc": "5580:16:12",
										"nodeType": "YulAssignment",
										"src": "5580:16:12",
										"value": {
											"name": "length",
											"nativeSrc": "5590:6:12",
											"nodeType": "YulIdentifier",
											"src": "5590:6:12"
										},
										"variableNames": [
											{
												"name": "value1",
												"nativeSrc": "5580:6:12",
												"nodeType": "YulIdentifier",
												"src": "5580:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
							"nativeSrc": "4987:615:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "5050:9:12",
									"nodeType": "YulTypedName",
									"src": "5050:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "5061:7:12",
									"nodeType": "YulTypedName",
									"src": "5061:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "5073:6:12",
									"nodeType": "YulTypedName",
									"src": "5073:6:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "5081:6:12",
									"nodeType": "YulTypedName",
									"src": "5081:6:12",
									"type": ""
								}
							],
							"src": "4987:615:12"
						},
						{
							"body": {
								"nativeSrc": "5665:291:12",
								"nodeType": "YulBlock",
								"src": "5665:291:12",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "5682:3:12",
													"nodeType": "YulIdentifier",
													"src": "5682:3:12"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "5697:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5697:5:12"
																}
															],
															"functionName": {
																"name": "mload",
																"nativeSrc": "5691:5:12",
																"nodeType": "YulIdentifier",
																"src": "5691:5:12"
															},
															"nativeSrc": "5691:12:12",
															"nodeType": "YulFunctionCall",
															"src": "5691:12:12"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "5713:3:12",
																			"nodeType": "YulLiteral",
																			"src": "5713:3:12",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "5718:1:12",
																			"nodeType": "YulLiteral",
																			"src": "5718:1:12",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nativeSrc": "5709:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5709:3:12"
																	},
																	"nativeSrc": "5709:11:12",
																	"nodeType": "YulFunctionCall",
																	"src": "5709:11:12"
																},
																{
																	"kind": "number",
																	"nativeSrc": "5722:1:12",
																	"nodeType": "YulLiteral",
																	"src": "5722:1:12",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nativeSrc": "5705:3:12",
																"nodeType": "YulIdentifier",
																"src": "5705:3:12"
															},
															"nativeSrc": "5705:19:12",
															"nodeType": "YulFunctionCall",
															"src": "5705:19:12"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "5687:3:12",
														"nodeType": "YulIdentifier",
														"src": "5687:3:12"
													},
													"nativeSrc": "5687:38:12",
													"nodeType": "YulFunctionCall",
													"src": "5687:38:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5675:6:12",
												"nodeType": "YulIdentifier",
												"src": "5675:6:12"
											},
											"nativeSrc": "5675:51:12",
											"nodeType": "YulFunctionCall",
											"src": "5675:51:12"
										},
										"nativeSrc": "5675:51:12",
										"nodeType": "YulExpressionStatement",
										"src": "5675:51:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "pos",
															"nativeSrc": "5746:3:12",
															"nodeType": "YulIdentifier",
															"src": "5746:3:12"
														},
														{
															"kind": "number",
															"nativeSrc": "5751:4:12",
															"nodeType": "YulLiteral",
															"src": "5751:4:12",
															"type": "",
															"value": "0x20"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "5742:3:12",
														"nodeType": "YulIdentifier",
														"src": "5742:3:12"
													},
													"nativeSrc": "5742:14:12",
													"nodeType": "YulFunctionCall",
													"src": "5742:14:12"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "value",
																			"nativeSrc": "5772:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5772:5:12"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "5779:4:12",
																			"nodeType": "YulLiteral",
																			"src": "5779:4:12",
																			"type": "",
																			"value": "0x20"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nativeSrc": "5768:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5768:3:12"
																	},
																	"nativeSrc": "5768:16:12",
																	"nodeType": "YulFunctionCall",
																	"src": "5768:16:12"
																}
															],
															"functionName": {
																"name": "mload",
																"nativeSrc": "5762:5:12",
																"nodeType": "YulIdentifier",
																"src": "5762:5:12"
															},
															"nativeSrc": "5762:23:12",
															"nodeType": "YulFunctionCall",
															"src": "5762:23:12"
														},
														{
															"kind": "number",
															"nativeSrc": "5787:18:12",
															"nodeType": "YulLiteral",
															"src": "5787:18:12",
															"type": "",
															"value": "0xffffffffffffffff"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "5758:3:12",
														"nodeType": "YulIdentifier",
														"src": "5758:3:12"
													},
													"nativeSrc": "5758:48:12",
													"nodeType": "YulFunctionCall",
													"src": "5758:48:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5735:6:12",
												"nodeType": "YulIdentifier",
												"src": "5735:6:12"
											},
											"nativeSrc": "5735:72:12",
											"nodeType": "YulFunctionCall",
											"src": "5735:72:12"
										},
										"nativeSrc": "5735:72:12",
										"nodeType": "YulExpressionStatement",
										"src": "5735:72:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "pos",
															"nativeSrc": "5827:3:12",
															"nodeType": "YulIdentifier",
															"src": "5827:3:12"
														},
														{
															"kind": "number",
															"nativeSrc": "5832:4:12",
															"nodeType": "YulLiteral",
															"src": "5832:4:12",
															"type": "",
															"value": "0x40"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "5823:3:12",
														"nodeType": "YulIdentifier",
														"src": "5823:3:12"
													},
													"nativeSrc": "5823:14:12",
													"nodeType": "YulFunctionCall",
													"src": "5823:14:12"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "5863:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "5863:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5870:4:12",
																					"nodeType": "YulLiteral",
																					"src": "5870:4:12",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5859:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5859:3:12"
																			},
																			"nativeSrc": "5859:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5859:16:12"
																		}
																	],
																	"functionName": {
																		"name": "mload",
																		"nativeSrc": "5853:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5853:5:12"
																	},
																	"nativeSrc": "5853:23:12",
																	"nodeType": "YulFunctionCall",
																	"src": "5853:23:12"
																}
															],
															"functionName": {
																"name": "iszero",
																"nativeSrc": "5846:6:12",
																"nodeType": "YulIdentifier",
																"src": "5846:6:12"
															},
															"nativeSrc": "5846:31:12",
															"nodeType": "YulFunctionCall",
															"src": "5846:31:12"
														}
													],
													"functionName": {
														"name": "iszero",
														"nativeSrc": "5839:6:12",
														"nodeType": "YulIdentifier",
														"src": "5839:6:12"
													},
													"nativeSrc": "5839:39:12",
													"nodeType": "YulFunctionCall",
													"src": "5839:39:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5816:6:12",
												"nodeType": "YulIdentifier",
												"src": "5816:6:12"
											},
											"nativeSrc": "5816:63:12",
											"nodeType": "YulFunctionCall",
											"src": "5816:63:12"
										},
										"nativeSrc": "5816:63:12",
										"nodeType": "YulExpressionStatement",
										"src": "5816:63:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "pos",
															"nativeSrc": "5899:3:12",
															"nodeType": "YulIdentifier",
															"src": "5899:3:12"
														},
														{
															"kind": "number",
															"nativeSrc": "5904:4:12",
															"nodeType": "YulLiteral",
															"src": "5904:4:12",
															"type": "",
															"value": "0x60"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "5895:3:12",
														"nodeType": "YulIdentifier",
														"src": "5895:3:12"
													},
													"nativeSrc": "5895:14:12",
													"nodeType": "YulFunctionCall",
													"src": "5895:14:12"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "value",
																			"nativeSrc": "5925:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5925:5:12"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "5932:4:12",
																			"nodeType": "YulLiteral",
																			"src": "5932:4:12",
																			"type": "",
																			"value": "0x60"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nativeSrc": "5921:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5921:3:12"
																	},
																	"nativeSrc": "5921:16:12",
																	"nodeType": "YulFunctionCall",
																	"src": "5921:16:12"
																}
															],
															"functionName": {
																"name": "mload",
																"nativeSrc": "5915:5:12",
																"nodeType": "YulIdentifier",
																"src": "5915:5:12"
															},
															"nativeSrc": "5915:23:12",
															"nodeType": "YulFunctionCall",
															"src": "5915:23:12"
														},
														{
															"kind": "number",
															"nativeSrc": "5940:8:12",
															"nodeType": "YulLiteral",
															"src": "5940:8:12",
															"type": "",
															"value": "0xffffff"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "5911:3:12",
														"nodeType": "YulIdentifier",
														"src": "5911:3:12"
													},
													"nativeSrc": "5911:38:12",
													"nodeType": "YulFunctionCall",
													"src": "5911:38:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5888:6:12",
												"nodeType": "YulIdentifier",
												"src": "5888:6:12"
											},
											"nativeSrc": "5888:62:12",
											"nodeType": "YulFunctionCall",
											"src": "5888:62:12"
										},
										"nativeSrc": "5888:62:12",
										"nodeType": "YulExpressionStatement",
										"src": "5888:62:12"
									}
								]
							},
							"name": "abi_encode_struct_TokenOwnership",
							"nativeSrc": "5607:349:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "5649:5:12",
									"nodeType": "YulTypedName",
									"src": "5649:5:12",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "5656:3:12",
									"nodeType": "YulTypedName",
									"src": "5656:3:12",
									"type": ""
								}
							],
							"src": "5607:349:12"
						},
						{
							"body": {
								"nativeSrc": "6176:509:12",
								"nodeType": "YulBlock",
								"src": "6176:509:12",
								"statements": [
									{
										"nativeSrc": "6186:12:12",
										"nodeType": "YulVariableDeclaration",
										"src": "6186:12:12",
										"value": {
											"kind": "number",
											"nativeSrc": "6196:2:12",
											"nodeType": "YulLiteral",
											"src": "6196:2:12",
											"type": "",
											"value": "32"
										},
										"variables": [
											{
												"name": "_1",
												"nativeSrc": "6190:2:12",
												"nodeType": "YulTypedName",
												"src": "6190:2:12",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "6207:32:12",
										"nodeType": "YulVariableDeclaration",
										"src": "6207:32:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "6225:9:12",
													"nodeType": "YulIdentifier",
													"src": "6225:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "6236:2:12",
													"nodeType": "YulLiteral",
													"src": "6236:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "6221:3:12",
												"nodeType": "YulIdentifier",
												"src": "6221:3:12"
											},
											"nativeSrc": "6221:18:12",
											"nodeType": "YulFunctionCall",
											"src": "6221:18:12"
										},
										"variables": [
											{
												"name": "tail_1",
												"nativeSrc": "6211:6:12",
												"nodeType": "YulTypedName",
												"src": "6211:6:12",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "6255:9:12",
													"nodeType": "YulIdentifier",
													"src": "6255:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "6266:2:12",
													"nodeType": "YulLiteral",
													"src": "6266:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "6248:6:12",
												"nodeType": "YulIdentifier",
												"src": "6248:6:12"
											},
											"nativeSrc": "6248:21:12",
											"nodeType": "YulFunctionCall",
											"src": "6248:21:12"
										},
										"nativeSrc": "6248:21:12",
										"nodeType": "YulExpressionStatement",
										"src": "6248:21:12"
									},
									{
										"nativeSrc": "6278:17:12",
										"nodeType": "YulVariableDeclaration",
										"src": "6278:17:12",
										"value": {
											"name": "tail_1",
											"nativeSrc": "6289:6:12",
											"nodeType": "YulIdentifier",
											"src": "6289:6:12"
										},
										"variables": [
											{
												"name": "pos",
												"nativeSrc": "6282:3:12",
												"nodeType": "YulTypedName",
												"src": "6282:3:12",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "6304:27:12",
										"nodeType": "YulVariableDeclaration",
										"src": "6304:27:12",
										"value": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "6324:6:12",
													"nodeType": "YulIdentifier",
													"src": "6324:6:12"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "6318:5:12",
												"nodeType": "YulIdentifier",
												"src": "6318:5:12"
											},
											"nativeSrc": "6318:13:12",
											"nodeType": "YulFunctionCall",
											"src": "6318:13:12"
										},
										"variables": [
											{
												"name": "length",
												"nativeSrc": "6308:6:12",
												"nodeType": "YulTypedName",
												"src": "6308:6:12",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "tail_1",
													"nativeSrc": "6347:6:12",
													"nodeType": "YulIdentifier",
													"src": "6347:6:12"
												},
												{
													"name": "length",
													"nativeSrc": "6355:6:12",
													"nodeType": "YulIdentifier",
													"src": "6355:6:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "6340:6:12",
												"nodeType": "YulIdentifier",
												"src": "6340:6:12"
											},
											"nativeSrc": "6340:22:12",
											"nodeType": "YulFunctionCall",
											"src": "6340:22:12"
										},
										"nativeSrc": "6340:22:12",
										"nodeType": "YulExpressionStatement",
										"src": "6340:22:12"
									},
									{
										"nativeSrc": "6371:25:12",
										"nodeType": "YulAssignment",
										"src": "6371:25:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "6382:9:12",
													"nodeType": "YulIdentifier",
													"src": "6382:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "6393:2:12",
													"nodeType": "YulLiteral",
													"src": "6393:2:12",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "6378:3:12",
												"nodeType": "YulIdentifier",
												"src": "6378:3:12"
											},
											"nativeSrc": "6378:18:12",
											"nodeType": "YulFunctionCall",
											"src": "6378:18:12"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "6371:3:12",
												"nodeType": "YulIdentifier",
												"src": "6371:3:12"
											}
										]
									},
									{
										"nativeSrc": "6405:29:12",
										"nodeType": "YulVariableDeclaration",
										"src": "6405:29:12",
										"value": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "6423:6:12",
													"nodeType": "YulIdentifier",
													"src": "6423:6:12"
												},
												{
													"kind": "number",
													"nativeSrc": "6431:2:12",
													"nodeType": "YulLiteral",
													"src": "6431:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "6419:3:12",
												"nodeType": "YulIdentifier",
												"src": "6419:3:12"
											},
											"nativeSrc": "6419:15:12",
											"nodeType": "YulFunctionCall",
											"src": "6419:15:12"
										},
										"variables": [
											{
												"name": "srcPtr",
												"nativeSrc": "6409:6:12",
												"nodeType": "YulTypedName",
												"src": "6409:6:12",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "6443:10:12",
										"nodeType": "YulVariableDeclaration",
										"src": "6443:10:12",
										"value": {
											"kind": "number",
											"nativeSrc": "6452:1:12",
											"nodeType": "YulLiteral",
											"src": "6452:1:12",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "i",
												"nativeSrc": "6447:1:12",
												"nodeType": "YulTypedName",
												"src": "6447:1:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "6511:148:12",
											"nodeType": "YulBlock",
											"src": "6511:148:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "srcPtr",
																		"nativeSrc": "6564:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6564:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6558:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6558:5:12"
																},
																"nativeSrc": "6558:13:12",
																"nodeType": "YulFunctionCall",
																"src": "6558:13:12"
															},
															{
																"name": "pos",
																"nativeSrc": "6573:3:12",
																"nodeType": "YulIdentifier",
																"src": "6573:3:12"
															}
														],
														"functionName": {
															"name": "abi_encode_struct_TokenOwnership",
															"nativeSrc": "6525:32:12",
															"nodeType": "YulIdentifier",
															"src": "6525:32:12"
														},
														"nativeSrc": "6525:52:12",
														"nodeType": "YulFunctionCall",
														"src": "6525:52:12"
													},
													"nativeSrc": "6525:52:12",
													"nodeType": "YulExpressionStatement",
													"src": "6525:52:12"
												},
												{
													"nativeSrc": "6590:21:12",
													"nodeType": "YulAssignment",
													"src": "6590:21:12",
													"value": {
														"arguments": [
															{
																"name": "pos",
																"nativeSrc": "6601:3:12",
																"nodeType": "YulIdentifier",
																"src": "6601:3:12"
															},
															{
																"kind": "number",
																"nativeSrc": "6606:4:12",
																"nodeType": "YulLiteral",
																"src": "6606:4:12",
																"type": "",
																"value": "0x80"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "6597:3:12",
															"nodeType": "YulIdentifier",
															"src": "6597:3:12"
														},
														"nativeSrc": "6597:14:12",
														"nodeType": "YulFunctionCall",
														"src": "6597:14:12"
													},
													"variableNames": [
														{
															"name": "pos",
															"nativeSrc": "6590:3:12",
															"nodeType": "YulIdentifier",
															"src": "6590:3:12"
														}
													]
												},
												{
													"nativeSrc": "6624:25:12",
													"nodeType": "YulAssignment",
													"src": "6624:25:12",
													"value": {
														"arguments": [
															{
																"name": "srcPtr",
																"nativeSrc": "6638:6:12",
																"nodeType": "YulIdentifier",
																"src": "6638:6:12"
															},
															{
																"name": "_1",
																"nativeSrc": "6646:2:12",
																"nodeType": "YulIdentifier",
																"src": "6646:2:12"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "6634:3:12",
															"nodeType": "YulIdentifier",
															"src": "6634:3:12"
														},
														"nativeSrc": "6634:15:12",
														"nodeType": "YulFunctionCall",
														"src": "6634:15:12"
													},
													"variableNames": [
														{
															"name": "srcPtr",
															"nativeSrc": "6624:6:12",
															"nodeType": "YulIdentifier",
															"src": "6624:6:12"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "i",
													"nativeSrc": "6473:1:12",
													"nodeType": "YulIdentifier",
													"src": "6473:1:12"
												},
												{
													"name": "length",
													"nativeSrc": "6476:6:12",
													"nodeType": "YulIdentifier",
													"src": "6476:6:12"
												}
											],
											"functionName": {
												"name": "lt",
												"nativeSrc": "6470:2:12",
												"nodeType": "YulIdentifier",
												"src": "6470:2:12"
											},
											"nativeSrc": "6470:13:12",
											"nodeType": "YulFunctionCall",
											"src": "6470:13:12"
										},
										"nativeSrc": "6462:197:12",
										"nodeType": "YulForLoop",
										"post": {
											"nativeSrc": "6484:18:12",
											"nodeType": "YulBlock",
											"src": "6484:18:12",
											"statements": [
												{
													"nativeSrc": "6486:14:12",
													"nodeType": "YulAssignment",
													"src": "6486:14:12",
													"value": {
														"arguments": [
															{
																"name": "i",
																"nativeSrc": "6495:1:12",
																"nodeType": "YulIdentifier",
																"src": "6495:1:12"
															},
															{
																"kind": "number",
																"nativeSrc": "6498:1:12",
																"nodeType": "YulLiteral",
																"src": "6498:1:12",
																"type": "",
																"value": "1"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "6491:3:12",
															"nodeType": "YulIdentifier",
															"src": "6491:3:12"
														},
														"nativeSrc": "6491:9:12",
														"nodeType": "YulFunctionCall",
														"src": "6491:9:12"
													},
													"variableNames": [
														{
															"name": "i",
															"nativeSrc": "6486:1:12",
															"nodeType": "YulIdentifier",
															"src": "6486:1:12"
														}
													]
												}
											]
										},
										"pre": {
											"nativeSrc": "6466:3:12",
											"nodeType": "YulBlock",
											"src": "6466:3:12",
											"statements": []
										},
										"src": "6462:197:12"
									},
									{
										"nativeSrc": "6668:11:12",
										"nodeType": "YulAssignment",
										"src": "6668:11:12",
										"value": {
											"name": "pos",
											"nativeSrc": "6676:3:12",
											"nodeType": "YulIdentifier",
											"src": "6676:3:12"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "6668:4:12",
												"nodeType": "YulIdentifier",
												"src": "6668:4:12"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_array$_t_struct$_TokenOwnership_$3771_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenOwnership_$3771_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
							"nativeSrc": "5961:724:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "6145:9:12",
									"nodeType": "YulTypedName",
									"src": "6145:9:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "6156:6:12",
									"nodeType": "YulTypedName",
									"src": "6156:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "6167:4:12",
									"nodeType": "YulTypedName",
									"src": "6167:4:12",
									"type": ""
								}
							],
							"src": "5961:724:12"
						},
						{
							"body": {
								"nativeSrc": "6760:116:12",
								"nodeType": "YulBlock",
								"src": "6760:116:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "6806:16:12",
											"nodeType": "YulBlock",
											"src": "6806:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "6815:1:12",
																"nodeType": "YulLiteral",
																"src": "6815:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "6818:1:12",
																"nodeType": "YulLiteral",
																"src": "6818:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "6808:6:12",
															"nodeType": "YulIdentifier",
															"src": "6808:6:12"
														},
														"nativeSrc": "6808:12:12",
														"nodeType": "YulFunctionCall",
														"src": "6808:12:12"
													},
													"nativeSrc": "6808:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "6808:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "6781:7:12",
															"nodeType": "YulIdentifier",
															"src": "6781:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "6790:9:12",
															"nodeType": "YulIdentifier",
															"src": "6790:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "6777:3:12",
														"nodeType": "YulIdentifier",
														"src": "6777:3:12"
													},
													"nativeSrc": "6777:23:12",
													"nodeType": "YulFunctionCall",
													"src": "6777:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "6802:2:12",
													"nodeType": "YulLiteral",
													"src": "6802:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "6773:3:12",
												"nodeType": "YulIdentifier",
												"src": "6773:3:12"
											},
											"nativeSrc": "6773:32:12",
											"nodeType": "YulFunctionCall",
											"src": "6773:32:12"
										},
										"nativeSrc": "6770:52:12",
										"nodeType": "YulIf",
										"src": "6770:52:12"
									},
									{
										"nativeSrc": "6831:39:12",
										"nodeType": "YulAssignment",
										"src": "6831:39:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "6860:9:12",
													"nodeType": "YulIdentifier",
													"src": "6860:9:12"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "6841:18:12",
												"nodeType": "YulIdentifier",
												"src": "6841:18:12"
											},
											"nativeSrc": "6841:29:12",
											"nodeType": "YulFunctionCall",
											"src": "6841:29:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "6831:6:12",
												"nodeType": "YulIdentifier",
												"src": "6831:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_address",
							"nativeSrc": "6690:186:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "6726:9:12",
									"nodeType": "YulTypedName",
									"src": "6726:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "6737:7:12",
									"nodeType": "YulTypedName",
									"src": "6737:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "6749:6:12",
									"nodeType": "YulTypedName",
									"src": "6749:6:12",
									"type": ""
								}
							],
							"src": "6690:186:12"
						},
						{
							"body": {
								"nativeSrc": "7032:481:12",
								"nodeType": "YulBlock",
								"src": "7032:481:12",
								"statements": [
									{
										"nativeSrc": "7042:12:12",
										"nodeType": "YulVariableDeclaration",
										"src": "7042:12:12",
										"value": {
											"kind": "number",
											"nativeSrc": "7052:2:12",
											"nodeType": "YulLiteral",
											"src": "7052:2:12",
											"type": "",
											"value": "32"
										},
										"variables": [
											{
												"name": "_1",
												"nativeSrc": "7046:2:12",
												"nodeType": "YulTypedName",
												"src": "7046:2:12",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "7063:32:12",
										"nodeType": "YulVariableDeclaration",
										"src": "7063:32:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "7081:9:12",
													"nodeType": "YulIdentifier",
													"src": "7081:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "7092:2:12",
													"nodeType": "YulLiteral",
													"src": "7092:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "7077:3:12",
												"nodeType": "YulIdentifier",
												"src": "7077:3:12"
											},
											"nativeSrc": "7077:18:12",
											"nodeType": "YulFunctionCall",
											"src": "7077:18:12"
										},
										"variables": [
											{
												"name": "tail_1",
												"nativeSrc": "7067:6:12",
												"nodeType": "YulTypedName",
												"src": "7067:6:12",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "7111:9:12",
													"nodeType": "YulIdentifier",
													"src": "7111:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "7122:2:12",
													"nodeType": "YulLiteral",
													"src": "7122:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "7104:6:12",
												"nodeType": "YulIdentifier",
												"src": "7104:6:12"
											},
											"nativeSrc": "7104:21:12",
											"nodeType": "YulFunctionCall",
											"src": "7104:21:12"
										},
										"nativeSrc": "7104:21:12",
										"nodeType": "YulExpressionStatement",
										"src": "7104:21:12"
									},
									{
										"nativeSrc": "7134:17:12",
										"nodeType": "YulVariableDeclaration",
										"src": "7134:17:12",
										"value": {
											"name": "tail_1",
											"nativeSrc": "7145:6:12",
											"nodeType": "YulIdentifier",
											"src": "7145:6:12"
										},
										"variables": [
											{
												"name": "pos",
												"nativeSrc": "7138:3:12",
												"nodeType": "YulTypedName",
												"src": "7138:3:12",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "7160:27:12",
										"nodeType": "YulVariableDeclaration",
										"src": "7160:27:12",
										"value": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "7180:6:12",
													"nodeType": "YulIdentifier",
													"src": "7180:6:12"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "7174:5:12",
												"nodeType": "YulIdentifier",
												"src": "7174:5:12"
											},
											"nativeSrc": "7174:13:12",
											"nodeType": "YulFunctionCall",
											"src": "7174:13:12"
										},
										"variables": [
											{
												"name": "length",
												"nativeSrc": "7164:6:12",
												"nodeType": "YulTypedName",
												"src": "7164:6:12",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "tail_1",
													"nativeSrc": "7203:6:12",
													"nodeType": "YulIdentifier",
													"src": "7203:6:12"
												},
												{
													"name": "length",
													"nativeSrc": "7211:6:12",
													"nodeType": "YulIdentifier",
													"src": "7211:6:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "7196:6:12",
												"nodeType": "YulIdentifier",
												"src": "7196:6:12"
											},
											"nativeSrc": "7196:22:12",
											"nodeType": "YulFunctionCall",
											"src": "7196:22:12"
										},
										"nativeSrc": "7196:22:12",
										"nodeType": "YulExpressionStatement",
										"src": "7196:22:12"
									},
									{
										"nativeSrc": "7227:25:12",
										"nodeType": "YulAssignment",
										"src": "7227:25:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "7238:9:12",
													"nodeType": "YulIdentifier",
													"src": "7238:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "7249:2:12",
													"nodeType": "YulLiteral",
													"src": "7249:2:12",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "7234:3:12",
												"nodeType": "YulIdentifier",
												"src": "7234:3:12"
											},
											"nativeSrc": "7234:18:12",
											"nodeType": "YulFunctionCall",
											"src": "7234:18:12"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "7227:3:12",
												"nodeType": "YulIdentifier",
												"src": "7227:3:12"
											}
										]
									},
									{
										"nativeSrc": "7261:29:12",
										"nodeType": "YulVariableDeclaration",
										"src": "7261:29:12",
										"value": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "7279:6:12",
													"nodeType": "YulIdentifier",
													"src": "7279:6:12"
												},
												{
													"kind": "number",
													"nativeSrc": "7287:2:12",
													"nodeType": "YulLiteral",
													"src": "7287:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "7275:3:12",
												"nodeType": "YulIdentifier",
												"src": "7275:3:12"
											},
											"nativeSrc": "7275:15:12",
											"nodeType": "YulFunctionCall",
											"src": "7275:15:12"
										},
										"variables": [
											{
												"name": "srcPtr",
												"nativeSrc": "7265:6:12",
												"nodeType": "YulTypedName",
												"src": "7265:6:12",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "7299:10:12",
										"nodeType": "YulVariableDeclaration",
										"src": "7299:10:12",
										"value": {
											"kind": "number",
											"nativeSrc": "7308:1:12",
											"nodeType": "YulLiteral",
											"src": "7308:1:12",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "i",
												"nativeSrc": "7303:1:12",
												"nodeType": "YulTypedName",
												"src": "7303:1:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "7367:120:12",
											"nodeType": "YulBlock",
											"src": "7367:120:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"name": "pos",
																"nativeSrc": "7388:3:12",
																"nodeType": "YulIdentifier",
																"src": "7388:3:12"
															},
															{
																"arguments": [
																	{
																		"name": "srcPtr",
																		"nativeSrc": "7399:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7399:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7393:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7393:5:12"
																},
																"nativeSrc": "7393:13:12",
																"nodeType": "YulFunctionCall",
																"src": "7393:13:12"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "7381:6:12",
															"nodeType": "YulIdentifier",
															"src": "7381:6:12"
														},
														"nativeSrc": "7381:26:12",
														"nodeType": "YulFunctionCall",
														"src": "7381:26:12"
													},
													"nativeSrc": "7381:26:12",
													"nodeType": "YulExpressionStatement",
													"src": "7381:26:12"
												},
												{
													"nativeSrc": "7420:19:12",
													"nodeType": "YulAssignment",
													"src": "7420:19:12",
													"value": {
														"arguments": [
															{
																"name": "pos",
																"nativeSrc": "7431:3:12",
																"nodeType": "YulIdentifier",
																"src": "7431:3:12"
															},
															{
																"name": "_1",
																"nativeSrc": "7436:2:12",
																"nodeType": "YulIdentifier",
																"src": "7436:2:12"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "7427:3:12",
															"nodeType": "YulIdentifier",
															"src": "7427:3:12"
														},
														"nativeSrc": "7427:12:12",
														"nodeType": "YulFunctionCall",
														"src": "7427:12:12"
													},
													"variableNames": [
														{
															"name": "pos",
															"nativeSrc": "7420:3:12",
															"nodeType": "YulIdentifier",
															"src": "7420:3:12"
														}
													]
												},
												{
													"nativeSrc": "7452:25:12",
													"nodeType": "YulAssignment",
													"src": "7452:25:12",
													"value": {
														"arguments": [
															{
																"name": "srcPtr",
																"nativeSrc": "7466:6:12",
																"nodeType": "YulIdentifier",
																"src": "7466:6:12"
															},
															{
																"name": "_1",
																"nativeSrc": "7474:2:12",
																"nodeType": "YulIdentifier",
																"src": "7474:2:12"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "7462:3:12",
															"nodeType": "YulIdentifier",
															"src": "7462:3:12"
														},
														"nativeSrc": "7462:15:12",
														"nodeType": "YulFunctionCall",
														"src": "7462:15:12"
													},
													"variableNames": [
														{
															"name": "srcPtr",
															"nativeSrc": "7452:6:12",
															"nodeType": "YulIdentifier",
															"src": "7452:6:12"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "i",
													"nativeSrc": "7329:1:12",
													"nodeType": "YulIdentifier",
													"src": "7329:1:12"
												},
												{
													"name": "length",
													"nativeSrc": "7332:6:12",
													"nodeType": "YulIdentifier",
													"src": "7332:6:12"
												}
											],
											"functionName": {
												"name": "lt",
												"nativeSrc": "7326:2:12",
												"nodeType": "YulIdentifier",
												"src": "7326:2:12"
											},
											"nativeSrc": "7326:13:12",
											"nodeType": "YulFunctionCall",
											"src": "7326:13:12"
										},
										"nativeSrc": "7318:169:12",
										"nodeType": "YulForLoop",
										"post": {
											"nativeSrc": "7340:18:12",
											"nodeType": "YulBlock",
											"src": "7340:18:12",
											"statements": [
												{
													"nativeSrc": "7342:14:12",
													"nodeType": "YulAssignment",
													"src": "7342:14:12",
													"value": {
														"arguments": [
															{
																"name": "i",
																"nativeSrc": "7351:1:12",
																"nodeType": "YulIdentifier",
																"src": "7351:1:12"
															},
															{
																"kind": "number",
																"nativeSrc": "7354:1:12",
																"nodeType": "YulLiteral",
																"src": "7354:1:12",
																"type": "",
																"value": "1"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "7347:3:12",
															"nodeType": "YulIdentifier",
															"src": "7347:3:12"
														},
														"nativeSrc": "7347:9:12",
														"nodeType": "YulFunctionCall",
														"src": "7347:9:12"
													},
													"variableNames": [
														{
															"name": "i",
															"nativeSrc": "7342:1:12",
															"nodeType": "YulIdentifier",
															"src": "7342:1:12"
														}
													]
												}
											]
										},
										"pre": {
											"nativeSrc": "7322:3:12",
											"nodeType": "YulBlock",
											"src": "7322:3:12",
											"statements": []
										},
										"src": "7318:169:12"
									},
									{
										"nativeSrc": "7496:11:12",
										"nodeType": "YulAssignment",
										"src": "7496:11:12",
										"value": {
											"name": "pos",
											"nativeSrc": "7504:3:12",
											"nodeType": "YulIdentifier",
											"src": "7504:3:12"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "7496:4:12",
												"nodeType": "YulIdentifier",
												"src": "7496:4:12"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
							"nativeSrc": "6881:632:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "7001:9:12",
									"nodeType": "YulTypedName",
									"src": "7001:9:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "7012:6:12",
									"nodeType": "YulTypedName",
									"src": "7012:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "7023:4:12",
									"nodeType": "YulTypedName",
									"src": "7023:4:12",
									"type": ""
								}
							],
							"src": "6881:632:12"
						},
						{
							"body": {
								"nativeSrc": "7622:218:12",
								"nodeType": "YulBlock",
								"src": "7622:218:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "7668:16:12",
											"nodeType": "YulBlock",
											"src": "7668:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "7677:1:12",
																"nodeType": "YulLiteral",
																"src": "7677:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "7680:1:12",
																"nodeType": "YulLiteral",
																"src": "7680:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "7670:6:12",
															"nodeType": "YulIdentifier",
															"src": "7670:6:12"
														},
														"nativeSrc": "7670:12:12",
														"nodeType": "YulFunctionCall",
														"src": "7670:12:12"
													},
													"nativeSrc": "7670:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "7670:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "7643:7:12",
															"nodeType": "YulIdentifier",
															"src": "7643:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "7652:9:12",
															"nodeType": "YulIdentifier",
															"src": "7652:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "7639:3:12",
														"nodeType": "YulIdentifier",
														"src": "7639:3:12"
													},
													"nativeSrc": "7639:23:12",
													"nodeType": "YulFunctionCall",
													"src": "7639:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "7664:2:12",
													"nodeType": "YulLiteral",
													"src": "7664:2:12",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "7635:3:12",
												"nodeType": "YulIdentifier",
												"src": "7635:3:12"
											},
											"nativeSrc": "7635:32:12",
											"nodeType": "YulFunctionCall",
											"src": "7635:32:12"
										},
										"nativeSrc": "7632:52:12",
										"nodeType": "YulIf",
										"src": "7632:52:12"
									},
									{
										"nativeSrc": "7693:39:12",
										"nodeType": "YulAssignment",
										"src": "7693:39:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "7722:9:12",
													"nodeType": "YulIdentifier",
													"src": "7722:9:12"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "7703:18:12",
												"nodeType": "YulIdentifier",
												"src": "7703:18:12"
											},
											"nativeSrc": "7703:29:12",
											"nodeType": "YulFunctionCall",
											"src": "7703:29:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "7693:6:12",
												"nodeType": "YulIdentifier",
												"src": "7693:6:12"
											}
										]
									},
									{
										"nativeSrc": "7741:42:12",
										"nodeType": "YulAssignment",
										"src": "7741:42:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "7768:9:12",
															"nodeType": "YulIdentifier",
															"src": "7768:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "7779:2:12",
															"nodeType": "YulLiteral",
															"src": "7779:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "7764:3:12",
														"nodeType": "YulIdentifier",
														"src": "7764:3:12"
													},
													"nativeSrc": "7764:18:12",
													"nodeType": "YulFunctionCall",
													"src": "7764:18:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "7751:12:12",
												"nodeType": "YulIdentifier",
												"src": "7751:12:12"
											},
											"nativeSrc": "7751:32:12",
											"nodeType": "YulFunctionCall",
											"src": "7751:32:12"
										},
										"variableNames": [
											{
												"name": "value1",
												"nativeSrc": "7741:6:12",
												"nodeType": "YulIdentifier",
												"src": "7741:6:12"
											}
										]
									},
									{
										"nativeSrc": "7792:42:12",
										"nodeType": "YulAssignment",
										"src": "7792:42:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "7819:9:12",
															"nodeType": "YulIdentifier",
															"src": "7819:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "7830:2:12",
															"nodeType": "YulLiteral",
															"src": "7830:2:12",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "7815:3:12",
														"nodeType": "YulIdentifier",
														"src": "7815:3:12"
													},
													"nativeSrc": "7815:18:12",
													"nodeType": "YulFunctionCall",
													"src": "7815:18:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "7802:12:12",
												"nodeType": "YulIdentifier",
												"src": "7802:12:12"
											},
											"nativeSrc": "7802:32:12",
											"nodeType": "YulFunctionCall",
											"src": "7802:32:12"
										},
										"variableNames": [
											{
												"name": "value2",
												"nativeSrc": "7792:6:12",
												"nodeType": "YulIdentifier",
												"src": "7792:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
							"nativeSrc": "7518:322:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "7572:9:12",
									"nodeType": "YulTypedName",
									"src": "7572:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "7583:7:12",
									"nodeType": "YulTypedName",
									"src": "7583:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "7595:6:12",
									"nodeType": "YulTypedName",
									"src": "7595:6:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "7603:6:12",
									"nodeType": "YulTypedName",
									"src": "7603:6:12",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "7611:6:12",
									"nodeType": "YulTypedName",
									"src": "7611:6:12",
									"type": ""
								}
							],
							"src": "7518:322:12"
						},
						{
							"body": {
								"nativeSrc": "7929:263:12",
								"nodeType": "YulBlock",
								"src": "7929:263:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "7975:16:12",
											"nodeType": "YulBlock",
											"src": "7975:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "7984:1:12",
																"nodeType": "YulLiteral",
																"src": "7984:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "7987:1:12",
																"nodeType": "YulLiteral",
																"src": "7987:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "7977:6:12",
															"nodeType": "YulIdentifier",
															"src": "7977:6:12"
														},
														"nativeSrc": "7977:12:12",
														"nodeType": "YulFunctionCall",
														"src": "7977:12:12"
													},
													"nativeSrc": "7977:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "7977:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "7950:7:12",
															"nodeType": "YulIdentifier",
															"src": "7950:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "7959:9:12",
															"nodeType": "YulIdentifier",
															"src": "7959:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "7946:3:12",
														"nodeType": "YulIdentifier",
														"src": "7946:3:12"
													},
													"nativeSrc": "7946:23:12",
													"nodeType": "YulFunctionCall",
													"src": "7946:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "7971:2:12",
													"nodeType": "YulLiteral",
													"src": "7971:2:12",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "7942:3:12",
												"nodeType": "YulIdentifier",
												"src": "7942:3:12"
											},
											"nativeSrc": "7942:32:12",
											"nodeType": "YulFunctionCall",
											"src": "7942:32:12"
										},
										"nativeSrc": "7939:52:12",
										"nodeType": "YulIf",
										"src": "7939:52:12"
									},
									{
										"nativeSrc": "8000:39:12",
										"nodeType": "YulAssignment",
										"src": "8000:39:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "8029:9:12",
													"nodeType": "YulIdentifier",
													"src": "8029:9:12"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "8010:18:12",
												"nodeType": "YulIdentifier",
												"src": "8010:18:12"
											},
											"nativeSrc": "8010:29:12",
											"nodeType": "YulFunctionCall",
											"src": "8010:29:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "8000:6:12",
												"nodeType": "YulIdentifier",
												"src": "8000:6:12"
											}
										]
									},
									{
										"nativeSrc": "8048:45:12",
										"nodeType": "YulVariableDeclaration",
										"src": "8048:45:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "8078:9:12",
															"nodeType": "YulIdentifier",
															"src": "8078:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "8089:2:12",
															"nodeType": "YulLiteral",
															"src": "8089:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "8074:3:12",
														"nodeType": "YulIdentifier",
														"src": "8074:3:12"
													},
													"nativeSrc": "8074:18:12",
													"nodeType": "YulFunctionCall",
													"src": "8074:18:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "8061:12:12",
												"nodeType": "YulIdentifier",
												"src": "8061:12:12"
											},
											"nativeSrc": "8061:32:12",
											"nodeType": "YulFunctionCall",
											"src": "8061:32:12"
										},
										"variables": [
											{
												"name": "value",
												"nativeSrc": "8052:5:12",
												"nodeType": "YulTypedName",
												"src": "8052:5:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "8146:16:12",
											"nodeType": "YulBlock",
											"src": "8146:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "8155:1:12",
																"nodeType": "YulLiteral",
																"src": "8155:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "8158:1:12",
																"nodeType": "YulLiteral",
																"src": "8158:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "8148:6:12",
															"nodeType": "YulIdentifier",
															"src": "8148:6:12"
														},
														"nativeSrc": "8148:12:12",
														"nodeType": "YulFunctionCall",
														"src": "8148:12:12"
													},
													"nativeSrc": "8148:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "8148:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "8115:5:12",
															"nodeType": "YulIdentifier",
															"src": "8115:5:12"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "value",
																			"nativeSrc": "8136:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "8136:5:12"
																		}
																	],
																	"functionName": {
																		"name": "iszero",
																		"nativeSrc": "8129:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8129:6:12"
																	},
																	"nativeSrc": "8129:13:12",
																	"nodeType": "YulFunctionCall",
																	"src": "8129:13:12"
																}
															],
															"functionName": {
																"name": "iszero",
																"nativeSrc": "8122:6:12",
																"nodeType": "YulIdentifier",
																"src": "8122:6:12"
															},
															"nativeSrc": "8122:21:12",
															"nodeType": "YulFunctionCall",
															"src": "8122:21:12"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "8112:2:12",
														"nodeType": "YulIdentifier",
														"src": "8112:2:12"
													},
													"nativeSrc": "8112:32:12",
													"nodeType": "YulFunctionCall",
													"src": "8112:32:12"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "8105:6:12",
												"nodeType": "YulIdentifier",
												"src": "8105:6:12"
											},
											"nativeSrc": "8105:40:12",
											"nodeType": "YulFunctionCall",
											"src": "8105:40:12"
										},
										"nativeSrc": "8102:60:12",
										"nodeType": "YulIf",
										"src": "8102:60:12"
									},
									{
										"nativeSrc": "8171:15:12",
										"nodeType": "YulAssignment",
										"src": "8171:15:12",
										"value": {
											"name": "value",
											"nativeSrc": "8181:5:12",
											"nodeType": "YulIdentifier",
											"src": "8181:5:12"
										},
										"variableNames": [
											{
												"name": "value1",
												"nativeSrc": "8171:6:12",
												"nodeType": "YulIdentifier",
												"src": "8171:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_bool",
							"nativeSrc": "7845:347:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "7887:9:12",
									"nodeType": "YulTypedName",
									"src": "7887:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "7898:7:12",
									"nodeType": "YulTypedName",
									"src": "7898:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "7910:6:12",
									"nodeType": "YulTypedName",
									"src": "7910:6:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "7918:6:12",
									"nodeType": "YulTypedName",
									"src": "7918:6:12",
									"type": ""
								}
							],
							"src": "7845:347:12"
						},
						{
							"body": {
								"nativeSrc": "8229:95:12",
								"nodeType": "YulBlock",
								"src": "8229:95:12",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "8246:1:12",
													"nodeType": "YulLiteral",
													"src": "8246:1:12",
													"type": "",
													"value": "0"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "8253:3:12",
															"nodeType": "YulLiteral",
															"src": "8253:3:12",
															"type": "",
															"value": "224"
														},
														{
															"kind": "number",
															"nativeSrc": "8258:10:12",
															"nodeType": "YulLiteral",
															"src": "8258:10:12",
															"type": "",
															"value": "0x4e487b71"
														}
													],
													"functionName": {
														"name": "shl",
														"nativeSrc": "8249:3:12",
														"nodeType": "YulIdentifier",
														"src": "8249:3:12"
													},
													"nativeSrc": "8249:20:12",
													"nodeType": "YulFunctionCall",
													"src": "8249:20:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "8239:6:12",
												"nodeType": "YulIdentifier",
												"src": "8239:6:12"
											},
											"nativeSrc": "8239:31:12",
											"nodeType": "YulFunctionCall",
											"src": "8239:31:12"
										},
										"nativeSrc": "8239:31:12",
										"nodeType": "YulExpressionStatement",
										"src": "8239:31:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "8286:1:12",
													"nodeType": "YulLiteral",
													"src": "8286:1:12",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "8289:4:12",
													"nodeType": "YulLiteral",
													"src": "8289:4:12",
													"type": "",
													"value": "0x41"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "8279:6:12",
												"nodeType": "YulIdentifier",
												"src": "8279:6:12"
											},
											"nativeSrc": "8279:15:12",
											"nodeType": "YulFunctionCall",
											"src": "8279:15:12"
										},
										"nativeSrc": "8279:15:12",
										"nodeType": "YulExpressionStatement",
										"src": "8279:15:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "8310:1:12",
													"nodeType": "YulLiteral",
													"src": "8310:1:12",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "8313:4:12",
													"nodeType": "YulLiteral",
													"src": "8313:4:12",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "8303:6:12",
												"nodeType": "YulIdentifier",
												"src": "8303:6:12"
											},
											"nativeSrc": "8303:15:12",
											"nodeType": "YulFunctionCall",
											"src": "8303:15:12"
										},
										"nativeSrc": "8303:15:12",
										"nodeType": "YulExpressionStatement",
										"src": "8303:15:12"
									}
								]
							},
							"name": "panic_error_0x41",
							"nativeSrc": "8197:127:12",
							"nodeType": "YulFunctionDefinition",
							"src": "8197:127:12"
						},
						{
							"body": {
								"nativeSrc": "8459:1008:12",
								"nodeType": "YulBlock",
								"src": "8459:1008:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "8506:16:12",
											"nodeType": "YulBlock",
											"src": "8506:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "8515:1:12",
																"nodeType": "YulLiteral",
																"src": "8515:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "8518:1:12",
																"nodeType": "YulLiteral",
																"src": "8518:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "8508:6:12",
															"nodeType": "YulIdentifier",
															"src": "8508:6:12"
														},
														"nativeSrc": "8508:12:12",
														"nodeType": "YulFunctionCall",
														"src": "8508:12:12"
													},
													"nativeSrc": "8508:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "8508:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "8480:7:12",
															"nodeType": "YulIdentifier",
															"src": "8480:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "8489:9:12",
															"nodeType": "YulIdentifier",
															"src": "8489:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "8476:3:12",
														"nodeType": "YulIdentifier",
														"src": "8476:3:12"
													},
													"nativeSrc": "8476:23:12",
													"nodeType": "YulFunctionCall",
													"src": "8476:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "8501:3:12",
													"nodeType": "YulLiteral",
													"src": "8501:3:12",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "8472:3:12",
												"nodeType": "YulIdentifier",
												"src": "8472:3:12"
											},
											"nativeSrc": "8472:33:12",
											"nodeType": "YulFunctionCall",
											"src": "8472:33:12"
										},
										"nativeSrc": "8469:53:12",
										"nodeType": "YulIf",
										"src": "8469:53:12"
									},
									{
										"nativeSrc": "8531:39:12",
										"nodeType": "YulAssignment",
										"src": "8531:39:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "8560:9:12",
													"nodeType": "YulIdentifier",
													"src": "8560:9:12"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "8541:18:12",
												"nodeType": "YulIdentifier",
												"src": "8541:18:12"
											},
											"nativeSrc": "8541:29:12",
											"nodeType": "YulFunctionCall",
											"src": "8541:29:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "8531:6:12",
												"nodeType": "YulIdentifier",
												"src": "8531:6:12"
											}
										]
									},
									{
										"nativeSrc": "8579:48:12",
										"nodeType": "YulAssignment",
										"src": "8579:48:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "8612:9:12",
															"nodeType": "YulIdentifier",
															"src": "8612:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "8623:2:12",
															"nodeType": "YulLiteral",
															"src": "8623:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "8608:3:12",
														"nodeType": "YulIdentifier",
														"src": "8608:3:12"
													},
													"nativeSrc": "8608:18:12",
													"nodeType": "YulFunctionCall",
													"src": "8608:18:12"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "8589:18:12",
												"nodeType": "YulIdentifier",
												"src": "8589:18:12"
											},
											"nativeSrc": "8589:38:12",
											"nodeType": "YulFunctionCall",
											"src": "8589:38:12"
										},
										"variableNames": [
											{
												"name": "value1",
												"nativeSrc": "8579:6:12",
												"nodeType": "YulIdentifier",
												"src": "8579:6:12"
											}
										]
									},
									{
										"nativeSrc": "8636:42:12",
										"nodeType": "YulAssignment",
										"src": "8636:42:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "8663:9:12",
															"nodeType": "YulIdentifier",
															"src": "8663:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "8674:2:12",
															"nodeType": "YulLiteral",
															"src": "8674:2:12",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "8659:3:12",
														"nodeType": "YulIdentifier",
														"src": "8659:3:12"
													},
													"nativeSrc": "8659:18:12",
													"nodeType": "YulFunctionCall",
													"src": "8659:18:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "8646:12:12",
												"nodeType": "YulIdentifier",
												"src": "8646:12:12"
											},
											"nativeSrc": "8646:32:12",
											"nodeType": "YulFunctionCall",
											"src": "8646:32:12"
										},
										"variableNames": [
											{
												"name": "value2",
												"nativeSrc": "8636:6:12",
												"nodeType": "YulIdentifier",
												"src": "8636:6:12"
											}
										]
									},
									{
										"nativeSrc": "8687:46:12",
										"nodeType": "YulVariableDeclaration",
										"src": "8687:46:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "8718:9:12",
															"nodeType": "YulIdentifier",
															"src": "8718:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "8729:2:12",
															"nodeType": "YulLiteral",
															"src": "8729:2:12",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "8714:3:12",
														"nodeType": "YulIdentifier",
														"src": "8714:3:12"
													},
													"nativeSrc": "8714:18:12",
													"nodeType": "YulFunctionCall",
													"src": "8714:18:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "8701:12:12",
												"nodeType": "YulIdentifier",
												"src": "8701:12:12"
											},
											"nativeSrc": "8701:32:12",
											"nodeType": "YulFunctionCall",
											"src": "8701:32:12"
										},
										"variables": [
											{
												"name": "offset",
												"nativeSrc": "8691:6:12",
												"nodeType": "YulTypedName",
												"src": "8691:6:12",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "8742:28:12",
										"nodeType": "YulVariableDeclaration",
										"src": "8742:28:12",
										"value": {
											"kind": "number",
											"nativeSrc": "8752:18:12",
											"nodeType": "YulLiteral",
											"src": "8752:18:12",
											"type": "",
											"value": "0xffffffffffffffff"
										},
										"variables": [
											{
												"name": "_1",
												"nativeSrc": "8746:2:12",
												"nodeType": "YulTypedName",
												"src": "8746:2:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "8797:16:12",
											"nodeType": "YulBlock",
											"src": "8797:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "8806:1:12",
																"nodeType": "YulLiteral",
																"src": "8806:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "8809:1:12",
																"nodeType": "YulLiteral",
																"src": "8809:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "8799:6:12",
															"nodeType": "YulIdentifier",
															"src": "8799:6:12"
														},
														"nativeSrc": "8799:12:12",
														"nodeType": "YulFunctionCall",
														"src": "8799:12:12"
													},
													"nativeSrc": "8799:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "8799:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "8785:6:12",
													"nodeType": "YulIdentifier",
													"src": "8785:6:12"
												},
												{
													"name": "_1",
													"nativeSrc": "8793:2:12",
													"nodeType": "YulIdentifier",
													"src": "8793:2:12"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "8782:2:12",
												"nodeType": "YulIdentifier",
												"src": "8782:2:12"
											},
											"nativeSrc": "8782:14:12",
											"nodeType": "YulFunctionCall",
											"src": "8782:14:12"
										},
										"nativeSrc": "8779:34:12",
										"nodeType": "YulIf",
										"src": "8779:34:12"
									},
									{
										"nativeSrc": "8822:32:12",
										"nodeType": "YulVariableDeclaration",
										"src": "8822:32:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "8836:9:12",
													"nodeType": "YulIdentifier",
													"src": "8836:9:12"
												},
												{
													"name": "offset",
													"nativeSrc": "8847:6:12",
													"nodeType": "YulIdentifier",
													"src": "8847:6:12"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "8832:3:12",
												"nodeType": "YulIdentifier",
												"src": "8832:3:12"
											},
											"nativeSrc": "8832:22:12",
											"nodeType": "YulFunctionCall",
											"src": "8832:22:12"
										},
										"variables": [
											{
												"name": "_2",
												"nativeSrc": "8826:2:12",
												"nodeType": "YulTypedName",
												"src": "8826:2:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "8902:16:12",
											"nodeType": "YulBlock",
											"src": "8902:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "8911:1:12",
																"nodeType": "YulLiteral",
																"src": "8911:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "8914:1:12",
																"nodeType": "YulLiteral",
																"src": "8914:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "8904:6:12",
															"nodeType": "YulIdentifier",
															"src": "8904:6:12"
														},
														"nativeSrc": "8904:12:12",
														"nodeType": "YulFunctionCall",
														"src": "8904:12:12"
													},
													"nativeSrc": "8904:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "8904:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "_2",
																	"nativeSrc": "8881:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8881:2:12"
																},
																{
																	"kind": "number",
																	"nativeSrc": "8885:4:12",
																	"nodeType": "YulLiteral",
																	"src": "8885:4:12",
																	"type": "",
																	"value": "0x1f"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "8877:3:12",
																"nodeType": "YulIdentifier",
																"src": "8877:3:12"
															},
															"nativeSrc": "8877:13:12",
															"nodeType": "YulFunctionCall",
															"src": "8877:13:12"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "8892:7:12",
															"nodeType": "YulIdentifier",
															"src": "8892:7:12"
														}
													],
													"functionName": {
														"name": "slt",
														"nativeSrc": "8873:3:12",
														"nodeType": "YulIdentifier",
														"src": "8873:3:12"
													},
													"nativeSrc": "8873:27:12",
													"nodeType": "YulFunctionCall",
													"src": "8873:27:12"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "8866:6:12",
												"nodeType": "YulIdentifier",
												"src": "8866:6:12"
											},
											"nativeSrc": "8866:35:12",
											"nodeType": "YulFunctionCall",
											"src": "8866:35:12"
										},
										"nativeSrc": "8863:55:12",
										"nodeType": "YulIf",
										"src": "8863:55:12"
									},
									{
										"nativeSrc": "8927:26:12",
										"nodeType": "YulVariableDeclaration",
										"src": "8927:26:12",
										"value": {
											"arguments": [
												{
													"name": "_2",
													"nativeSrc": "8950:2:12",
													"nodeType": "YulIdentifier",
													"src": "8950:2:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "8937:12:12",
												"nodeType": "YulIdentifier",
												"src": "8937:12:12"
											},
											"nativeSrc": "8937:16:12",
											"nodeType": "YulFunctionCall",
											"src": "8937:16:12"
										},
										"variables": [
											{
												"name": "_3",
												"nativeSrc": "8931:2:12",
												"nodeType": "YulTypedName",
												"src": "8931:2:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "8976:22:12",
											"nodeType": "YulBlock",
											"src": "8976:22:12",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x41",
															"nativeSrc": "8978:16:12",
															"nodeType": "YulIdentifier",
															"src": "8978:16:12"
														},
														"nativeSrc": "8978:18:12",
														"nodeType": "YulFunctionCall",
														"src": "8978:18:12"
													},
													"nativeSrc": "8978:18:12",
													"nodeType": "YulExpressionStatement",
													"src": "8978:18:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "_3",
													"nativeSrc": "8968:2:12",
													"nodeType": "YulIdentifier",
													"src": "8968:2:12"
												},
												{
													"name": "_1",
													"nativeSrc": "8972:2:12",
													"nodeType": "YulIdentifier",
													"src": "8972:2:12"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "8965:2:12",
												"nodeType": "YulIdentifier",
												"src": "8965:2:12"
											},
											"nativeSrc": "8965:10:12",
											"nodeType": "YulFunctionCall",
											"src": "8965:10:12"
										},
										"nativeSrc": "8962:36:12",
										"nodeType": "YulIf",
										"src": "8962:36:12"
									},
									{
										"nativeSrc": "9007:17:12",
										"nodeType": "YulVariableDeclaration",
										"src": "9007:17:12",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "9021:2:12",
													"nodeType": "YulLiteral",
													"src": "9021:2:12",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "not",
												"nativeSrc": "9017:3:12",
												"nodeType": "YulIdentifier",
												"src": "9017:3:12"
											},
											"nativeSrc": "9017:7:12",
											"nodeType": "YulFunctionCall",
											"src": "9017:7:12"
										},
										"variables": [
											{
												"name": "_4",
												"nativeSrc": "9011:2:12",
												"nodeType": "YulTypedName",
												"src": "9011:2:12",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "9033:23:12",
										"nodeType": "YulVariableDeclaration",
										"src": "9033:23:12",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "9053:2:12",
													"nodeType": "YulLiteral",
													"src": "9053:2:12",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "9047:5:12",
												"nodeType": "YulIdentifier",
												"src": "9047:5:12"
											},
											"nativeSrc": "9047:9:12",
											"nodeType": "YulFunctionCall",
											"src": "9047:9:12"
										},
										"variables": [
											{
												"name": "memPtr",
												"nativeSrc": "9037:6:12",
												"nodeType": "YulTypedName",
												"src": "9037:6:12",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "9065:71:12",
										"nodeType": "YulVariableDeclaration",
										"src": "9065:71:12",
										"value": {
											"arguments": [
												{
													"name": "memPtr",
													"nativeSrc": "9087:6:12",
													"nodeType": "YulIdentifier",
													"src": "9087:6:12"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"name": "_3",
																					"nativeSrc": "9111:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "9111:2:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9115:4:12",
																					"nodeType": "YulLiteral",
																					"src": "9115:4:12",
																					"type": "",
																					"value": "0x1f"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9107:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9107:3:12"
																			},
																			"nativeSrc": "9107:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9107:13:12"
																		},
																		{
																			"name": "_4",
																			"nativeSrc": "9122:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9122:2:12"
																		}
																	],
																	"functionName": {
																		"name": "and",
																		"nativeSrc": "9103:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9103:3:12"
																	},
																	"nativeSrc": "9103:22:12",
																	"nodeType": "YulFunctionCall",
																	"src": "9103:22:12"
																},
																{
																	"kind": "number",
																	"nativeSrc": "9127:2:12",
																	"nodeType": "YulLiteral",
																	"src": "9127:2:12",
																	"type": "",
																	"value": "63"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "9099:3:12",
																"nodeType": "YulIdentifier",
																"src": "9099:3:12"
															},
															"nativeSrc": "9099:31:12",
															"nodeType": "YulFunctionCall",
															"src": "9099:31:12"
														},
														{
															"name": "_4",
															"nativeSrc": "9132:2:12",
															"nodeType": "YulIdentifier",
															"src": "9132:2:12"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "9095:3:12",
														"nodeType": "YulIdentifier",
														"src": "9095:3:12"
													},
													"nativeSrc": "9095:40:12",
													"nodeType": "YulFunctionCall",
													"src": "9095:40:12"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9083:3:12",
												"nodeType": "YulIdentifier",
												"src": "9083:3:12"
											},
											"nativeSrc": "9083:53:12",
											"nodeType": "YulFunctionCall",
											"src": "9083:53:12"
										},
										"variables": [
											{
												"name": "newFreePtr",
												"nativeSrc": "9069:10:12",
												"nodeType": "YulTypedName",
												"src": "9069:10:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "9195:22:12",
											"nodeType": "YulBlock",
											"src": "9195:22:12",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x41",
															"nativeSrc": "9197:16:12",
															"nodeType": "YulIdentifier",
															"src": "9197:16:12"
														},
														"nativeSrc": "9197:18:12",
														"nodeType": "YulFunctionCall",
														"src": "9197:18:12"
													},
													"nativeSrc": "9197:18:12",
													"nodeType": "YulExpressionStatement",
													"src": "9197:18:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "newFreePtr",
															"nativeSrc": "9154:10:12",
															"nodeType": "YulIdentifier",
															"src": "9154:10:12"
														},
														{
															"name": "_1",
															"nativeSrc": "9166:2:12",
															"nodeType": "YulIdentifier",
															"src": "9166:2:12"
														}
													],
													"functionName": {
														"name": "gt",
														"nativeSrc": "9151:2:12",
														"nodeType": "YulIdentifier",
														"src": "9151:2:12"
													},
													"nativeSrc": "9151:18:12",
													"nodeType": "YulFunctionCall",
													"src": "9151:18:12"
												},
												{
													"arguments": [
														{
															"name": "newFreePtr",
															"nativeSrc": "9174:10:12",
															"nodeType": "YulIdentifier",
															"src": "9174:10:12"
														},
														{
															"name": "memPtr",
															"nativeSrc": "9186:6:12",
															"nodeType": "YulIdentifier",
															"src": "9186:6:12"
														}
													],
													"functionName": {
														"name": "lt",
														"nativeSrc": "9171:2:12",
														"nodeType": "YulIdentifier",
														"src": "9171:2:12"
													},
													"nativeSrc": "9171:22:12",
													"nodeType": "YulFunctionCall",
													"src": "9171:22:12"
												}
											],
											"functionName": {
												"name": "or",
												"nativeSrc": "9148:2:12",
												"nodeType": "YulIdentifier",
												"src": "9148:2:12"
											},
											"nativeSrc": "9148:46:12",
											"nodeType": "YulFunctionCall",
											"src": "9148:46:12"
										},
										"nativeSrc": "9145:72:12",
										"nodeType": "YulIf",
										"src": "9145:72:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "9233:2:12",
													"nodeType": "YulLiteral",
													"src": "9233:2:12",
													"type": "",
													"value": "64"
												},
												{
													"name": "newFreePtr",
													"nativeSrc": "9237:10:12",
													"nodeType": "YulIdentifier",
													"src": "9237:10:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "9226:6:12",
												"nodeType": "YulIdentifier",
												"src": "9226:6:12"
											},
											"nativeSrc": "9226:22:12",
											"nodeType": "YulFunctionCall",
											"src": "9226:22:12"
										},
										"nativeSrc": "9226:22:12",
										"nodeType": "YulExpressionStatement",
										"src": "9226:22:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "memPtr",
													"nativeSrc": "9264:6:12",
													"nodeType": "YulIdentifier",
													"src": "9264:6:12"
												},
												{
													"name": "_3",
													"nativeSrc": "9272:2:12",
													"nodeType": "YulIdentifier",
													"src": "9272:2:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "9257:6:12",
												"nodeType": "YulIdentifier",
												"src": "9257:6:12"
											},
											"nativeSrc": "9257:18:12",
											"nodeType": "YulFunctionCall",
											"src": "9257:18:12"
										},
										"nativeSrc": "9257:18:12",
										"nodeType": "YulExpressionStatement",
										"src": "9257:18:12"
									},
									{
										"body": {
											"nativeSrc": "9321:16:12",
											"nodeType": "YulBlock",
											"src": "9321:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "9330:1:12",
																"nodeType": "YulLiteral",
																"src": "9330:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "9333:1:12",
																"nodeType": "YulLiteral",
																"src": "9333:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "9323:6:12",
															"nodeType": "YulIdentifier",
															"src": "9323:6:12"
														},
														"nativeSrc": "9323:12:12",
														"nodeType": "YulFunctionCall",
														"src": "9323:12:12"
													},
													"nativeSrc": "9323:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "9323:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "_2",
																	"nativeSrc": "9298:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9298:2:12"
																},
																{
																	"name": "_3",
																	"nativeSrc": "9302:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9302:2:12"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "9294:3:12",
																"nodeType": "YulIdentifier",
																"src": "9294:3:12"
															},
															"nativeSrc": "9294:11:12",
															"nodeType": "YulFunctionCall",
															"src": "9294:11:12"
														},
														{
															"kind": "number",
															"nativeSrc": "9307:2:12",
															"nodeType": "YulLiteral",
															"src": "9307:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9290:3:12",
														"nodeType": "YulIdentifier",
														"src": "9290:3:12"
													},
													"nativeSrc": "9290:20:12",
													"nodeType": "YulFunctionCall",
													"src": "9290:20:12"
												},
												{
													"name": "dataEnd",
													"nativeSrc": "9312:7:12",
													"nodeType": "YulIdentifier",
													"src": "9312:7:12"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "9287:2:12",
												"nodeType": "YulIdentifier",
												"src": "9287:2:12"
											},
											"nativeSrc": "9287:33:12",
											"nodeType": "YulFunctionCall",
											"src": "9287:33:12"
										},
										"nativeSrc": "9284:53:12",
										"nodeType": "YulIf",
										"src": "9284:53:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "9363:6:12",
															"nodeType": "YulIdentifier",
															"src": "9363:6:12"
														},
														{
															"kind": "number",
															"nativeSrc": "9371:2:12",
															"nodeType": "YulLiteral",
															"src": "9371:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9359:3:12",
														"nodeType": "YulIdentifier",
														"src": "9359:3:12"
													},
													"nativeSrc": "9359:15:12",
													"nodeType": "YulFunctionCall",
													"src": "9359:15:12"
												},
												{
													"arguments": [
														{
															"name": "_2",
															"nativeSrc": "9380:2:12",
															"nodeType": "YulIdentifier",
															"src": "9380:2:12"
														},
														{
															"kind": "number",
															"nativeSrc": "9384:2:12",
															"nodeType": "YulLiteral",
															"src": "9384:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9376:3:12",
														"nodeType": "YulIdentifier",
														"src": "9376:3:12"
													},
													"nativeSrc": "9376:11:12",
													"nodeType": "YulFunctionCall",
													"src": "9376:11:12"
												},
												{
													"name": "_3",
													"nativeSrc": "9389:2:12",
													"nodeType": "YulIdentifier",
													"src": "9389:2:12"
												}
											],
											"functionName": {
												"name": "calldatacopy",
												"nativeSrc": "9346:12:12",
												"nodeType": "YulIdentifier",
												"src": "9346:12:12"
											},
											"nativeSrc": "9346:46:12",
											"nodeType": "YulFunctionCall",
											"src": "9346:46:12"
										},
										"nativeSrc": "9346:46:12",
										"nodeType": "YulExpressionStatement",
										"src": "9346:46:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "memPtr",
																	"nativeSrc": "9416:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9416:6:12"
																},
																{
																	"name": "_3",
																	"nativeSrc": "9424:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9424:2:12"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "9412:3:12",
																"nodeType": "YulIdentifier",
																"src": "9412:3:12"
															},
															"nativeSrc": "9412:15:12",
															"nodeType": "YulFunctionCall",
															"src": "9412:15:12"
														},
														{
															"kind": "number",
															"nativeSrc": "9429:2:12",
															"nodeType": "YulLiteral",
															"src": "9429:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9408:3:12",
														"nodeType": "YulIdentifier",
														"src": "9408:3:12"
													},
													"nativeSrc": "9408:24:12",
													"nodeType": "YulFunctionCall",
													"src": "9408:24:12"
												},
												{
													"kind": "number",
													"nativeSrc": "9434:1:12",
													"nodeType": "YulLiteral",
													"src": "9434:1:12",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "9401:6:12",
												"nodeType": "YulIdentifier",
												"src": "9401:6:12"
											},
											"nativeSrc": "9401:35:12",
											"nodeType": "YulFunctionCall",
											"src": "9401:35:12"
										},
										"nativeSrc": "9401:35:12",
										"nodeType": "YulExpressionStatement",
										"src": "9401:35:12"
									},
									{
										"nativeSrc": "9445:16:12",
										"nodeType": "YulAssignment",
										"src": "9445:16:12",
										"value": {
											"name": "memPtr",
											"nativeSrc": "9455:6:12",
											"nodeType": "YulIdentifier",
											"src": "9455:6:12"
										},
										"variableNames": [
											{
												"name": "value3",
												"nativeSrc": "9445:6:12",
												"nodeType": "YulIdentifier",
												"src": "9445:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
							"nativeSrc": "8329:1138:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "8401:9:12",
									"nodeType": "YulTypedName",
									"src": "8401:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "8412:7:12",
									"nodeType": "YulTypedName",
									"src": "8412:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "8424:6:12",
									"nodeType": "YulTypedName",
									"src": "8424:6:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "8432:6:12",
									"nodeType": "YulTypedName",
									"src": "8432:6:12",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "8440:6:12",
									"nodeType": "YulTypedName",
									"src": "8440:6:12",
									"type": ""
								},
								{
									"name": "value3",
									"nativeSrc": "8448:6:12",
									"nodeType": "YulTypedName",
									"src": "8448:6:12",
									"type": ""
								}
							],
							"src": "8329:1138:12"
						},
						{
							"body": {
								"nativeSrc": "9637:103:12",
								"nodeType": "YulBlock",
								"src": "9637:103:12",
								"statements": [
									{
										"nativeSrc": "9647:27:12",
										"nodeType": "YulAssignment",
										"src": "9647:27:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "9659:9:12",
													"nodeType": "YulIdentifier",
													"src": "9659:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "9670:3:12",
													"nodeType": "YulLiteral",
													"src": "9670:3:12",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9655:3:12",
												"nodeType": "YulIdentifier",
												"src": "9655:3:12"
											},
											"nativeSrc": "9655:19:12",
											"nodeType": "YulFunctionCall",
											"src": "9655:19:12"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "9647:4:12",
												"nodeType": "YulIdentifier",
												"src": "9647:4:12"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "9716:6:12",
													"nodeType": "YulIdentifier",
													"src": "9716:6:12"
												},
												{
													"name": "headStart",
													"nativeSrc": "9724:9:12",
													"nodeType": "YulIdentifier",
													"src": "9724:9:12"
												}
											],
											"functionName": {
												"name": "abi_encode_struct_TokenOwnership",
												"nativeSrc": "9683:32:12",
												"nodeType": "YulIdentifier",
												"src": "9683:32:12"
											},
											"nativeSrc": "9683:51:12",
											"nodeType": "YulFunctionCall",
											"src": "9683:51:12"
										},
										"nativeSrc": "9683:51:12",
										"nodeType": "YulExpressionStatement",
										"src": "9683:51:12"
									}
								]
							},
							"name": "abi_encode_tuple_t_struct$_TokenOwnership_$3771_memory_ptr__to_t_struct$_TokenOwnership_$3771_memory_ptr__fromStack_reversed",
							"nativeSrc": "9472:268:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "9606:9:12",
									"nodeType": "YulTypedName",
									"src": "9606:9:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "9617:6:12",
									"nodeType": "YulTypedName",
									"src": "9617:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "9628:4:12",
									"nodeType": "YulTypedName",
									"src": "9628:4:12",
									"type": ""
								}
							],
							"src": "9472:268:12"
						},
						{
							"body": {
								"nativeSrc": "9815:110:12",
								"nodeType": "YulBlock",
								"src": "9815:110:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "9861:16:12",
											"nodeType": "YulBlock",
											"src": "9861:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "9870:1:12",
																"nodeType": "YulLiteral",
																"src": "9870:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "9873:1:12",
																"nodeType": "YulLiteral",
																"src": "9873:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "9863:6:12",
															"nodeType": "YulIdentifier",
															"src": "9863:6:12"
														},
														"nativeSrc": "9863:12:12",
														"nodeType": "YulFunctionCall",
														"src": "9863:12:12"
													},
													"nativeSrc": "9863:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "9863:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "9836:7:12",
															"nodeType": "YulIdentifier",
															"src": "9836:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "9845:9:12",
															"nodeType": "YulIdentifier",
															"src": "9845:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "9832:3:12",
														"nodeType": "YulIdentifier",
														"src": "9832:3:12"
													},
													"nativeSrc": "9832:23:12",
													"nodeType": "YulFunctionCall",
													"src": "9832:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "9857:2:12",
													"nodeType": "YulLiteral",
													"src": "9857:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "9828:3:12",
												"nodeType": "YulIdentifier",
												"src": "9828:3:12"
											},
											"nativeSrc": "9828:32:12",
											"nodeType": "YulFunctionCall",
											"src": "9828:32:12"
										},
										"nativeSrc": "9825:52:12",
										"nodeType": "YulIf",
										"src": "9825:52:12"
									},
									{
										"nativeSrc": "9886:33:12",
										"nodeType": "YulAssignment",
										"src": "9886:33:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "9909:9:12",
													"nodeType": "YulIdentifier",
													"src": "9909:9:12"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "9896:12:12",
												"nodeType": "YulIdentifier",
												"src": "9896:12:12"
											},
											"nativeSrc": "9896:23:12",
											"nodeType": "YulFunctionCall",
											"src": "9896:23:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "9886:6:12",
												"nodeType": "YulIdentifier",
												"src": "9886:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_bytes32",
							"nativeSrc": "9745:180:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "9781:9:12",
									"nodeType": "YulTypedName",
									"src": "9781:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "9792:7:12",
									"nodeType": "YulTypedName",
									"src": "9792:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "9804:6:12",
									"nodeType": "YulTypedName",
									"src": "9804:6:12",
									"type": ""
								}
							],
							"src": "9745:180:12"
						},
						{
							"body": {
								"nativeSrc": "10017:173:12",
								"nodeType": "YulBlock",
								"src": "10017:173:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "10063:16:12",
											"nodeType": "YulBlock",
											"src": "10063:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "10072:1:12",
																"nodeType": "YulLiteral",
																"src": "10072:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "10075:1:12",
																"nodeType": "YulLiteral",
																"src": "10075:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "10065:6:12",
															"nodeType": "YulIdentifier",
															"src": "10065:6:12"
														},
														"nativeSrc": "10065:12:12",
														"nodeType": "YulFunctionCall",
														"src": "10065:12:12"
													},
													"nativeSrc": "10065:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "10065:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "10038:7:12",
															"nodeType": "YulIdentifier",
															"src": "10038:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "10047:9:12",
															"nodeType": "YulIdentifier",
															"src": "10047:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "10034:3:12",
														"nodeType": "YulIdentifier",
														"src": "10034:3:12"
													},
													"nativeSrc": "10034:23:12",
													"nodeType": "YulFunctionCall",
													"src": "10034:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "10059:2:12",
													"nodeType": "YulLiteral",
													"src": "10059:2:12",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "10030:3:12",
												"nodeType": "YulIdentifier",
												"src": "10030:3:12"
											},
											"nativeSrc": "10030:32:12",
											"nodeType": "YulFunctionCall",
											"src": "10030:32:12"
										},
										"nativeSrc": "10027:52:12",
										"nodeType": "YulIf",
										"src": "10027:52:12"
									},
									{
										"nativeSrc": "10088:39:12",
										"nodeType": "YulAssignment",
										"src": "10088:39:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "10117:9:12",
													"nodeType": "YulIdentifier",
													"src": "10117:9:12"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "10098:18:12",
												"nodeType": "YulIdentifier",
												"src": "10098:18:12"
											},
											"nativeSrc": "10098:29:12",
											"nodeType": "YulFunctionCall",
											"src": "10098:29:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "10088:6:12",
												"nodeType": "YulIdentifier",
												"src": "10088:6:12"
											}
										]
									},
									{
										"nativeSrc": "10136:48:12",
										"nodeType": "YulAssignment",
										"src": "10136:48:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "10169:9:12",
															"nodeType": "YulIdentifier",
															"src": "10169:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "10180:2:12",
															"nodeType": "YulLiteral",
															"src": "10180:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "10165:3:12",
														"nodeType": "YulIdentifier",
														"src": "10165:3:12"
													},
													"nativeSrc": "10165:18:12",
													"nodeType": "YulFunctionCall",
													"src": "10165:18:12"
												}
											],
											"functionName": {
												"name": "abi_decode_address",
												"nativeSrc": "10146:18:12",
												"nodeType": "YulIdentifier",
												"src": "10146:18:12"
											},
											"nativeSrc": "10146:38:12",
											"nodeType": "YulFunctionCall",
											"src": "10146:38:12"
										},
										"variableNames": [
											{
												"name": "value1",
												"nativeSrc": "10136:6:12",
												"nodeType": "YulIdentifier",
												"src": "10136:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_address",
							"nativeSrc": "9930:260:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "9975:9:12",
									"nodeType": "YulTypedName",
									"src": "9975:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "9986:7:12",
									"nodeType": "YulTypedName",
									"src": "9986:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "9998:6:12",
									"nodeType": "YulTypedName",
									"src": "9998:6:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "10006:6:12",
									"nodeType": "YulTypedName",
									"src": "10006:6:12",
									"type": ""
								}
							],
							"src": "9930:260:12"
						},
						{
							"body": {
								"nativeSrc": "10296:76:12",
								"nodeType": "YulBlock",
								"src": "10296:76:12",
								"statements": [
									{
										"nativeSrc": "10306:26:12",
										"nodeType": "YulAssignment",
										"src": "10306:26:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "10318:9:12",
													"nodeType": "YulIdentifier",
													"src": "10318:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "10329:2:12",
													"nodeType": "YulLiteral",
													"src": "10329:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "10314:3:12",
												"nodeType": "YulIdentifier",
												"src": "10314:3:12"
											},
											"nativeSrc": "10314:18:12",
											"nodeType": "YulFunctionCall",
											"src": "10314:18:12"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "10306:4:12",
												"nodeType": "YulIdentifier",
												"src": "10306:4:12"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "10348:9:12",
													"nodeType": "YulIdentifier",
													"src": "10348:9:12"
												},
												{
													"name": "value0",
													"nativeSrc": "10359:6:12",
													"nodeType": "YulIdentifier",
													"src": "10359:6:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "10341:6:12",
												"nodeType": "YulIdentifier",
												"src": "10341:6:12"
											},
											"nativeSrc": "10341:25:12",
											"nodeType": "YulFunctionCall",
											"src": "10341:25:12"
										},
										"nativeSrc": "10341:25:12",
										"nodeType": "YulExpressionStatement",
										"src": "10341:25:12"
									}
								]
							},
							"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
							"nativeSrc": "10195:177:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "10265:9:12",
									"nodeType": "YulTypedName",
									"src": "10265:9:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "10276:6:12",
									"nodeType": "YulTypedName",
									"src": "10276:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "10287:4:12",
									"nodeType": "YulTypedName",
									"src": "10287:4:12",
									"type": ""
								}
							],
							"src": "10195:177:12"
						},
						{
							"body": {
								"nativeSrc": "10409:95:12",
								"nodeType": "YulBlock",
								"src": "10409:95:12",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "10426:1:12",
													"nodeType": "YulLiteral",
													"src": "10426:1:12",
													"type": "",
													"value": "0"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "10433:3:12",
															"nodeType": "YulLiteral",
															"src": "10433:3:12",
															"type": "",
															"value": "224"
														},
														{
															"kind": "number",
															"nativeSrc": "10438:10:12",
															"nodeType": "YulLiteral",
															"src": "10438:10:12",
															"type": "",
															"value": "0x4e487b71"
														}
													],
													"functionName": {
														"name": "shl",
														"nativeSrc": "10429:3:12",
														"nodeType": "YulIdentifier",
														"src": "10429:3:12"
													},
													"nativeSrc": "10429:20:12",
													"nodeType": "YulFunctionCall",
													"src": "10429:20:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "10419:6:12",
												"nodeType": "YulIdentifier",
												"src": "10419:6:12"
											},
											"nativeSrc": "10419:31:12",
											"nodeType": "YulFunctionCall",
											"src": "10419:31:12"
										},
										"nativeSrc": "10419:31:12",
										"nodeType": "YulExpressionStatement",
										"src": "10419:31:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "10466:1:12",
													"nodeType": "YulLiteral",
													"src": "10466:1:12",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "10469:4:12",
													"nodeType": "YulLiteral",
													"src": "10469:4:12",
													"type": "",
													"value": "0x11"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "10459:6:12",
												"nodeType": "YulIdentifier",
												"src": "10459:6:12"
											},
											"nativeSrc": "10459:15:12",
											"nodeType": "YulFunctionCall",
											"src": "10459:15:12"
										},
										"nativeSrc": "10459:15:12",
										"nodeType": "YulExpressionStatement",
										"src": "10459:15:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "10490:1:12",
													"nodeType": "YulLiteral",
													"src": "10490:1:12",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "10493:4:12",
													"nodeType": "YulLiteral",
													"src": "10493:4:12",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "10483:6:12",
												"nodeType": "YulIdentifier",
												"src": "10483:6:12"
											},
											"nativeSrc": "10483:15:12",
											"nodeType": "YulFunctionCall",
											"src": "10483:15:12"
										},
										"nativeSrc": "10483:15:12",
										"nodeType": "YulExpressionStatement",
										"src": "10483:15:12"
									}
								]
							},
							"name": "panic_error_0x11",
							"nativeSrc": "10377:127:12",
							"nodeType": "YulFunctionDefinition",
							"src": "10377:127:12"
						},
						{
							"body": {
								"nativeSrc": "10557:77:12",
								"nodeType": "YulBlock",
								"src": "10557:77:12",
								"statements": [
									{
										"nativeSrc": "10567:16:12",
										"nodeType": "YulAssignment",
										"src": "10567:16:12",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "10578:1:12",
													"nodeType": "YulIdentifier",
													"src": "10578:1:12"
												},
												{
													"name": "y",
													"nativeSrc": "10581:1:12",
													"nodeType": "YulIdentifier",
													"src": "10581:1:12"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "10574:3:12",
												"nodeType": "YulIdentifier",
												"src": "10574:3:12"
											},
											"nativeSrc": "10574:9:12",
											"nodeType": "YulFunctionCall",
											"src": "10574:9:12"
										},
										"variableNames": [
											{
												"name": "sum",
												"nativeSrc": "10567:3:12",
												"nodeType": "YulIdentifier",
												"src": "10567:3:12"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "10606:22:12",
											"nodeType": "YulBlock",
											"src": "10606:22:12",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "10608:16:12",
															"nodeType": "YulIdentifier",
															"src": "10608:16:12"
														},
														"nativeSrc": "10608:18:12",
														"nodeType": "YulFunctionCall",
														"src": "10608:18:12"
													},
													"nativeSrc": "10608:18:12",
													"nodeType": "YulExpressionStatement",
													"src": "10608:18:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "10598:1:12",
													"nodeType": "YulIdentifier",
													"src": "10598:1:12"
												},
												{
													"name": "sum",
													"nativeSrc": "10601:3:12",
													"nodeType": "YulIdentifier",
													"src": "10601:3:12"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "10595:2:12",
												"nodeType": "YulIdentifier",
												"src": "10595:2:12"
											},
											"nativeSrc": "10595:10:12",
											"nodeType": "YulFunctionCall",
											"src": "10595:10:12"
										},
										"nativeSrc": "10592:36:12",
										"nodeType": "YulIf",
										"src": "10592:36:12"
									}
								]
							},
							"name": "checked_add_t_uint256",
							"nativeSrc": "10509:125:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "10540:1:12",
									"nodeType": "YulTypedName",
									"src": "10540:1:12",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "10543:1:12",
									"nodeType": "YulTypedName",
									"src": "10543:1:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "sum",
									"nativeSrc": "10549:3:12",
									"nodeType": "YulTypedName",
									"src": "10549:3:12",
									"type": ""
								}
							],
							"src": "10509:125:12"
						},
						{
							"body": {
								"nativeSrc": "10688:79:12",
								"nodeType": "YulBlock",
								"src": "10688:79:12",
								"statements": [
									{
										"nativeSrc": "10698:17:12",
										"nodeType": "YulAssignment",
										"src": "10698:17:12",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "10710:1:12",
													"nodeType": "YulIdentifier",
													"src": "10710:1:12"
												},
												{
													"name": "y",
													"nativeSrc": "10713:1:12",
													"nodeType": "YulIdentifier",
													"src": "10713:1:12"
												}
											],
											"functionName": {
												"name": "sub",
												"nativeSrc": "10706:3:12",
												"nodeType": "YulIdentifier",
												"src": "10706:3:12"
											},
											"nativeSrc": "10706:9:12",
											"nodeType": "YulFunctionCall",
											"src": "10706:9:12"
										},
										"variableNames": [
											{
												"name": "diff",
												"nativeSrc": "10698:4:12",
												"nodeType": "YulIdentifier",
												"src": "10698:4:12"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "10739:22:12",
											"nodeType": "YulBlock",
											"src": "10739:22:12",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "10741:16:12",
															"nodeType": "YulIdentifier",
															"src": "10741:16:12"
														},
														"nativeSrc": "10741:18:12",
														"nodeType": "YulFunctionCall",
														"src": "10741:18:12"
													},
													"nativeSrc": "10741:18:12",
													"nodeType": "YulExpressionStatement",
													"src": "10741:18:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "diff",
													"nativeSrc": "10730:4:12",
													"nodeType": "YulIdentifier",
													"src": "10730:4:12"
												},
												{
													"name": "x",
													"nativeSrc": "10736:1:12",
													"nodeType": "YulIdentifier",
													"src": "10736:1:12"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "10727:2:12",
												"nodeType": "YulIdentifier",
												"src": "10727:2:12"
											},
											"nativeSrc": "10727:11:12",
											"nodeType": "YulFunctionCall",
											"src": "10727:11:12"
										},
										"nativeSrc": "10724:37:12",
										"nodeType": "YulIf",
										"src": "10724:37:12"
									}
								]
							},
							"name": "checked_sub_t_uint256",
							"nativeSrc": "10639:128:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "10670:1:12",
									"nodeType": "YulTypedName",
									"src": "10670:1:12",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "10673:1:12",
									"nodeType": "YulTypedName",
									"src": "10673:1:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "diff",
									"nativeSrc": "10679:4:12",
									"nodeType": "YulTypedName",
									"src": "10679:4:12",
									"type": ""
								}
							],
							"src": "10639:128:12"
						},
						{
							"body": {
								"nativeSrc": "10827:325:12",
								"nodeType": "YulBlock",
								"src": "10827:325:12",
								"statements": [
									{
										"nativeSrc": "10837:22:12",
										"nodeType": "YulAssignment",
										"src": "10837:22:12",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "10851:1:12",
													"nodeType": "YulLiteral",
													"src": "10851:1:12",
													"type": "",
													"value": "1"
												},
												{
													"name": "data",
													"nativeSrc": "10854:4:12",
													"nodeType": "YulIdentifier",
													"src": "10854:4:12"
												}
											],
											"functionName": {
												"name": "shr",
												"nativeSrc": "10847:3:12",
												"nodeType": "YulIdentifier",
												"src": "10847:3:12"
											},
											"nativeSrc": "10847:12:12",
											"nodeType": "YulFunctionCall",
											"src": "10847:12:12"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "10837:6:12",
												"nodeType": "YulIdentifier",
												"src": "10837:6:12"
											}
										]
									},
									{
										"nativeSrc": "10868:38:12",
										"nodeType": "YulVariableDeclaration",
										"src": "10868:38:12",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "10898:4:12",
													"nodeType": "YulIdentifier",
													"src": "10898:4:12"
												},
												{
													"kind": "number",
													"nativeSrc": "10904:1:12",
													"nodeType": "YulLiteral",
													"src": "10904:1:12",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "10894:3:12",
												"nodeType": "YulIdentifier",
												"src": "10894:3:12"
											},
											"nativeSrc": "10894:12:12",
											"nodeType": "YulFunctionCall",
											"src": "10894:12:12"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nativeSrc": "10872:18:12",
												"nodeType": "YulTypedName",
												"src": "10872:18:12",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "10945:31:12",
											"nodeType": "YulBlock",
											"src": "10945:31:12",
											"statements": [
												{
													"nativeSrc": "10947:27:12",
													"nodeType": "YulAssignment",
													"src": "10947:27:12",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nativeSrc": "10961:6:12",
																"nodeType": "YulIdentifier",
																"src": "10961:6:12"
															},
															{
																"kind": "number",
																"nativeSrc": "10969:4:12",
																"nodeType": "YulLiteral",
																"src": "10969:4:12",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nativeSrc": "10957:3:12",
															"nodeType": "YulIdentifier",
															"src": "10957:3:12"
														},
														"nativeSrc": "10957:17:12",
														"nodeType": "YulFunctionCall",
														"src": "10957:17:12"
													},
													"variableNames": [
														{
															"name": "length",
															"nativeSrc": "10947:6:12",
															"nodeType": "YulIdentifier",
															"src": "10947:6:12"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "10925:18:12",
													"nodeType": "YulIdentifier",
													"src": "10925:18:12"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "10918:6:12",
												"nodeType": "YulIdentifier",
												"src": "10918:6:12"
											},
											"nativeSrc": "10918:26:12",
											"nodeType": "YulFunctionCall",
											"src": "10918:26:12"
										},
										"nativeSrc": "10915:61:12",
										"nodeType": "YulIf",
										"src": "10915:61:12"
									},
									{
										"body": {
											"nativeSrc": "11035:111:12",
											"nodeType": "YulBlock",
											"src": "11035:111:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "11056:1:12",
																"nodeType": "YulLiteral",
																"src": "11056:1:12",
																"type": "",
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11063:3:12",
																		"nodeType": "YulLiteral",
																		"src": "11063:3:12",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11068:10:12",
																		"nodeType": "YulLiteral",
																		"src": "11068:10:12",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "11059:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11059:3:12"
																},
																"nativeSrc": "11059:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11059:20:12"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "11049:6:12",
															"nodeType": "YulIdentifier",
															"src": "11049:6:12"
														},
														"nativeSrc": "11049:31:12",
														"nodeType": "YulFunctionCall",
														"src": "11049:31:12"
													},
													"nativeSrc": "11049:31:12",
													"nodeType": "YulExpressionStatement",
													"src": "11049:31:12"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "11100:1:12",
																"nodeType": "YulLiteral",
																"src": "11100:1:12",
																"type": "",
																"value": "4"
															},
															{
																"kind": "number",
																"nativeSrc": "11103:4:12",
																"nodeType": "YulLiteral",
																"src": "11103:4:12",
																"type": "",
																"value": "0x22"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "11093:6:12",
															"nodeType": "YulIdentifier",
															"src": "11093:6:12"
														},
														"nativeSrc": "11093:15:12",
														"nodeType": "YulFunctionCall",
														"src": "11093:15:12"
													},
													"nativeSrc": "11093:15:12",
													"nodeType": "YulExpressionStatement",
													"src": "11093:15:12"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "11128:1:12",
																"nodeType": "YulLiteral",
																"src": "11128:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "11131:4:12",
																"nodeType": "YulLiteral",
																"src": "11131:4:12",
																"type": "",
																"value": "0x24"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "11121:6:12",
															"nodeType": "YulIdentifier",
															"src": "11121:6:12"
														},
														"nativeSrc": "11121:15:12",
														"nodeType": "YulFunctionCall",
														"src": "11121:15:12"
													},
													"nativeSrc": "11121:15:12",
													"nodeType": "YulExpressionStatement",
													"src": "11121:15:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "10991:18:12",
													"nodeType": "YulIdentifier",
													"src": "10991:18:12"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nativeSrc": "11014:6:12",
															"nodeType": "YulIdentifier",
															"src": "11014:6:12"
														},
														{
															"kind": "number",
															"nativeSrc": "11022:2:12",
															"nodeType": "YulLiteral",
															"src": "11022:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nativeSrc": "11011:2:12",
														"nodeType": "YulIdentifier",
														"src": "11011:2:12"
													},
													"nativeSrc": "11011:14:12",
													"nodeType": "YulFunctionCall",
													"src": "11011:14:12"
												}
											],
											"functionName": {
												"name": "eq",
												"nativeSrc": "10988:2:12",
												"nodeType": "YulIdentifier",
												"src": "10988:2:12"
											},
											"nativeSrc": "10988:38:12",
											"nodeType": "YulFunctionCall",
											"src": "10988:38:12"
										},
										"nativeSrc": "10985:161:12",
										"nodeType": "YulIf",
										"src": "10985:161:12"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nativeSrc": "10772:380:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "10807:4:12",
									"nodeType": "YulTypedName",
									"src": "10807:4:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "10816:6:12",
									"nodeType": "YulTypedName",
									"src": "10816:6:12",
									"type": ""
								}
							],
							"src": "10772:380:12"
						},
						{
							"body": {
								"nativeSrc": "11213:65:12",
								"nodeType": "YulBlock",
								"src": "11213:65:12",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "11230:1:12",
													"nodeType": "YulLiteral",
													"src": "11230:1:12",
													"type": "",
													"value": "0"
												},
												{
													"name": "ptr",
													"nativeSrc": "11233:3:12",
													"nodeType": "YulIdentifier",
													"src": "11233:3:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "11223:6:12",
												"nodeType": "YulIdentifier",
												"src": "11223:6:12"
											},
											"nativeSrc": "11223:14:12",
											"nodeType": "YulFunctionCall",
											"src": "11223:14:12"
										},
										"nativeSrc": "11223:14:12",
										"nodeType": "YulExpressionStatement",
										"src": "11223:14:12"
									},
									{
										"nativeSrc": "11246:26:12",
										"nodeType": "YulAssignment",
										"src": "11246:26:12",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "11264:1:12",
													"nodeType": "YulLiteral",
													"src": "11264:1:12",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "11267:4:12",
													"nodeType": "YulLiteral",
													"src": "11267:4:12",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "keccak256",
												"nativeSrc": "11254:9:12",
												"nodeType": "YulIdentifier",
												"src": "11254:9:12"
											},
											"nativeSrc": "11254:18:12",
											"nodeType": "YulFunctionCall",
											"src": "11254:18:12"
										},
										"variableNames": [
											{
												"name": "data",
												"nativeSrc": "11246:4:12",
												"nodeType": "YulIdentifier",
												"src": "11246:4:12"
											}
										]
									}
								]
							},
							"name": "array_dataslot_string_storage",
							"nativeSrc": "11157:121:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "ptr",
									"nativeSrc": "11196:3:12",
									"nodeType": "YulTypedName",
									"src": "11196:3:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "data",
									"nativeSrc": "11204:4:12",
									"nodeType": "YulTypedName",
									"src": "11204:4:12",
									"type": ""
								}
							],
							"src": "11157:121:12"
						},
						{
							"body": {
								"nativeSrc": "11364:437:12",
								"nodeType": "YulBlock",
								"src": "11364:437:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "11397:398:12",
											"nodeType": "YulBlock",
											"src": "11397:398:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "11418:1:12",
																"nodeType": "YulLiteral",
																"src": "11418:1:12",
																"type": "",
																"value": "0"
															},
															{
																"name": "array",
																"nativeSrc": "11421:5:12",
																"nodeType": "YulIdentifier",
																"src": "11421:5:12"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "11411:6:12",
															"nodeType": "YulIdentifier",
															"src": "11411:6:12"
														},
														"nativeSrc": "11411:16:12",
														"nodeType": "YulFunctionCall",
														"src": "11411:16:12"
													},
													"nativeSrc": "11411:16:12",
													"nodeType": "YulExpressionStatement",
													"src": "11411:16:12"
												},
												{
													"nativeSrc": "11440:30:12",
													"nodeType": "YulVariableDeclaration",
													"src": "11440:30:12",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "11462:1:12",
																"nodeType": "YulLiteral",
																"src": "11462:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "11465:4:12",
																"nodeType": "YulLiteral",
																"src": "11465:4:12",
																"type": "",
																"value": "0x20"
															}
														],
														"functionName": {
															"name": "keccak256",
															"nativeSrc": "11452:9:12",
															"nodeType": "YulIdentifier",
															"src": "11452:9:12"
														},
														"nativeSrc": "11452:18:12",
														"nodeType": "YulFunctionCall",
														"src": "11452:18:12"
													},
													"variables": [
														{
															"name": "data",
															"nativeSrc": "11444:4:12",
															"nodeType": "YulTypedName",
															"src": "11444:4:12",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "11483:57:12",
													"nodeType": "YulVariableDeclaration",
													"src": "11483:57:12",
													"value": {
														"arguments": [
															{
																"name": "data",
																"nativeSrc": "11506:4:12",
																"nodeType": "YulIdentifier",
																"src": "11506:4:12"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11516:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11516:1:12",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "startIndex",
																				"nativeSrc": "11523:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "11523:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11535:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11535:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11519:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11519:3:12"
																		},
																		"nativeSrc": "11519:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11519:19:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "11512:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11512:3:12"
																},
																"nativeSrc": "11512:27:12",
																"nodeType": "YulFunctionCall",
																"src": "11512:27:12"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "11502:3:12",
															"nodeType": "YulIdentifier",
															"src": "11502:3:12"
														},
														"nativeSrc": "11502:38:12",
														"nodeType": "YulFunctionCall",
														"src": "11502:38:12"
													},
													"variables": [
														{
															"name": "deleteStart",
															"nativeSrc": "11487:11:12",
															"nodeType": "YulTypedName",
															"src": "11487:11:12",
															"type": ""
														}
													]
												},
												{
													"body": {
														"nativeSrc": "11577:23:12",
														"nodeType": "YulBlock",
														"src": "11577:23:12",
														"statements": [
															{
																"nativeSrc": "11579:19:12",
																"nodeType": "YulAssignment",
																"src": "11579:19:12",
																"value": {
																	"name": "data",
																	"nativeSrc": "11594:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11594:4:12"
																},
																"variableNames": [
																	{
																		"name": "deleteStart",
																		"nativeSrc": "11579:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "11579:11:12"
																	}
																]
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "startIndex",
																"nativeSrc": "11559:10:12",
																"nodeType": "YulIdentifier",
																"src": "11559:10:12"
															},
															{
																"kind": "number",
																"nativeSrc": "11571:4:12",
																"nodeType": "YulLiteral",
																"src": "11571:4:12",
																"type": "",
																"value": "0x20"
															}
														],
														"functionName": {
															"name": "lt",
															"nativeSrc": "11556:2:12",
															"nodeType": "YulIdentifier",
															"src": "11556:2:12"
														},
														"nativeSrc": "11556:20:12",
														"nodeType": "YulFunctionCall",
														"src": "11556:20:12"
													},
													"nativeSrc": "11553:47:12",
													"nodeType": "YulIf",
													"src": "11553:47:12"
												},
												{
													"nativeSrc": "11613:41:12",
													"nodeType": "YulVariableDeclaration",
													"src": "11613:41:12",
													"value": {
														"arguments": [
															{
																"name": "data",
																"nativeSrc": "11627:4:12",
																"nodeType": "YulIdentifier",
																"src": "11627:4:12"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11637:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11637:1:12",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "len",
																				"nativeSrc": "11644:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "11644:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11649:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11649:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11640:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11640:3:12"
																		},
																		"nativeSrc": "11640:12:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11640:12:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "11633:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11633:3:12"
																},
																"nativeSrc": "11633:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11633:20:12"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "11623:3:12",
															"nodeType": "YulIdentifier",
															"src": "11623:3:12"
														},
														"nativeSrc": "11623:31:12",
														"nodeType": "YulFunctionCall",
														"src": "11623:31:12"
													},
													"variables": [
														{
															"name": "_1",
															"nativeSrc": "11617:2:12",
															"nodeType": "YulTypedName",
															"src": "11617:2:12",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "11667:24:12",
													"nodeType": "YulVariableDeclaration",
													"src": "11667:24:12",
													"value": {
														"name": "deleteStart",
														"nativeSrc": "11680:11:12",
														"nodeType": "YulIdentifier",
														"src": "11680:11:12"
													},
													"variables": [
														{
															"name": "start",
															"nativeSrc": "11671:5:12",
															"nodeType": "YulTypedName",
															"src": "11671:5:12",
															"type": ""
														}
													]
												},
												{
													"body": {
														"nativeSrc": "11765:20:12",
														"nodeType": "YulBlock",
														"src": "11765:20:12",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"name": "start",
																			"nativeSrc": "11774:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "11774:5:12"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "11781:1:12",
																			"nodeType": "YulLiteral",
																			"src": "11781:1:12",
																			"type": "",
																			"value": "0"
																		}
																	],
																	"functionName": {
																		"name": "sstore",
																		"nativeSrc": "11767:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11767:6:12"
																	},
																	"nativeSrc": "11767:16:12",
																	"nodeType": "YulFunctionCall",
																	"src": "11767:16:12"
																},
																"nativeSrc": "11767:16:12",
																"nodeType": "YulExpressionStatement",
																"src": "11767:16:12"
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "start",
																"nativeSrc": "11715:5:12",
																"nodeType": "YulIdentifier",
																"src": "11715:5:12"
															},
															{
																"name": "_1",
																"nativeSrc": "11722:2:12",
																"nodeType": "YulIdentifier",
																"src": "11722:2:12"
															}
														],
														"functionName": {
															"name": "lt",
															"nativeSrc": "11712:2:12",
															"nodeType": "YulIdentifier",
															"src": "11712:2:12"
														},
														"nativeSrc": "11712:13:12",
														"nodeType": "YulFunctionCall",
														"src": "11712:13:12"
													},
													"nativeSrc": "11704:81:12",
													"nodeType": "YulForLoop",
													"post": {
														"nativeSrc": "11726:26:12",
														"nodeType": "YulBlock",
														"src": "11726:26:12",
														"statements": [
															{
																"nativeSrc": "11728:22:12",
																"nodeType": "YulAssignment",
																"src": "11728:22:12",
																"value": {
																	"arguments": [
																		{
																			"name": "start",
																			"nativeSrc": "11741:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "11741:5:12"
																		},
																		{
																			"kind": "number",
																			"nativeSrc": "11748:1:12",
																			"nodeType": "YulLiteral",
																			"src": "11748:1:12",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nativeSrc": "11737:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11737:3:12"
																	},
																	"nativeSrc": "11737:13:12",
																	"nodeType": "YulFunctionCall",
																	"src": "11737:13:12"
																},
																"variableNames": [
																	{
																		"name": "start",
																		"nativeSrc": "11728:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11728:5:12"
																	}
																]
															}
														]
													},
													"pre": {
														"nativeSrc": "11708:3:12",
														"nodeType": "YulBlock",
														"src": "11708:3:12",
														"statements": []
													},
													"src": "11704:81:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "len",
													"nativeSrc": "11380:3:12",
													"nodeType": "YulIdentifier",
													"src": "11380:3:12"
												},
												{
													"kind": "number",
													"nativeSrc": "11385:2:12",
													"nodeType": "YulLiteral",
													"src": "11385:2:12",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "11377:2:12",
												"nodeType": "YulIdentifier",
												"src": "11377:2:12"
											},
											"nativeSrc": "11377:11:12",
											"nodeType": "YulFunctionCall",
											"src": "11377:11:12"
										},
										"nativeSrc": "11374:421:12",
										"nodeType": "YulIf",
										"src": "11374:421:12"
									}
								]
							},
							"name": "clean_up_bytearray_end_slots_string_storage",
							"nativeSrc": "11283:518:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "array",
									"nativeSrc": "11336:5:12",
									"nodeType": "YulTypedName",
									"src": "11336:5:12",
									"type": ""
								},
								{
									"name": "len",
									"nativeSrc": "11343:3:12",
									"nodeType": "YulTypedName",
									"src": "11343:3:12",
									"type": ""
								},
								{
									"name": "startIndex",
									"nativeSrc": "11348:10:12",
									"nodeType": "YulTypedName",
									"src": "11348:10:12",
									"type": ""
								}
							],
							"src": "11283:518:12"
						},
						{
							"body": {
								"nativeSrc": "11891:81:12",
								"nodeType": "YulBlock",
								"src": "11891:81:12",
								"statements": [
									{
										"nativeSrc": "11901:65:12",
										"nodeType": "YulAssignment",
										"src": "11901:65:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "data",
															"nativeSrc": "11916:4:12",
															"nodeType": "YulIdentifier",
															"src": "11916:4:12"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11934:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11934:1:12",
																					"type": "",
																					"value": "3"
																				},
																				{
																					"name": "len",
																					"nativeSrc": "11937:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11937:3:12"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nativeSrc": "11930:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "11930:3:12"
																			},
																			"nativeSrc": "11930:11:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11930:11:12"
																		},
																		{
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11947:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11947:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "not",
																				"nativeSrc": "11943:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "11943:3:12"
																			},
																			"nativeSrc": "11943:6:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11943:6:12"
																		}
																	],
																	"functionName": {
																		"name": "shr",
																		"nativeSrc": "11926:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11926:3:12"
																	},
																	"nativeSrc": "11926:24:12",
																	"nodeType": "YulFunctionCall",
																	"src": "11926:24:12"
																}
															],
															"functionName": {
																"name": "not",
																"nativeSrc": "11922:3:12",
																"nodeType": "YulIdentifier",
																"src": "11922:3:12"
															},
															"nativeSrc": "11922:29:12",
															"nodeType": "YulFunctionCall",
															"src": "11922:29:12"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "11912:3:12",
														"nodeType": "YulIdentifier",
														"src": "11912:3:12"
													},
													"nativeSrc": "11912:40:12",
													"nodeType": "YulFunctionCall",
													"src": "11912:40:12"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "11958:1:12",
															"nodeType": "YulLiteral",
															"src": "11958:1:12",
															"type": "",
															"value": "1"
														},
														{
															"name": "len",
															"nativeSrc": "11961:3:12",
															"nodeType": "YulIdentifier",
															"src": "11961:3:12"
														}
													],
													"functionName": {
														"name": "shl",
														"nativeSrc": "11954:3:12",
														"nodeType": "YulIdentifier",
														"src": "11954:3:12"
													},
													"nativeSrc": "11954:11:12",
													"nodeType": "YulFunctionCall",
													"src": "11954:11:12"
												}
											],
											"functionName": {
												"name": "or",
												"nativeSrc": "11909:2:12",
												"nodeType": "YulIdentifier",
												"src": "11909:2:12"
											},
											"nativeSrc": "11909:57:12",
											"nodeType": "YulFunctionCall",
											"src": "11909:57:12"
										},
										"variableNames": [
											{
												"name": "used",
												"nativeSrc": "11901:4:12",
												"nodeType": "YulIdentifier",
												"src": "11901:4:12"
											}
										]
									}
								]
							},
							"name": "extract_used_part_and_set_length_of_short_byte_array",
							"nativeSrc": "11806:166:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "11868:4:12",
									"nodeType": "YulTypedName",
									"src": "11868:4:12",
									"type": ""
								},
								{
									"name": "len",
									"nativeSrc": "11874:3:12",
									"nodeType": "YulTypedName",
									"src": "11874:3:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "used",
									"nativeSrc": "11882:4:12",
									"nodeType": "YulTypedName",
									"src": "11882:4:12",
									"type": ""
								}
							],
							"src": "11806:166:12"
						},
						{
							"body": {
								"nativeSrc": "12080:1095:12",
								"nodeType": "YulBlock",
								"src": "12080:1095:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "12121:22:12",
											"nodeType": "YulBlock",
											"src": "12121:22:12",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x41",
															"nativeSrc": "12123:16:12",
															"nodeType": "YulIdentifier",
															"src": "12123:16:12"
														},
														"nativeSrc": "12123:18:12",
														"nodeType": "YulFunctionCall",
														"src": "12123:18:12"
													},
													"nativeSrc": "12123:18:12",
													"nodeType": "YulExpressionStatement",
													"src": "12123:18:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "len",
													"nativeSrc": "12096:3:12",
													"nodeType": "YulIdentifier",
													"src": "12096:3:12"
												},
												{
													"kind": "number",
													"nativeSrc": "12101:18:12",
													"nodeType": "YulLiteral",
													"src": "12101:18:12",
													"type": "",
													"value": "0xffffffffffffffff"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "12093:2:12",
												"nodeType": "YulIdentifier",
												"src": "12093:2:12"
											},
											"nativeSrc": "12093:27:12",
											"nodeType": "YulFunctionCall",
											"src": "12093:27:12"
										},
										"nativeSrc": "12090:53:12",
										"nodeType": "YulIf",
										"src": "12090:53:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nativeSrc": "12196:4:12",
													"nodeType": "YulIdentifier",
													"src": "12196:4:12"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "slot",
																	"nativeSrc": "12234:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12234:4:12"
																}
															],
															"functionName": {
																"name": "sload",
																"nativeSrc": "12228:5:12",
																"nodeType": "YulIdentifier",
																"src": "12228:5:12"
															},
															"nativeSrc": "12228:11:12",
															"nodeType": "YulFunctionCall",
															"src": "12228:11:12"
														}
													],
													"functionName": {
														"name": "extract_byte_array_length",
														"nativeSrc": "12202:25:12",
														"nodeType": "YulIdentifier",
														"src": "12202:25:12"
													},
													"nativeSrc": "12202:38:12",
													"nodeType": "YulFunctionCall",
													"src": "12202:38:12"
												},
												{
													"name": "len",
													"nativeSrc": "12242:3:12",
													"nodeType": "YulIdentifier",
													"src": "12242:3:12"
												}
											],
											"functionName": {
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "12152:43:12",
												"nodeType": "YulIdentifier",
												"src": "12152:43:12"
											},
											"nativeSrc": "12152:94:12",
											"nodeType": "YulFunctionCall",
											"src": "12152:94:12"
										},
										"nativeSrc": "12152:94:12",
										"nodeType": "YulExpressionStatement",
										"src": "12152:94:12"
									},
									{
										"nativeSrc": "12255:18:12",
										"nodeType": "YulVariableDeclaration",
										"src": "12255:18:12",
										"value": {
											"kind": "number",
											"nativeSrc": "12272:1:12",
											"nodeType": "YulLiteral",
											"src": "12272:1:12",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "srcOffset",
												"nativeSrc": "12259:9:12",
												"nodeType": "YulTypedName",
												"src": "12259:9:12",
												"type": ""
											}
										]
									},
									{
										"cases": [
											{
												"body": {
													"nativeSrc": "12316:601:12",
													"nodeType": "YulBlock",
													"src": "12316:601:12",
													"statements": [
														{
															"nativeSrc": "12330:32:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12330:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "12349:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12349:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12358:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12358:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "12354:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12354:3:12"
																		},
																		"nativeSrc": "12354:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12354:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12345:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12345:3:12"
																},
																"nativeSrc": "12345:17:12",
																"nodeType": "YulFunctionCall",
																"src": "12345:17:12"
															},
															"variables": [
																{
																	"name": "loopEnd",
																	"nativeSrc": "12334:7:12",
																	"nodeType": "YulTypedName",
																	"src": "12334:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12375:49:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12375:49:12",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12419:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12419:4:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_string_storage",
																	"nativeSrc": "12389:29:12",
																	"nodeType": "YulIdentifier",
																	"src": "12389:29:12"
																},
																"nativeSrc": "12389:35:12",
																"nodeType": "YulFunctionCall",
																"src": "12389:35:12"
															},
															"variables": [
																{
																	"name": "dstPtr",
																	"nativeSrc": "12379:6:12",
																	"nodeType": "YulTypedName",
																	"src": "12379:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12437:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12437:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "12446:1:12",
																"nodeType": "YulLiteral",
																"src": "12446:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "12441:1:12",
																	"nodeType": "YulTypedName",
																	"src": "12441:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12517:172:12",
																"nodeType": "YulBlock",
																"src": "12517:172:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "12542:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "12542:6:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "12567:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "12567:3:12"
																								},
																								{
																									"name": "srcOffset",
																									"nativeSrc": "12572:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "12572:9:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12563:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "12563:3:12"
																							},
																							"nativeSrc": "12563:19:12",
																							"nodeType": "YulFunctionCall",
																							"src": "12563:19:12"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nativeSrc": "12550:12:12",
																						"nodeType": "YulIdentifier",
																						"src": "12550:12:12"
																					},
																					"nativeSrc": "12550:33:12",
																					"nodeType": "YulFunctionCall",
																					"src": "12550:33:12"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "12535:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12535:6:12"
																			},
																			"nativeSrc": "12535:49:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12535:49:12"
																		},
																		"nativeSrc": "12535:49:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12535:49:12"
																	},
																	{
																		"nativeSrc": "12601:24:12",
																		"nodeType": "YulAssignment",
																		"src": "12601:24:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "12615:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "12615:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12623:1:12",
																					"nodeType": "YulLiteral",
																					"src": "12623:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12611:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12611:3:12"
																			},
																			"nativeSrc": "12611:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12611:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "dstPtr",
																				"nativeSrc": "12601:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12601:6:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12642:33:12",
																		"nodeType": "YulAssignment",
																		"src": "12642:33:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcOffset",
																					"nativeSrc": "12659:9:12",
																					"nodeType": "YulIdentifier",
																					"src": "12659:9:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12670:4:12",
																					"nodeType": "YulLiteral",
																					"src": "12670:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12655:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12655:3:12"
																			},
																			"nativeSrc": "12655:20:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12655:20:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcOffset",
																				"nativeSrc": "12642:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12642:9:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "12471:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12471:1:12"
																	},
																	{
																		"name": "loopEnd",
																		"nativeSrc": "12474:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "12474:7:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12468:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12468:2:12"
																},
																"nativeSrc": "12468:14:12",
																"nodeType": "YulFunctionCall",
																"src": "12468:14:12"
															},
															"nativeSrc": "12460:229:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12483:21:12",
																"nodeType": "YulBlock",
																"src": "12483:21:12",
																"statements": [
																	{
																		"nativeSrc": "12485:17:12",
																		"nodeType": "YulAssignment",
																		"src": "12485:17:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "12494:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "12494:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12497:4:12",
																					"nodeType": "YulLiteral",
																					"src": "12497:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12490:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12490:3:12"
																			},
																			"nativeSrc": "12490:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12490:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "12485:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "12485:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12464:3:12",
																"nodeType": "YulBlock",
																"src": "12464:3:12",
																"statements": []
															},
															"src": "12460:229:12"
														},
														{
															"body": {
																"nativeSrc": "12734:127:12",
																"nodeType": "YulBlock",
																"src": "12734:127:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "12759:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "12759:6:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "src",
																											"nativeSrc": "12788:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "12788:3:12"
																										},
																										{
																											"name": "srcOffset",
																											"nativeSrc": "12793:9:12",
																											"nodeType": "YulIdentifier",
																											"src": "12793:9:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "12784:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "12784:3:12"
																									},
																									"nativeSrc": "12784:19:12",
																									"nodeType": "YulFunctionCall",
																									"src": "12784:19:12"
																								}
																							],
																							"functionName": {
																								"name": "calldataload",
																								"nativeSrc": "12771:12:12",
																								"nodeType": "YulIdentifier",
																								"src": "12771:12:12"
																							},
																							"nativeSrc": "12771:33:12",
																							"nodeType": "YulFunctionCall",
																							"src": "12771:33:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "12822:1:12",
																															"nodeType": "YulLiteral",
																															"src": "12822:1:12",
																															"type": "",
																															"value": "3"
																														},
																														{
																															"name": "len",
																															"nativeSrc": "12825:3:12",
																															"nodeType": "YulIdentifier",
																															"src": "12825:3:12"
																														}
																													],
																													"functionName": {
																														"name": "shl",
																														"nativeSrc": "12818:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "12818:3:12"
																													},
																													"nativeSrc": "12818:11:12",
																													"nodeType": "YulFunctionCall",
																													"src": "12818:11:12"
																												},
																												{
																													"kind": "number",
																													"nativeSrc": "12831:3:12",
																													"nodeType": "YulLiteral",
																													"src": "12831:3:12",
																													"type": "",
																													"value": "248"
																												}
																											],
																											"functionName": {
																												"name": "and",
																												"nativeSrc": "12814:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "12814:3:12"
																											},
																											"nativeSrc": "12814:21:12",
																											"nodeType": "YulFunctionCall",
																											"src": "12814:21:12"
																										},
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "12841:1:12",
																													"nodeType": "YulLiteral",
																													"src": "12841:1:12",
																													"type": "",
																													"value": "0"
																												}
																											],
																											"functionName": {
																												"name": "not",
																												"nativeSrc": "12837:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "12837:3:12"
																											},
																											"nativeSrc": "12837:6:12",
																											"nodeType": "YulFunctionCall",
																											"src": "12837:6:12"
																										}
																									],
																									"functionName": {
																										"name": "shr",
																										"nativeSrc": "12810:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "12810:3:12"
																									},
																									"nativeSrc": "12810:34:12",
																									"nodeType": "YulFunctionCall",
																									"src": "12810:34:12"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "12806:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "12806:3:12"
																							},
																							"nativeSrc": "12806:39:12",
																							"nodeType": "YulFunctionCall",
																							"src": "12806:39:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "12767:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "12767:3:12"
																					},
																					"nativeSrc": "12767:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "12767:79:12"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "12752:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12752:6:12"
																			},
																			"nativeSrc": "12752:95:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12752:95:12"
																		},
																		"nativeSrc": "12752:95:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12752:95:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "loopEnd",
																		"nativeSrc": "12708:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "12708:7:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "12717:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12717:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12705:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12705:2:12"
																},
																"nativeSrc": "12705:16:12",
																"nodeType": "YulFunctionCall",
																"src": "12705:16:12"
															},
															"nativeSrc": "12702:159:12",
															"nodeType": "YulIf",
															"src": "12702:159:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12881:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12881:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12895:1:12",
																						"nodeType": "YulLiteral",
																						"src": "12895:1:12",
																						"type": "",
																						"value": "1"
																					},
																					{
																						"name": "len",
																						"nativeSrc": "12898:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "12898:3:12"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "12891:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12891:3:12"
																				},
																				"nativeSrc": "12891:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12891:11:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12904:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12904:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12887:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12887:3:12"
																		},
																		"nativeSrc": "12887:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12887:19:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "12874:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12874:6:12"
																},
																"nativeSrc": "12874:33:12",
																"nodeType": "YulFunctionCall",
																"src": "12874:33:12"
															},
															"nativeSrc": "12874:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "12874:33:12"
														}
													]
												},
												"nativeSrc": "12309:608:12",
												"nodeType": "YulCase",
												"src": "12309:608:12",
												"value": {
													"kind": "number",
													"nativeSrc": "12314:1:12",
													"nodeType": "YulLiteral",
													"src": "12314:1:12",
													"type": "",
													"value": "1"
												}
											},
											{
												"body": {
													"nativeSrc": "12934:235:12",
													"nodeType": "YulBlock",
													"src": "12934:235:12",
													"statements": [
														{
															"nativeSrc": "12948:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12948:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "12961:1:12",
																"nodeType": "YulLiteral",
																"src": "12961:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "12952:5:12",
																	"nodeType": "YulTypedName",
																	"src": "12952:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12994:74:12",
																"nodeType": "YulBlock",
																"src": "12994:74:12",
																"statements": [
																	{
																		"nativeSrc": "13012:42:12",
																		"nodeType": "YulAssignment",
																		"src": "13012:42:12",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "13038:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "13038:3:12"
																						},
																						{
																							"name": "srcOffset",
																							"nativeSrc": "13043:9:12",
																							"nodeType": "YulIdentifier",
																							"src": "13043:9:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "13034:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "13034:3:12"
																					},
																					"nativeSrc": "13034:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "13034:19:12"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "13021:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "13021:12:12"
																			},
																			"nativeSrc": "13021:33:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13021:33:12"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "13012:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "13012:5:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"name": "len",
																"nativeSrc": "12978:3:12",
																"nodeType": "YulIdentifier",
																"src": "12978:3:12"
															},
															"nativeSrc": "12975:93:12",
															"nodeType": "YulIf",
															"src": "12975:93:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13088:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13088:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13147:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "13147:5:12"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "13154:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "13154:3:12"
																			}
																		],
																		"functionName": {
																			"name": "extract_used_part_and_set_length_of_short_byte_array",
																			"nativeSrc": "13094:52:12",
																			"nodeType": "YulIdentifier",
																			"src": "13094:52:12"
																		},
																		"nativeSrc": "13094:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13094:64:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "13081:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13081:6:12"
																},
																"nativeSrc": "13081:78:12",
																"nodeType": "YulFunctionCall",
																"src": "13081:78:12"
															},
															"nativeSrc": "13081:78:12",
															"nodeType": "YulExpressionStatement",
															"src": "13081:78:12"
														}
													]
												},
												"nativeSrc": "12926:243:12",
												"nodeType": "YulCase",
												"src": "12926:243:12",
												"value": "default"
											}
										],
										"expression": {
											"arguments": [
												{
													"name": "len",
													"nativeSrc": "12292:3:12",
													"nodeType": "YulIdentifier",
													"src": "12292:3:12"
												},
												{
													"kind": "number",
													"nativeSrc": "12297:2:12",
													"nodeType": "YulLiteral",
													"src": "12297:2:12",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "12289:2:12",
												"nodeType": "YulIdentifier",
												"src": "12289:2:12"
											},
											"nativeSrc": "12289:11:12",
											"nodeType": "YulFunctionCall",
											"src": "12289:11:12"
										},
										"nativeSrc": "12282:887:12",
										"nodeType": "YulSwitch",
										"src": "12282:887:12"
									}
								]
							},
							"name": "copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage",
							"nativeSrc": "11977:1198:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nativeSrc": "12060:4:12",
									"nodeType": "YulTypedName",
									"src": "12060:4:12",
									"type": ""
								},
								{
									"name": "src",
									"nativeSrc": "12066:3:12",
									"nodeType": "YulTypedName",
									"src": "12066:3:12",
									"type": ""
								},
								{
									"name": "len",
									"nativeSrc": "12071:3:12",
									"nodeType": "YulTypedName",
									"src": "12071:3:12",
									"type": ""
								}
							],
							"src": "11977:1198:12"
						},
						{
							"body": {
								"nativeSrc": "13309:119:12",
								"nodeType": "YulBlock",
								"src": "13309:119:12",
								"statements": [
									{
										"nativeSrc": "13319:26:12",
										"nodeType": "YulAssignment",
										"src": "13319:26:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "13331:9:12",
													"nodeType": "YulIdentifier",
													"src": "13331:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "13342:2:12",
													"nodeType": "YulLiteral",
													"src": "13342:2:12",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "13327:3:12",
												"nodeType": "YulIdentifier",
												"src": "13327:3:12"
											},
											"nativeSrc": "13327:18:12",
											"nodeType": "YulFunctionCall",
											"src": "13327:18:12"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "13319:4:12",
												"nodeType": "YulIdentifier",
												"src": "13319:4:12"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "13361:9:12",
													"nodeType": "YulIdentifier",
													"src": "13361:9:12"
												},
												{
													"name": "value0",
													"nativeSrc": "13372:6:12",
													"nodeType": "YulIdentifier",
													"src": "13372:6:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "13354:6:12",
												"nodeType": "YulIdentifier",
												"src": "13354:6:12"
											},
											"nativeSrc": "13354:25:12",
											"nodeType": "YulFunctionCall",
											"src": "13354:25:12"
										},
										"nativeSrc": "13354:25:12",
										"nodeType": "YulExpressionStatement",
										"src": "13354:25:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "13399:9:12",
															"nodeType": "YulIdentifier",
															"src": "13399:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "13410:2:12",
															"nodeType": "YulLiteral",
															"src": "13410:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "13395:3:12",
														"nodeType": "YulIdentifier",
														"src": "13395:3:12"
													},
													"nativeSrc": "13395:18:12",
													"nodeType": "YulFunctionCall",
													"src": "13395:18:12"
												},
												{
													"name": "value1",
													"nativeSrc": "13415:6:12",
													"nodeType": "YulIdentifier",
													"src": "13415:6:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "13388:6:12",
												"nodeType": "YulIdentifier",
												"src": "13388:6:12"
											},
											"nativeSrc": "13388:34:12",
											"nodeType": "YulFunctionCall",
											"src": "13388:34:12"
										},
										"nativeSrc": "13388:34:12",
										"nodeType": "YulExpressionStatement",
										"src": "13388:34:12"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
							"nativeSrc": "13180:248:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "13270:9:12",
									"nodeType": "YulTypedName",
									"src": "13270:9:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "13281:6:12",
									"nodeType": "YulTypedName",
									"src": "13281:6:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "13289:6:12",
									"nodeType": "YulTypedName",
									"src": "13289:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "13300:4:12",
									"nodeType": "YulTypedName",
									"src": "13300:4:12",
									"type": ""
								}
							],
							"src": "13180:248:12"
						},
						{
							"body": {
								"nativeSrc": "13485:116:12",
								"nodeType": "YulBlock",
								"src": "13485:116:12",
								"statements": [
									{
										"nativeSrc": "13495:20:12",
										"nodeType": "YulAssignment",
										"src": "13495:20:12",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "13510:1:12",
													"nodeType": "YulIdentifier",
													"src": "13510:1:12"
												},
												{
													"name": "y",
													"nativeSrc": "13513:1:12",
													"nodeType": "YulIdentifier",
													"src": "13513:1:12"
												}
											],
											"functionName": {
												"name": "mul",
												"nativeSrc": "13506:3:12",
												"nodeType": "YulIdentifier",
												"src": "13506:3:12"
											},
											"nativeSrc": "13506:9:12",
											"nodeType": "YulFunctionCall",
											"src": "13506:9:12"
										},
										"variableNames": [
											{
												"name": "product",
												"nativeSrc": "13495:7:12",
												"nodeType": "YulIdentifier",
												"src": "13495:7:12"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "13573:22:12",
											"nodeType": "YulBlock",
											"src": "13573:22:12",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "13575:16:12",
															"nodeType": "YulIdentifier",
															"src": "13575:16:12"
														},
														"nativeSrc": "13575:18:12",
														"nodeType": "YulFunctionCall",
														"src": "13575:18:12"
													},
													"nativeSrc": "13575:18:12",
													"nodeType": "YulExpressionStatement",
													"src": "13575:18:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "x",
																	"nativeSrc": "13544:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "13544:1:12"
																}
															],
															"functionName": {
																"name": "iszero",
																"nativeSrc": "13537:6:12",
																"nodeType": "YulIdentifier",
																"src": "13537:6:12"
															},
															"nativeSrc": "13537:9:12",
															"nodeType": "YulFunctionCall",
															"src": "13537:9:12"
														},
														{
															"arguments": [
																{
																	"name": "y",
																	"nativeSrc": "13551:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "13551:1:12"
																},
																{
																	"arguments": [
																		{
																			"name": "product",
																			"nativeSrc": "13558:7:12",
																			"nodeType": "YulIdentifier",
																			"src": "13558:7:12"
																		},
																		{
																			"name": "x",
																			"nativeSrc": "13567:1:12",
																			"nodeType": "YulIdentifier",
																			"src": "13567:1:12"
																		}
																	],
																	"functionName": {
																		"name": "div",
																		"nativeSrc": "13554:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13554:3:12"
																	},
																	"nativeSrc": "13554:15:12",
																	"nodeType": "YulFunctionCall",
																	"src": "13554:15:12"
																}
															],
															"functionName": {
																"name": "eq",
																"nativeSrc": "13548:2:12",
																"nodeType": "YulIdentifier",
																"src": "13548:2:12"
															},
															"nativeSrc": "13548:22:12",
															"nodeType": "YulFunctionCall",
															"src": "13548:22:12"
														}
													],
													"functionName": {
														"name": "or",
														"nativeSrc": "13534:2:12",
														"nodeType": "YulIdentifier",
														"src": "13534:2:12"
													},
													"nativeSrc": "13534:37:12",
													"nodeType": "YulFunctionCall",
													"src": "13534:37:12"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "13527:6:12",
												"nodeType": "YulIdentifier",
												"src": "13527:6:12"
											},
											"nativeSrc": "13527:45:12",
											"nodeType": "YulFunctionCall",
											"src": "13527:45:12"
										},
										"nativeSrc": "13524:71:12",
										"nodeType": "YulIf",
										"src": "13524:71:12"
									}
								]
							},
							"name": "checked_mul_t_uint256",
							"nativeSrc": "13433:168:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "13464:1:12",
									"nodeType": "YulTypedName",
									"src": "13464:1:12",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "13467:1:12",
									"nodeType": "YulTypedName",
									"src": "13467:1:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "product",
									"nativeSrc": "13473:7:12",
									"nodeType": "YulTypedName",
									"src": "13473:7:12",
									"type": ""
								}
							],
							"src": "13433:168:12"
						},
						{
							"body": {
								"nativeSrc": "13653:88:12",
								"nodeType": "YulBlock",
								"src": "13653:88:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "13684:22:12",
											"nodeType": "YulBlock",
											"src": "13684:22:12",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "13686:16:12",
															"nodeType": "YulIdentifier",
															"src": "13686:16:12"
														},
														"nativeSrc": "13686:18:12",
														"nodeType": "YulFunctionCall",
														"src": "13686:18:12"
													},
													"nativeSrc": "13686:18:12",
													"nodeType": "YulExpressionStatement",
													"src": "13686:18:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "13669:5:12",
													"nodeType": "YulIdentifier",
													"src": "13669:5:12"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "13680:1:12",
															"nodeType": "YulLiteral",
															"src": "13680:1:12",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "not",
														"nativeSrc": "13676:3:12",
														"nodeType": "YulIdentifier",
														"src": "13676:3:12"
													},
													"nativeSrc": "13676:6:12",
													"nodeType": "YulFunctionCall",
													"src": "13676:6:12"
												}
											],
											"functionName": {
												"name": "eq",
												"nativeSrc": "13666:2:12",
												"nodeType": "YulIdentifier",
												"src": "13666:2:12"
											},
											"nativeSrc": "13666:17:12",
											"nodeType": "YulFunctionCall",
											"src": "13666:17:12"
										},
										"nativeSrc": "13663:43:12",
										"nodeType": "YulIf",
										"src": "13663:43:12"
									},
									{
										"nativeSrc": "13715:20:12",
										"nodeType": "YulAssignment",
										"src": "13715:20:12",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "13726:5:12",
													"nodeType": "YulIdentifier",
													"src": "13726:5:12"
												},
												{
													"kind": "number",
													"nativeSrc": "13733:1:12",
													"nodeType": "YulLiteral",
													"src": "13733:1:12",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "13722:3:12",
												"nodeType": "YulIdentifier",
												"src": "13722:3:12"
											},
											"nativeSrc": "13722:13:12",
											"nodeType": "YulFunctionCall",
											"src": "13722:13:12"
										},
										"variableNames": [
											{
												"name": "ret",
												"nativeSrc": "13715:3:12",
												"nodeType": "YulIdentifier",
												"src": "13715:3:12"
											}
										]
									}
								]
							},
							"name": "increment_t_uint256",
							"nativeSrc": "13606:135:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "13635:5:12",
									"nodeType": "YulTypedName",
									"src": "13635:5:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "ret",
									"nativeSrc": "13645:3:12",
									"nodeType": "YulTypedName",
									"src": "13645:3:12",
									"type": ""
								}
							],
							"src": "13606:135:12"
						},
						{
							"body": {
								"nativeSrc": "13792:171:12",
								"nodeType": "YulBlock",
								"src": "13792:171:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "13823:111:12",
											"nodeType": "YulBlock",
											"src": "13823:111:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "13844:1:12",
																"nodeType": "YulLiteral",
																"src": "13844:1:12",
																"type": "",
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13851:3:12",
																		"nodeType": "YulLiteral",
																		"src": "13851:3:12",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13856:10:12",
																		"nodeType": "YulLiteral",
																		"src": "13856:10:12",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "13847:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13847:3:12"
																},
																"nativeSrc": "13847:20:12",
																"nodeType": "YulFunctionCall",
																"src": "13847:20:12"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "13837:6:12",
															"nodeType": "YulIdentifier",
															"src": "13837:6:12"
														},
														"nativeSrc": "13837:31:12",
														"nodeType": "YulFunctionCall",
														"src": "13837:31:12"
													},
													"nativeSrc": "13837:31:12",
													"nodeType": "YulExpressionStatement",
													"src": "13837:31:12"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "13888:1:12",
																"nodeType": "YulLiteral",
																"src": "13888:1:12",
																"type": "",
																"value": "4"
															},
															{
																"kind": "number",
																"nativeSrc": "13891:4:12",
																"nodeType": "YulLiteral",
																"src": "13891:4:12",
																"type": "",
																"value": "0x12"
															}
														],
														"functionName": {
															"name": "mstore",
															"nativeSrc": "13881:6:12",
															"nodeType": "YulIdentifier",
															"src": "13881:6:12"
														},
														"nativeSrc": "13881:15:12",
														"nodeType": "YulFunctionCall",
														"src": "13881:15:12"
													},
													"nativeSrc": "13881:15:12",
													"nodeType": "YulExpressionStatement",
													"src": "13881:15:12"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "13916:1:12",
																"nodeType": "YulLiteral",
																"src": "13916:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "13919:4:12",
																"nodeType": "YulLiteral",
																"src": "13919:4:12",
																"type": "",
																"value": "0x24"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "13909:6:12",
															"nodeType": "YulIdentifier",
															"src": "13909:6:12"
														},
														"nativeSrc": "13909:15:12",
														"nodeType": "YulFunctionCall",
														"src": "13909:15:12"
													},
													"nativeSrc": "13909:15:12",
													"nodeType": "YulExpressionStatement",
													"src": "13909:15:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "13812:1:12",
													"nodeType": "YulIdentifier",
													"src": "13812:1:12"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "13805:6:12",
												"nodeType": "YulIdentifier",
												"src": "13805:6:12"
											},
											"nativeSrc": "13805:9:12",
											"nodeType": "YulFunctionCall",
											"src": "13805:9:12"
										},
										"nativeSrc": "13802:132:12",
										"nodeType": "YulIf",
										"src": "13802:132:12"
									},
									{
										"nativeSrc": "13943:14:12",
										"nodeType": "YulAssignment",
										"src": "13943:14:12",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "13952:1:12",
													"nodeType": "YulIdentifier",
													"src": "13952:1:12"
												},
												{
													"name": "y",
													"nativeSrc": "13955:1:12",
													"nodeType": "YulIdentifier",
													"src": "13955:1:12"
												}
											],
											"functionName": {
												"name": "div",
												"nativeSrc": "13948:3:12",
												"nodeType": "YulIdentifier",
												"src": "13948:3:12"
											},
											"nativeSrc": "13948:9:12",
											"nodeType": "YulFunctionCall",
											"src": "13948:9:12"
										},
										"variableNames": [
											{
												"name": "r",
												"nativeSrc": "13943:1:12",
												"nodeType": "YulIdentifier",
												"src": "13943:1:12"
											}
										]
									}
								]
							},
							"name": "checked_div_t_uint256",
							"nativeSrc": "13746:217:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "13777:1:12",
									"nodeType": "YulTypedName",
									"src": "13777:1:12",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "13780:1:12",
									"nodeType": "YulTypedName",
									"src": "13780:1:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "r",
									"nativeSrc": "13786:1:12",
									"nodeType": "YulTypedName",
									"src": "13786:1:12",
									"type": ""
								}
							],
							"src": "13746:217:12"
						},
						{
							"body": {
								"nativeSrc": "14018:162:12",
								"nodeType": "YulBlock",
								"src": "14018:162:12",
								"statements": [
									{
										"nativeSrc": "14028:26:12",
										"nodeType": "YulVariableDeclaration",
										"src": "14028:26:12",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "14048:5:12",
													"nodeType": "YulIdentifier",
													"src": "14048:5:12"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "14042:5:12",
												"nodeType": "YulIdentifier",
												"src": "14042:5:12"
											},
											"nativeSrc": "14042:12:12",
											"nodeType": "YulFunctionCall",
											"src": "14042:12:12"
										},
										"variables": [
											{
												"name": "length",
												"nativeSrc": "14032:6:12",
												"nodeType": "YulTypedName",
												"src": "14032:6:12",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "14069:3:12",
													"nodeType": "YulIdentifier",
													"src": "14069:3:12"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "14078:5:12",
															"nodeType": "YulIdentifier",
															"src": "14078:5:12"
														},
														{
															"kind": "number",
															"nativeSrc": "14085:4:12",
															"nodeType": "YulLiteral",
															"src": "14085:4:12",
															"type": "",
															"value": "0x20"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "14074:3:12",
														"nodeType": "YulIdentifier",
														"src": "14074:3:12"
													},
													"nativeSrc": "14074:16:12",
													"nodeType": "YulFunctionCall",
													"src": "14074:16:12"
												},
												{
													"name": "length",
													"nativeSrc": "14092:6:12",
													"nodeType": "YulIdentifier",
													"src": "14092:6:12"
												}
											],
											"functionName": {
												"name": "mcopy",
												"nativeSrc": "14063:5:12",
												"nodeType": "YulIdentifier",
												"src": "14063:5:12"
											},
											"nativeSrc": "14063:36:12",
											"nodeType": "YulFunctionCall",
											"src": "14063:36:12"
										},
										"nativeSrc": "14063:36:12",
										"nodeType": "YulExpressionStatement",
										"src": "14063:36:12"
									},
									{
										"nativeSrc": "14108:26:12",
										"nodeType": "YulVariableDeclaration",
										"src": "14108:26:12",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "14122:3:12",
													"nodeType": "YulIdentifier",
													"src": "14122:3:12"
												},
												{
													"name": "length",
													"nativeSrc": "14127:6:12",
													"nodeType": "YulIdentifier",
													"src": "14127:6:12"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "14118:3:12",
												"nodeType": "YulIdentifier",
												"src": "14118:3:12"
											},
											"nativeSrc": "14118:16:12",
											"nodeType": "YulFunctionCall",
											"src": "14118:16:12"
										},
										"variables": [
											{
												"name": "_1",
												"nativeSrc": "14112:2:12",
												"nodeType": "YulTypedName",
												"src": "14112:2:12",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "_1",
													"nativeSrc": "14150:2:12",
													"nodeType": "YulIdentifier",
													"src": "14150:2:12"
												},
												{
													"kind": "number",
													"nativeSrc": "14154:1:12",
													"nodeType": "YulLiteral",
													"src": "14154:1:12",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "14143:6:12",
												"nodeType": "YulIdentifier",
												"src": "14143:6:12"
											},
											"nativeSrc": "14143:13:12",
											"nodeType": "YulFunctionCall",
											"src": "14143:13:12"
										},
										"nativeSrc": "14143:13:12",
										"nodeType": "YulExpressionStatement",
										"src": "14143:13:12"
									},
									{
										"nativeSrc": "14165:9:12",
										"nodeType": "YulAssignment",
										"src": "14165:9:12",
										"value": {
											"name": "_1",
											"nativeSrc": "14172:2:12",
											"nodeType": "YulIdentifier",
											"src": "14172:2:12"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "14165:3:12",
												"nodeType": "YulIdentifier",
												"src": "14165:3:12"
											}
										]
									}
								]
							},
							"name": "abi_encode_string",
							"nativeSrc": "13968:212:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "13995:5:12",
									"nodeType": "YulTypedName",
									"src": "13995:5:12",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "14002:3:12",
									"nodeType": "YulTypedName",
									"src": "14002:3:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "14010:3:12",
									"nodeType": "YulTypedName",
									"src": "14010:3:12",
									"type": ""
								}
							],
							"src": "13968:212:12"
						},
						{
							"body": {
								"nativeSrc": "14372:80:12",
								"nodeType": "YulBlock",
								"src": "14372:80:12",
								"statements": [
									{
										"nativeSrc": "14382:64:12",
										"nodeType": "YulAssignment",
										"src": "14382:64:12",
										"value": {
											"arguments": [
												{
													"name": "value1",
													"nativeSrc": "14407:6:12",
													"nodeType": "YulIdentifier",
													"src": "14407:6:12"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nativeSrc": "14433:6:12",
															"nodeType": "YulIdentifier",
															"src": "14433:6:12"
														},
														{
															"name": "pos",
															"nativeSrc": "14441:3:12",
															"nodeType": "YulIdentifier",
															"src": "14441:3:12"
														}
													],
													"functionName": {
														"name": "abi_encode_string",
														"nativeSrc": "14415:17:12",
														"nodeType": "YulIdentifier",
														"src": "14415:17:12"
													},
													"nativeSrc": "14415:30:12",
													"nodeType": "YulFunctionCall",
													"src": "14415:30:12"
												}
											],
											"functionName": {
												"name": "abi_encode_string",
												"nativeSrc": "14389:17:12",
												"nodeType": "YulIdentifier",
												"src": "14389:17:12"
											},
											"nativeSrc": "14389:57:12",
											"nodeType": "YulFunctionCall",
											"src": "14389:57:12"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "14382:3:12",
												"nodeType": "YulIdentifier",
												"src": "14382:3:12"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
							"nativeSrc": "14185:267:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "14340:3:12",
									"nodeType": "YulTypedName",
									"src": "14340:3:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "14345:6:12",
									"nodeType": "YulTypedName",
									"src": "14345:6:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "14353:6:12",
									"nodeType": "YulTypedName",
									"src": "14353:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "14364:3:12",
									"nodeType": "YulTypedName",
									"src": "14364:3:12",
									"type": ""
								}
							],
							"src": "14185:267:12"
						},
						{
							"body": {
								"nativeSrc": "14585:152:12",
								"nodeType": "YulBlock",
								"src": "14585:152:12",
								"statements": [
									{
										"nativeSrc": "14595:26:12",
										"nodeType": "YulAssignment",
										"src": "14595:26:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "14607:9:12",
													"nodeType": "YulIdentifier",
													"src": "14607:9:12"
												},
												{
													"kind": "number",
													"nativeSrc": "14618:2:12",
													"nodeType": "YulLiteral",
													"src": "14618:2:12",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "14603:3:12",
												"nodeType": "YulIdentifier",
												"src": "14603:3:12"
											},
											"nativeSrc": "14603:18:12",
											"nodeType": "YulFunctionCall",
											"src": "14603:18:12"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "14595:4:12",
												"nodeType": "YulIdentifier",
												"src": "14595:4:12"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "14637:9:12",
													"nodeType": "YulIdentifier",
													"src": "14637:9:12"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nativeSrc": "14652:6:12",
															"nodeType": "YulIdentifier",
															"src": "14652:6:12"
														},
														{
															"kind": "number",
															"nativeSrc": "14660:26:12",
															"nodeType": "YulLiteral",
															"src": "14660:26:12",
															"type": "",
															"value": "0xffffffffffffffffffffffff"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "14648:3:12",
														"nodeType": "YulIdentifier",
														"src": "14648:3:12"
													},
													"nativeSrc": "14648:39:12",
													"nodeType": "YulFunctionCall",
													"src": "14648:39:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "14630:6:12",
												"nodeType": "YulIdentifier",
												"src": "14630:6:12"
											},
											"nativeSrc": "14630:58:12",
											"nodeType": "YulFunctionCall",
											"src": "14630:58:12"
										},
										"nativeSrc": "14630:58:12",
										"nodeType": "YulExpressionStatement",
										"src": "14630:58:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "14708:9:12",
															"nodeType": "YulIdentifier",
															"src": "14708:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "14719:2:12",
															"nodeType": "YulLiteral",
															"src": "14719:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "14704:3:12",
														"nodeType": "YulIdentifier",
														"src": "14704:3:12"
													},
													"nativeSrc": "14704:18:12",
													"nodeType": "YulFunctionCall",
													"src": "14704:18:12"
												},
												{
													"name": "value1",
													"nativeSrc": "14724:6:12",
													"nodeType": "YulIdentifier",
													"src": "14724:6:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "14697:6:12",
												"nodeType": "YulIdentifier",
												"src": "14697:6:12"
											},
											"nativeSrc": "14697:34:12",
											"nodeType": "YulFunctionCall",
											"src": "14697:34:12"
										},
										"nativeSrc": "14697:34:12",
										"nodeType": "YulExpressionStatement",
										"src": "14697:34:12"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
							"nativeSrc": "14457:280:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "14546:9:12",
									"nodeType": "YulTypedName",
									"src": "14546:9:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "14557:6:12",
									"nodeType": "YulTypedName",
									"src": "14557:6:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "14565:6:12",
									"nodeType": "YulTypedName",
									"src": "14565:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "14576:4:12",
									"nodeType": "YulTypedName",
									"src": "14576:4:12",
									"type": ""
								}
							],
							"src": "14457:280:12"
						},
						{
							"body": {
								"nativeSrc": "14789:89:12",
								"nodeType": "YulBlock",
								"src": "14789:89:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "14816:22:12",
											"nodeType": "YulBlock",
											"src": "14816:22:12",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "14818:16:12",
															"nodeType": "YulIdentifier",
															"src": "14818:16:12"
														},
														"nativeSrc": "14818:18:12",
														"nodeType": "YulFunctionCall",
														"src": "14818:18:12"
													},
													"nativeSrc": "14818:18:12",
													"nodeType": "YulExpressionStatement",
													"src": "14818:18:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "14809:5:12",
													"nodeType": "YulIdentifier",
													"src": "14809:5:12"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "14802:6:12",
												"nodeType": "YulIdentifier",
												"src": "14802:6:12"
											},
											"nativeSrc": "14802:13:12",
											"nodeType": "YulFunctionCall",
											"src": "14802:13:12"
										},
										"nativeSrc": "14799:39:12",
										"nodeType": "YulIf",
										"src": "14799:39:12"
									},
									{
										"nativeSrc": "14847:25:12",
										"nodeType": "YulAssignment",
										"src": "14847:25:12",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "14858:5:12",
													"nodeType": "YulIdentifier",
													"src": "14858:5:12"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "14869:1:12",
															"nodeType": "YulLiteral",
															"src": "14869:1:12",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "not",
														"nativeSrc": "14865:3:12",
														"nodeType": "YulIdentifier",
														"src": "14865:3:12"
													},
													"nativeSrc": "14865:6:12",
													"nodeType": "YulFunctionCall",
													"src": "14865:6:12"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "14854:3:12",
												"nodeType": "YulIdentifier",
												"src": "14854:3:12"
											},
											"nativeSrc": "14854:18:12",
											"nodeType": "YulFunctionCall",
											"src": "14854:18:12"
										},
										"variableNames": [
											{
												"name": "ret",
												"nativeSrc": "14847:3:12",
												"nodeType": "YulIdentifier",
												"src": "14847:3:12"
											}
										]
									}
								]
							},
							"name": "decrement_t_uint256",
							"nativeSrc": "14742:136:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "14771:5:12",
									"nodeType": "YulTypedName",
									"src": "14771:5:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "ret",
									"nativeSrc": "14781:3:12",
									"nodeType": "YulTypedName",
									"src": "14781:3:12",
									"type": ""
								}
							],
							"src": "14742:136:12"
						},
						{
							"body": {
								"nativeSrc": "15086:297:12",
								"nodeType": "YulBlock",
								"src": "15086:297:12",
								"statements": [
									{
										"nativeSrc": "15096:29:12",
										"nodeType": "YulVariableDeclaration",
										"src": "15096:29:12",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "15114:3:12",
															"nodeType": "YulLiteral",
															"src": "15114:3:12",
															"type": "",
															"value": "160"
														},
														{
															"kind": "number",
															"nativeSrc": "15119:1:12",
															"nodeType": "YulLiteral",
															"src": "15119:1:12",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nativeSrc": "15110:3:12",
														"nodeType": "YulIdentifier",
														"src": "15110:3:12"
													},
													"nativeSrc": "15110:11:12",
													"nodeType": "YulFunctionCall",
													"src": "15110:11:12"
												},
												{
													"kind": "number",
													"nativeSrc": "15123:1:12",
													"nodeType": "YulLiteral",
													"src": "15123:1:12",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nativeSrc": "15106:3:12",
												"nodeType": "YulIdentifier",
												"src": "15106:3:12"
											},
											"nativeSrc": "15106:19:12",
											"nodeType": "YulFunctionCall",
											"src": "15106:19:12"
										},
										"variables": [
											{
												"name": "_1",
												"nativeSrc": "15100:2:12",
												"nodeType": "YulTypedName",
												"src": "15100:2:12",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "15141:9:12",
													"nodeType": "YulIdentifier",
													"src": "15141:9:12"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nativeSrc": "15156:6:12",
															"nodeType": "YulIdentifier",
															"src": "15156:6:12"
														},
														{
															"name": "_1",
															"nativeSrc": "15164:2:12",
															"nodeType": "YulIdentifier",
															"src": "15164:2:12"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "15152:3:12",
														"nodeType": "YulIdentifier",
														"src": "15152:3:12"
													},
													"nativeSrc": "15152:15:12",
													"nodeType": "YulFunctionCall",
													"src": "15152:15:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "15134:6:12",
												"nodeType": "YulIdentifier",
												"src": "15134:6:12"
											},
											"nativeSrc": "15134:34:12",
											"nodeType": "YulFunctionCall",
											"src": "15134:34:12"
										},
										"nativeSrc": "15134:34:12",
										"nodeType": "YulExpressionStatement",
										"src": "15134:34:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "15188:9:12",
															"nodeType": "YulIdentifier",
															"src": "15188:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "15199:2:12",
															"nodeType": "YulLiteral",
															"src": "15199:2:12",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "15184:3:12",
														"nodeType": "YulIdentifier",
														"src": "15184:3:12"
													},
													"nativeSrc": "15184:18:12",
													"nodeType": "YulFunctionCall",
													"src": "15184:18:12"
												},
												{
													"arguments": [
														{
															"name": "value1",
															"nativeSrc": "15208:6:12",
															"nodeType": "YulIdentifier",
															"src": "15208:6:12"
														},
														{
															"name": "_1",
															"nativeSrc": "15216:2:12",
															"nodeType": "YulIdentifier",
															"src": "15216:2:12"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "15204:3:12",
														"nodeType": "YulIdentifier",
														"src": "15204:3:12"
													},
													"nativeSrc": "15204:15:12",
													"nodeType": "YulFunctionCall",
													"src": "15204:15:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "15177:6:12",
												"nodeType": "YulIdentifier",
												"src": "15177:6:12"
											},
											"nativeSrc": "15177:43:12",
											"nodeType": "YulFunctionCall",
											"src": "15177:43:12"
										},
										"nativeSrc": "15177:43:12",
										"nodeType": "YulExpressionStatement",
										"src": "15177:43:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "15240:9:12",
															"nodeType": "YulIdentifier",
															"src": "15240:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "15251:2:12",
															"nodeType": "YulLiteral",
															"src": "15251:2:12",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "15236:3:12",
														"nodeType": "YulIdentifier",
														"src": "15236:3:12"
													},
													"nativeSrc": "15236:18:12",
													"nodeType": "YulFunctionCall",
													"src": "15236:18:12"
												},
												{
													"name": "value2",
													"nativeSrc": "15256:6:12",
													"nodeType": "YulIdentifier",
													"src": "15256:6:12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "15229:6:12",
												"nodeType": "YulIdentifier",
												"src": "15229:6:12"
											},
											"nativeSrc": "15229:34:12",
											"nodeType": "YulFunctionCall",
											"src": "15229:34:12"
										},
										"nativeSrc": "15229:34:12",
										"nodeType": "YulExpressionStatement",
										"src": "15229:34:12"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "15283:9:12",
															"nodeType": "YulIdentifier",
															"src": "15283:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "15294:2:12",
															"nodeType": "YulLiteral",
															"src": "15294:2:12",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "15279:3:12",
														"nodeType": "YulIdentifier",
														"src": "15279:3:12"
													},
													"nativeSrc": "15279:18:12",
													"nodeType": "YulFunctionCall",
													"src": "15279:18:12"
												},
												{
													"kind": "number",
													"nativeSrc": "15299:3:12",
													"nodeType": "YulLiteral",
													"src": "15299:3:12",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "15272:6:12",
												"nodeType": "YulIdentifier",
												"src": "15272:6:12"
											},
											"nativeSrc": "15272:31:12",
											"nodeType": "YulFunctionCall",
											"src": "15272:31:12"
										},
										"nativeSrc": "15272:31:12",
										"nodeType": "YulExpressionStatement",
										"src": "15272:31:12"
									},
									{
										"nativeSrc": "15312:65:12",
										"nodeType": "YulAssignment",
										"src": "15312:65:12",
										"value": {
											"arguments": [
												{
													"name": "value3",
													"nativeSrc": "15349:6:12",
													"nodeType": "YulIdentifier",
													"src": "15349:6:12"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "15361:9:12",
															"nodeType": "YulIdentifier",
															"src": "15361:9:12"
														},
														{
															"kind": "number",
															"nativeSrc": "15372:3:12",
															"nodeType": "YulLiteral",
															"src": "15372:3:12",
															"type": "",
															"value": "128"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "15357:3:12",
														"nodeType": "YulIdentifier",
														"src": "15357:3:12"
													},
													"nativeSrc": "15357:19:12",
													"nodeType": "YulFunctionCall",
													"src": "15357:19:12"
												}
											],
											"functionName": {
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "15320:28:12",
												"nodeType": "YulIdentifier",
												"src": "15320:28:12"
											},
											"nativeSrc": "15320:57:12",
											"nodeType": "YulFunctionCall",
											"src": "15320:57:12"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "15312:4:12",
												"nodeType": "YulIdentifier",
												"src": "15312:4:12"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
							"nativeSrc": "14883:500:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "15031:9:12",
									"nodeType": "YulTypedName",
									"src": "15031:9:12",
									"type": ""
								},
								{
									"name": "value3",
									"nativeSrc": "15042:6:12",
									"nodeType": "YulTypedName",
									"src": "15042:6:12",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "15050:6:12",
									"nodeType": "YulTypedName",
									"src": "15050:6:12",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "15058:6:12",
									"nodeType": "YulTypedName",
									"src": "15058:6:12",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "15066:6:12",
									"nodeType": "YulTypedName",
									"src": "15066:6:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "15077:4:12",
									"nodeType": "YulTypedName",
									"src": "15077:4:12",
									"type": ""
								}
							],
							"src": "14883:500:12"
						},
						{
							"body": {
								"nativeSrc": "15468:169:12",
								"nodeType": "YulBlock",
								"src": "15468:169:12",
								"statements": [
									{
										"body": {
											"nativeSrc": "15514:16:12",
											"nodeType": "YulBlock",
											"src": "15514:16:12",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "15523:1:12",
																"nodeType": "YulLiteral",
																"src": "15523:1:12",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "15526:1:12",
																"nodeType": "YulLiteral",
																"src": "15526:1:12",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "15516:6:12",
															"nodeType": "YulIdentifier",
															"src": "15516:6:12"
														},
														"nativeSrc": "15516:12:12",
														"nodeType": "YulFunctionCall",
														"src": "15516:12:12"
													},
													"nativeSrc": "15516:12:12",
													"nodeType": "YulExpressionStatement",
													"src": "15516:12:12"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "15489:7:12",
															"nodeType": "YulIdentifier",
															"src": "15489:7:12"
														},
														{
															"name": "headStart",
															"nativeSrc": "15498:9:12",
															"nodeType": "YulIdentifier",
															"src": "15498:9:12"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "15485:3:12",
														"nodeType": "YulIdentifier",
														"src": "15485:3:12"
													},
													"nativeSrc": "15485:23:12",
													"nodeType": "YulFunctionCall",
													"src": "15485:23:12"
												},
												{
													"kind": "number",
													"nativeSrc": "15510:2:12",
													"nodeType": "YulLiteral",
													"src": "15510:2:12",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "15481:3:12",
												"nodeType": "YulIdentifier",
												"src": "15481:3:12"
											},
											"nativeSrc": "15481:32:12",
											"nodeType": "YulFunctionCall",
											"src": "15481:32:12"
										},
										"nativeSrc": "15478:52:12",
										"nodeType": "YulIf",
										"src": "15478:52:12"
									},
									{
										"nativeSrc": "15539:29:12",
										"nodeType": "YulVariableDeclaration",
										"src": "15539:29:12",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "15558:9:12",
													"nodeType": "YulIdentifier",
													"src": "15558:9:12"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "15552:5:12",
												"nodeType": "YulIdentifier",
												"src": "15552:5:12"
											},
											"nativeSrc": "15552:16:12",
											"nodeType": "YulFunctionCall",
											"src": "15552:16:12"
										},
										"variables": [
											{
												"name": "value",
												"nativeSrc": "15543:5:12",
												"nodeType": "YulTypedName",
												"src": "15543:5:12",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "15601:5:12",
													"nodeType": "YulIdentifier",
													"src": "15601:5:12"
												}
											],
											"functionName": {
												"name": "validator_revert_bytes4",
												"nativeSrc": "15577:23:12",
												"nodeType": "YulIdentifier",
												"src": "15577:23:12"
											},
											"nativeSrc": "15577:30:12",
											"nodeType": "YulFunctionCall",
											"src": "15577:30:12"
										},
										"nativeSrc": "15577:30:12",
										"nodeType": "YulExpressionStatement",
										"src": "15577:30:12"
									},
									{
										"nativeSrc": "15616:15:12",
										"nodeType": "YulAssignment",
										"src": "15616:15:12",
										"value": {
											"name": "value",
											"nativeSrc": "15626:5:12",
											"nodeType": "YulIdentifier",
											"src": "15626:5:12"
										},
										"variableNames": [
											{
												"name": "value0",
												"nativeSrc": "15616:6:12",
												"nodeType": "YulIdentifier",
												"src": "15616:6:12"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_bytes4_fromMemory",
							"nativeSrc": "15388:249:12",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "15434:9:12",
									"nodeType": "YulTypedName",
									"src": "15434:9:12",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "15445:7:12",
									"nodeType": "YulTypedName",
									"src": "15445:7:12",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "15457:6:12",
									"nodeType": "YulTypedName",
									"src": "15457:6:12",
									"type": ""
								}
							],
							"src": "15388:249:12"
						}
					]
				},
				"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint96(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_DropStatus_$2989__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 4))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_enum$_DropStatus_$2989(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 4)) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_struct_TokenOwnership(value, pos)\n    {\n        mstore(pos, and(mload(value), sub(shl(160, 1), 1)))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), 0xffffffffffffffff))\n        mstore(add(pos, 0x40), iszero(iszero(mload(add(value, 0x40)))))\n        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), 0xffffff))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_TokenOwnership_$3771_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenOwnership_$3771_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            abi_encode_struct_TokenOwnership(mload(srcPtr), pos)\n            pos := add(pos, 0x80)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_encode_tuple_t_struct$_TokenOwnership_$3771_memory_ptr__to_t_struct$_TokenOwnership_$3771_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        abi_encode_struct_TokenOwnership(value0, headStart)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_string(value1, abi_encode_string(value0, pos))\n    }\n    function abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
				"id": 12,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "608060405260043610610231575f3560e01c8063833b94991161012c578063b19960e6116100af578063c87b56dd11610076578063c87b56dd14610661578063e6798baa14610680578063e985e9c514610697578063f2fde38b146106de578063fe776953146106fd578063ff1b65561461071457005b8063b19960e6146105bb578063b19fde5a146105cf578063b88d4fde14610603578063c23dc68f14610616578063c62001bd1461064257005b806395d89b41116100f357806395d89b411461054257806399a2557a146105565780639a4f41ba14610575578063a0712d6814610589578063a22cb4651461059c57005b8063833b9499146104b55780638462151c146104cf57806386879235146104fb57806387f65c91146105105780638da5cb5b1461052557005b806329510d34116101b45780634b962d101161017b5780634b962d10146104185780635bbb2177146104375780636352211e1461046357806370a0823114610482578063715018a6146104a157005b806329510d34146103735780632a55205a146103865780633ccfd60b146103c457806342842e0e146103d857806346b00b6d146103eb57005b8063081812fc116101f8578063081812fc146102e1578063095ea7b31461031857806318160ddd1461032b57806323b872dd1461034d578063242261ac1461036057005b806301ffc9a71461023a57806304634d8d1461026e578063046ef9a51461028d5780630675b7c6146102a157806306fdde03146102c057005b3661023857005b005b348015610245575f80fd5b50610259610254366004611d70565b610747565b60405190151581526020015b60405180910390f35b348015610279575f80fd5b50610238610288366004611da8565b610766565b348015610298575f80fd5b5061023861077c565b3480156102ac575f80fd5b506102386102bb366004611de8565b610932565b3480156102cb575f80fd5b506102d4610999565b6040516102659190611e82565b3480156102ec575f80fd5b506103006102fb366004611e94565b610a29565b6040516001600160a01b039091168152602001610265565b610238610326366004611eab565b610a62565b348015610336575f80fd5b5061033f610a6e565b604051908152602001610265565b61023861035b366004611ed3565b610a83565b61023861036e366004611f0c565b610bdd565b610238610381366004611f0c565b610e02565b348015610391575f80fd5b506103a56103a0366004611f0c565b61102d565b604080516001600160a01b039093168352602083019190915201610265565b3480156103cf575f80fd5b506102386110d7565b6102386103e6366004611ed3565b61110b565b3480156103f6575f80fd5b50600b5461040b90600160a01b900460ff1681565b6040516102659190611f40565b348015610423575f80fd5b50610238610432366004611f66565b61112a565b348015610442575f80fd5b50610456610451366004611f84565b611196565b604051610265919061201e565b34801561046e575f80fd5b5061030061047d366004611e94565b6111e1565b34801561048d575f80fd5b5061033f61049c36600461206b565b6111eb565b3480156104ac575f80fd5b5061023861122f565b3480156104c0575f80fd5b5061033f666a94d74f43000081565b3480156104da575f80fd5b506104ee6104e936600461206b565b611242565b6040516102659190612084565b348015610506575f80fd5b5061033f611a0a81565b34801561051b575f80fd5b5061033f610d0681565b348015610530575f80fd5b50600b546001600160a01b0316610300565b34801561054d575f80fd5b506102d4611279565b348015610561575f80fd5b506104ee6105703660046120bb565b611288565b348015610580575f80fd5b5061033f611295565b610238610597366004611e94565b6112a8565b3480156105a7575f80fd5b506102386105b63660046120eb565b611489565b3480156105c6575f80fd5b5061033f600381565b3480156105da575f80fd5b5061033f6105e936600461206b565b6001600160a01b03165f908152600d602052604090205490565b61023861061136600461212d565b6114f4565b348015610621575f80fd5b50610635610630366004611e94565b611535565b6040516102659190612202565b34801561064d575f80fd5b5061023861065c366004611e94565b61159b565b34801561066c575f80fd5b506102d461067b366004611e94565b6115a8565b34801561068b575f80fd5b506328f750325461033f565b3480156106a2575f80fd5b506102596106b1366004612210565b6001600160a01b039182165f90815260076020908152604080832093909416825291909152205460ff1690565b3480156106e9575f80fd5b506102386106f836600461206b565b611661565b348015610708575f80fd5b5061033f6366365b8081565b34801561071f575f80fd5b5061033f7f5158cf3ac201d8d9dfe63ac7c7d1e7aa58b7c33426665c9bf643e0003e095e2f81565b5f610751826116a0565b806107605750610760826116ed565b92915050565b61076e611721565b610778828261174e565b5050565b5f600b54600160a01b900460ff16600381111561079b5761079b611f2c565b036107b95760405163af79b43760e01b815260040160405180910390fd5b6366365b804210156107de5760405163024fbaa960e41b815260040160405180910390fd5b335f908152600d6020526040812054900361080c57604051637c75aa6f60e11b815260040160405180910390fd5b335f908152600d6020908152604080832054600c909252909120546003908290610837908290612255565b6108419190612255565b1180156108595750600b546001600160a01b03163314155b15610877576040516367eec83360e01b815260040160405180910390fd5b323314610897576040516358516b3f60e01b815260040160405180910390fd5b335f908152600d6020908152604080832054600c90925282208054919283926108c1908490612255565b9091555050335f908152600d60205260408120819055601080548392906108e9908490612268565b909155506108f9905033826117f0565b60405181815233907ff07265907aaf7b6329bb73e97ea492ccbbc0678c94313e1f8331013a2e269d339060200160405180910390a25050565b61093a611721565b6012805460ff1916600117905560136109548284836122fe565b507f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c61097e6118aa565b604080519182525f1960208301520160405180910390a15050565b6060600280546109a89061227b565b80601f01602080910402602001604051908101604052809291908181526020018280546109d49061227b565b8015610a1f5780601f106109f657610100808354040283529160200191610a1f565b820191905f5260205f20905b815481529060010190602001808311610a0257829003601f168201915b5050505050905090565b5f610a33826118bc565b610a4757610a476333d1c03960e21b61190a565b505f908152600660205260409020546001600160a01b031690565b61077882826001611912565b5f610a776118aa565b6001545f540303905090565b5f610a8d826119b3565b6001600160a01b039485169490915081168414610ab357610ab362a1148160e81b61190a565b5f8281526006602052604090208054338082146001600160a01b03881690911417610af657610ae286336106b1565b610af657610af6632ce44b5f60e11b61190a565b8015610b00575f82555b6001600160a01b038681165f9081526005602052604080822080545f19019055918716808252919020805460010190554260a01b17600160e11b175f85815260046020526040812091909155600160e11b84169003610b8c57600184015f818152600460205260408120549003610b8a575f548114610b8a575f8181526004602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4805f03610bd457610bd4633a954ecd60e21b61190a565b50505050505050565b5f600b54600160a01b900460ff166003811115610bfc57610bfc611f2c565b03610c1a5760405163af79b43760e01b815260040160405180910390fd5b6366365b80421115610c3f57604051633844da5760e21b815260040160405180910390fd5b81610c5181666a94d74f4300006123b8565b341015610c715760405163356680b760e01b815260040160405180910390fd5b335f908152600d6020908152604080832054600c9092529091205484916003918391610c9c91612255565b610ca69190612255565b118015610cbe5750600b546001600160a01b03163314155b15610cdc576040516367eec83360e01b815260040160405180910390fd5b83601054611a0a610ced9190612268565b6001610cf75f5490565b610d019084612255565b610d0b9190612268565b1115610d2a5760405163c30436e960e01b815260040160405180910390fd5b838060115414610d4d57604051637c75aa6f60e11b815260040160405180910390fd5b323314610d6d576040516358516b3f60e01b815260040160405180910390fd5b600f5f8154610d7b906123cf565b919050819055508560105f828254610d939190612255565b9091555050335f818152600d602090815260408083208a9055600f548352600e82529182902080546001600160a01b0319168417905590518881527f954e53aaa9ee9f9ae7f4cc7c0ba01de261f35bd07352e3c3383ea3b45ad216d491015b60405180910390a2505050505050565b5f600b54600160a01b900460ff166003811115610e2157610e21611f2c565b03610e3f5760405163af79b43760e01b815260040160405180910390fd5b6366365b80421080610e5f5750610e5c6366365b80612a30612255565b42115b15610e7d576040516302664e7160e11b815260040160405180910390fd5b81610e8f81666a94d74f4300006123b8565b341015610eaf5760405163356680b760e01b815260040160405180910390fd5b335f908152600d6020908152604080832054600c9092529091205484916003918391610eda91612255565b610ee49190612255565b118015610efc5750600b546001600160a01b03163314155b15610f1a576040516367eec83360e01b815260040160405180910390fd5b83601054611a0a610f2b9190612268565b6001610f355f5490565b610f3f9084612255565b610f499190612268565b1115610f685760405163c30436e960e01b815260040160405180910390fd5b838060115414610f8b57604051637c75aa6f60e11b815260040160405180910390fd5b323314610fab576040516358516b3f60e01b815260040160405180910390fd5b8460115414610fcd57604051637c75aa6f60e11b815260040160405180910390fd5b335f908152600c602052604081208054889290610feb908490612255565b90915550610ffb905033876117f0565b60405186815233907fda47e427fb170a95b4539ea720c3caf8ad5a319335b1a85fb3a8db83a61159c090602001610df2565b5f828152600a602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b03169282019290925282916110a15750604080518082019091526009546001600160a01b0381168252600160a01b90046001600160601b031660208201525b60208101515f90612710906110bf906001600160601b0316876123b8565b6110c991906123e7565b915196919550909350505050565b6110df611721565b60405133904780156108fc02915f818181858888f19350505050158015611108573d5f803e3d5ffd5b50565b61112583838360405180602001604052805f8152506114f4565b505050565b611132611721565b600b805482919060ff60a01b1916600160a01b83600381111561115757611157611f2c565b02179055507f3bc110370c8d062d875866567d288433541b3f5f05c98fa991b82ef9f63158818160405161118b9190611f40565b60405180910390a150565b60408051828152600583901b8082016020019092526060915b80156111d957601f1980820191860101355f6111ca82611535565b84840160200152506111af9050565b509392505050565b5f610760826119b3565b5f6001600160a01b03821661120a5761120a6323d3ad8160e21b61190a565b506001600160a01b03165f9081526005602052604090205467ffffffffffffffff1690565b611237611721565b6112405f611a52565b565b60605f61124d6118aa565b90505f6112585f5490565b905060608183146112715761126e858484611aa3565b90505b949350505050565b6060600380546109a89061227b565b6060611271848484611aa3565b6112a56366365b80612a30612255565b81565b5f600b54600160a01b900460ff1660038111156112c7576112c7611f2c565b036112e55760405163af79b43760e01b815260040160405180910390fd5b6112f56366365b80612a30612255565b4210156113155760405163cd967e3560e01b815260040160405180910390fd5b8061132781666a94d74f4300006123b8565b3410156113475760405163356680b760e01b815260040160405180910390fd5b335f908152600d6020908152604080832054600c909252909120548391600391839161137291612255565b61137c9190612255565b1180156113945750600b546001600160a01b03163314155b156113b2576040516367eec83360e01b815260040160405180910390fd5b82601054611a0a6113c39190612268565b60016113cd5f5490565b6113d79084612255565b6113e19190612268565b11156114005760405163c30436e960e01b815260040160405180910390fd5b323314611420576040516358516b3f60e01b815260040160405180910390fd5b335f908152600c60205260408120805486929061143e908490612255565b9091555061144e905033856117f0565b60405184815233907ff07265907aaf7b6329bb73e97ea492ccbbc0678c94313e1f8331013a2e269d339060200160405180910390a250505050565b335f8181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6114ff848484610a83565b6001600160a01b0383163b1561152f5761151b84848484611bae565b61152f5761152f6368d2bf6b60e11b61190a565b50505050565b604080516080810182525f8082526020820181905291810182905260608101919091526115606118aa565b8210611596575f54821015611596575b5f8281526004602052604090205461158d575f1990910190611570565b61076082611c8c565b919050565b6115a3611721565b601155565b60125460609060ff166115bd57610760611d09565b6115c6826118bc565b6115e357604051630a14c4b560e41b815260040160405180910390fd5b5f6115ec611d09565b6012549091505f9060ff161561160a5761160584611d18565b61161a565b60405180602001604052805f8152505b90505f828260405160200161163092919061241d565b604051602081830303815290604052905082515f036112715760405180602001604052805f81525095945050505050565b611669611721565b6001600160a01b03811661169757604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61110881611a52565b5f6301ffc9a760e01b6001600160e01b0319831614806116d057506380ac58cd60e01b6001600160e01b03198316145b806107605750506001600160e01b031916635b5e139f60e01b1490565b5f6001600160e01b0319821663152a902d60e11b148061076057506301ffc9a760e01b6001600160e01b0319831614610760565b600b546001600160a01b031633146112405760405163118cdaa760e01b815233600482015260240161168e565b6127106001600160601b03821681101561178d57604051636f483d0960e01b81526001600160601b03831660048201526024810182905260440161168e565b6001600160a01b0383166117b657604051635b6cc80560e11b81525f600482015260240161168e565b50604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600955565b5f80549082900361180b5761180b63b562e8dd60e01b61190a565b5f8181526004602090815260408083206001600160a01b0387164260a01b6001881460e11b1781179091558084526005909252822080546801000000000000000186020190559081900361186857611868622e076360e81b61190a565b818301825b80835f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a481816001019150810361186d57505f5550505050565b5f6118b76328f750325490565b905090565b5f816118c66118aa565b11611596575f54821015611596575f5b505f82815260046020526040812054908190036118fd576118f683612431565b92506118d6565b600160e01b161592915050565b805f5260045ffd5b5f61191c836111e1565b90508180156119345750336001600160a01b03821614155b156119575761194381336106b1565b611957576119576367d9dca160e11b61190a565b5f8381526006602052604080822080546001600160a01b0319166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b5f816119bd6118aa565b11611a4257505f81815260046020526040902054805f03611a30575f5482106119f0576119f0636f96cda160e11b61190a565b5b505f19015f8181526004602052604090205480156119f157600160e01b81165f03611a1b57919050565b611a2b636f96cda160e11b61190a565b6119f1565b600160e01b81165f03611a4257919050565b611596636f96cda160e11b61190a565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6060818310611abc57611abc631960ccad60e11b61190a565b611ac46118aa565b831015611ad657611ad36118aa565b92505b5f5480808410611ae4578093505b5f611aee876111eb565b9050848610611afa57505f5b8015611ba4578086860311611b0e57508484035b604080516001830160051b81019182905294505f611b2b88611535565b90505f8160400151611b3b575080515b5f5b611b468a611c8c565b925060408301515f8114611b5c575f9250611b81565b835115611b6857835192505b8b831860601b611b81576001820191508a8260051b8a01525b5060018a01995083604052888a1480611b9957508481145b15611b3d5787525050505b5050509392505050565b604051630a85bd0160e11b81525f906001600160a01b0385169063150b7a0290611be2903390899088908890600401612446565b6020604051808303815f875af1925050508015611c1c575060408051601f3d908101601f19168201909252611c1991810190612482565b60015b611c6f573d808015611c49576040519150601f19603f3d011682016040523d82523d5f602084013e611c4e565b606091505b5080515f03611c6757611c676368d2bf6b60e11b61190a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080810182525f8082526020820181905291810182905260608101919091525f8281526004602052604090205461076090604080516080810182526001600160a01b038316815260a083901c67ffffffffffffffff166020820152600160e01b831615159181019190915260e89190911c606082015290565b6060601380546109a89061227b565b606060a06040510180604052602081039150505f815280825b600183039250600a81066030018353600a900480611d315750819003601f19909101908152919050565b6001600160e01b031981168114611108575f80fd5b5f60208284031215611d80575f80fd5b8135611d8b81611d5b565b9392505050565b80356001600160a01b0381168114611596575f80fd5b5f8060408385031215611db9575f80fd5b611dc283611d92565b915060208301356001600160601b0381168114611ddd575f80fd5b809150509250929050565b5f8060208385031215611df9575f80fd5b823567ffffffffffffffff80821115611e10575f80fd5b818501915085601f830112611e23575f80fd5b813581811115611e31575f80fd5b866020828501011115611e42575f80fd5b60209290920196919550909350505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f611d8b6020830184611e54565b5f60208284031215611ea4575f80fd5b5035919050565b5f8060408385031215611ebc575f80fd5b611ec583611d92565b946020939093013593505050565b5f805f60608486031215611ee5575f80fd5b611eee84611d92565b9250611efc60208501611d92565b9150604084013590509250925092565b5f8060408385031215611f1d575f80fd5b50508035926020909101359150565b634e487b7160e01b5f52602160045260245ffd5b6020810160048310611f6057634e487b7160e01b5f52602160045260245ffd5b91905290565b5f60208284031215611f76575f80fd5b813560048110611d8b575f80fd5b5f8060208385031215611f95575f80fd5b823567ffffffffffffffff80821115611fac575f80fd5b818501915085601f830112611fbf575f80fd5b813581811115611fcd575f80fd5b8660208260051b8501011115611e42575f80fd5b80516001600160a01b0316825260208082015167ffffffffffffffff169083015260408082015115159083015260609081015162ffffff16910152565b602080825282518282018190525f9190848201906040850190845b8181101561205f5761204c838551611fe1565b9284019260809290920191600101612039565b50909695505050505050565b5f6020828403121561207b575f80fd5b611d8b82611d92565b602080825282518282018190525f9190848201906040850190845b8181101561205f5783518352928401929184019160010161209f565b5f805f606084860312156120cd575f80fd5b6120d684611d92565b95602085013595506040909401359392505050565b5f80604083850312156120fc575f80fd5b61210583611d92565b915060208301358015158114611ddd575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215612140575f80fd5b61214985611d92565b935061215760208601611d92565b925060408501359150606085013567ffffffffffffffff8082111561217a575f80fd5b818701915087601f83011261218d575f80fd5b81358181111561219f5761219f612119565b604051601f8201601f19908116603f011681019083821181831017156121c7576121c7612119565b816040528281528a60208487010111156121df575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b608081016107608284611fe1565b5f8060408385031215612221575f80fd5b61222a83611d92565b915061223860208401611d92565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561076057610760612241565b8181038181111561076057610760612241565b600181811c9082168061228f57607f821691505b6020821081036122ad57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561112557805f5260205f20601f840160051c810160208510156122d85750805b601f840160051c820191505b818110156122f7575f81556001016122e4565b5050505050565b67ffffffffffffffff83111561231657612316612119565b61232a83612324835461227b565b836122b3565b5f601f84116001811461235b575f85156123445750838201355b5f19600387901b1c1916600186901b1783556122f7565b5f83815260208120601f198716915b8281101561238a578685013582556020948501946001909201910161236a565b50868210156123a6575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b808202811582820484141761076057610760612241565b5f600182016123e0576123e0612241565b5060010190565b5f8261240157634e487b7160e01b5f52601260045260245ffd5b500490565b5f81518060208401855e5f93019283525090919050565b5f61127161242b8386612406565b84612406565b5f8161243f5761243f612241565b505f190190565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061247890830184611e54565b9695505050505050565b5f60208284031215612492575f80fd5b8151611d8b81611d5b56fea2646970667358221220b13bd27fe976b9c80d7f049ec1ea9ffe4285f2dc41fb36a93af9dac3a399ff2b64736f6c63430008190033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x231 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x833B9499 GT PUSH2 0x12C JUMPI DUP1 PUSH4 0xB19960E6 GT PUSH2 0xAF JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0xE6798BAA EQ PUSH2 0x680 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x697 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0xFE776953 EQ PUSH2 0x6FD JUMPI DUP1 PUSH4 0xFF1B6556 EQ PUSH2 0x714 JUMPI STOP JUMPDEST DUP1 PUSH4 0xB19960E6 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xB19FDE5A EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x603 JUMPI DUP1 PUSH4 0xC23DC68F EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0xC62001BD EQ PUSH2 0x642 JUMPI STOP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0x99A2557A EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0x9A4F41BA EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x59C JUMPI STOP JUMPDEST DUP1 PUSH4 0x833B9499 EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x86879235 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x87F65C91 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x525 JUMPI STOP JUMPDEST DUP1 PUSH4 0x29510D34 GT PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x4B962D10 GT PUSH2 0x17B JUMPI DUP1 PUSH4 0x4B962D10 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x5BBB2177 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4A1 JUMPI STOP JUMPDEST DUP1 PUSH4 0x29510D34 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x46B00B6D EQ PUSH2 0x3EB JUMPI STOP JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x242261AC EQ PUSH2 0x360 JUMPI STOP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x46EF9A5 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x675B7C6 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2C0 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x238 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D70 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA8 JUMP JUMPDEST PUSH2 0x766 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x77C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1DE8 JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1E82 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x265 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EAB JUMP JUMPDEST PUSH2 0xA62 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x265 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x1ED3 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x238 PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0xE02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x102D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x265 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ED3 JUMP JUMPDEST PUSH2 0x110B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x40B SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1F40 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x112A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x456 PUSH2 0x451 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x201E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x47D CALLDATASIZE PUSH1 0x4 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x11E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x49C CALLDATASIZE PUSH1 0x4 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x11EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x122F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH7 0x6A94D74F430000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EE PUSH2 0x4E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x2084 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x506 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x1A0A DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0xD06 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x530 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x300 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x1279 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EE PUSH2 0x570 CALLDATASIZE PUSH1 0x4 PUSH2 0x20BB JUMP JUMPDEST PUSH2 0x1288 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x1295 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x597 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x12A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x5B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x20EB JUMP JUMPDEST PUSH2 0x1489 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH1 0x3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x5E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x206B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x611 CALLDATASIZE PUSH1 0x4 PUSH2 0x212D JUMP JUMPDEST PUSH2 0x14F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x635 PUSH2 0x630 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x1535 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x2202 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x65C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x159B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x67B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x15A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH4 0x28F75032 SLOAD PUSH2 0x33F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x6B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x6F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x1661 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x708 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH4 0x66365B80 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH32 0x5158CF3AC201D8D9DFE63AC7C7D1E7AA58B7C33426665C9BF643E0003E095E2F DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x751 DUP3 PUSH2 0x16A0 JUMP JUMPDEST DUP1 PUSH2 0x760 JUMPI POP PUSH2 0x760 DUP3 PUSH2 0x16ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x76E PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x778 DUP3 DUP3 PUSH2 0x174E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x79B JUMPI PUSH2 0x79B PUSH2 0x1F2C JUMP JUMPDEST SUB PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAF79B437 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x66365B80 TIMESTAMP LT ISZERO PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH4 0x24FBAA9 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x80C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C75AA6F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x3 SWAP1 DUP3 SWAP1 PUSH2 0x837 SWAP1 DUP3 SWAP1 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x841 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x859 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67EEC833 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN CALLER EQ PUSH2 0x897 JUMPI PUSH1 0x40 MLOAD PUSH4 0x58516B3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x8C1 SWAP1 DUP5 SWAP1 PUSH2 0x2255 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x8E9 SWAP1 DUP5 SWAP1 PUSH2 0x2268 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x8F9 SWAP1 POP CALLER DUP3 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF07265907AAF7B6329BB73E97EA492CCBBC0678C94313E1F8331013A2E269D33 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x93A PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x13 PUSH2 0x954 DUP3 DUP5 DUP4 PUSH2 0x22FE JUMP JUMPDEST POP PUSH32 0x6BD5C950A8D8DF17F772F5AF37CB3655737899CBF903264B9795592DA439661C PUSH2 0x97E PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH0 NOT PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x9A8 SWAP1 PUSH2 0x227B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9D4 SWAP1 PUSH2 0x227B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xA33 DUP3 PUSH2 0x18BC JUMP JUMPDEST PUSH2 0xA47 JUMPI PUSH2 0xA47 PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH2 0x190A JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x778 DUP3 DUP3 PUSH1 0x1 PUSH2 0x1912 JUMP JUMPDEST PUSH0 PUSH2 0xA77 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xA8D DUP3 PUSH2 0x19B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0xAB3 JUMPI PUSH2 0xAB3 PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH2 0x190A JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0xAF6 JUMPI PUSH2 0xAE2 DUP7 CALLER PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0xAF6 JUMPI PUSH2 0xAF6 PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB00 JUMPI PUSH0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0xB8C JUMPI PUSH1 0x1 DUP5 ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xB8A JUMPI PUSH0 SLOAD DUP2 EQ PUSH2 0xB8A JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 DUP1 LOG4 DUP1 PUSH0 SUB PUSH2 0xBD4 JUMPI PUSH2 0xBD4 PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH2 0x190A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBFC JUMPI PUSH2 0xBFC PUSH2 0x1F2C JUMP JUMPDEST SUB PUSH2 0xC1A JUMPI PUSH1 0x40 MLOAD PUSH4 0xAF79B437 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x66365B80 TIMESTAMP GT ISZERO PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH4 0x3844DA57 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xC51 DUP2 PUSH7 0x6A94D74F430000 PUSH2 0x23B8 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH4 0x356680B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP5 SWAP2 PUSH1 0x3 SWAP2 DUP4 SWAP2 PUSH2 0xC9C SWAP2 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0xCBE JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xCDC JUMPI PUSH1 0x40 MLOAD PUSH4 0x67EEC833 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x10 SLOAD PUSH2 0x1A0A PUSH2 0xCED SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xCF7 PUSH0 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD01 SWAP1 DUP5 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0xD0B SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST GT ISZERO PUSH2 0xD2A JUMPI PUSH1 0x40 MLOAD PUSH4 0xC30436E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP1 PUSH1 0x11 SLOAD EQ PUSH2 0xD4D JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C75AA6F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN CALLER EQ PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH4 0x58516B3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF PUSH0 DUP2 SLOAD PUSH2 0xD7B SWAP1 PUSH2 0x23CF JUMP JUMPDEST SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x10 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD93 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 SWAP1 SSTORE PUSH1 0xF SLOAD DUP4 MSTORE PUSH1 0xE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE SWAP1 MLOAD DUP9 DUP2 MSTORE PUSH32 0x954E53AAA9EE9F9AE7F4CC7C0BA01DE261F35BD07352E3C3383EA3B45AD216D4 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE21 JUMPI PUSH2 0xE21 PUSH2 0x1F2C JUMP JUMPDEST SUB PUSH2 0xE3F JUMPI PUSH1 0x40 MLOAD PUSH4 0xAF79B437 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x66365B80 TIMESTAMP LT DUP1 PUSH2 0xE5F JUMPI POP PUSH2 0xE5C PUSH4 0x66365B80 PUSH2 0x2A30 PUSH2 0x2255 JUMP JUMPDEST TIMESTAMP GT JUMPDEST ISZERO PUSH2 0xE7D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2664E71 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xE8F DUP2 PUSH7 0x6A94D74F430000 PUSH2 0x23B8 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xEAF JUMPI PUSH1 0x40 MLOAD PUSH4 0x356680B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP5 SWAP2 PUSH1 0x3 SWAP2 DUP4 SWAP2 PUSH2 0xEDA SWAP2 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0xEE4 SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0xEFC JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xF1A JUMPI PUSH1 0x40 MLOAD PUSH4 0x67EEC833 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x10 SLOAD PUSH2 0x1A0A PUSH2 0xF2B SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xF35 PUSH0 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF3F SWAP1 DUP5 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0xF49 SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST GT ISZERO PUSH2 0xF68 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC30436E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP1 PUSH1 0x11 SLOAD EQ PUSH2 0xF8B JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C75AA6F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN CALLER EQ PUSH2 0xFAB JUMPI PUSH1 0x40 MLOAD PUSH4 0x58516B3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x11 SLOAD EQ PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH4 0x7C75AA6F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xFEB SWAP1 DUP5 SWAP1 PUSH2 0x2255 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xFFB SWAP1 POP CALLER DUP8 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE CALLER SWAP1 PUSH32 0xDA47E427FB170A95B4539EA720C3CAF8AD5A319335B1A85FB3A8DB83A61159C0 SWAP1 PUSH1 0x20 ADD PUSH2 0xDF2 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 SWAP2 PUSH2 0x10A1 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH0 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x10BF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP8 PUSH2 0x23B8 JUMP JUMPDEST PUSH2 0x10C9 SWAP2 SWAP1 PUSH2 0x23E7 JUMP JUMPDEST SWAP2 MLOAD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x10DF PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1108 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1125 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x14F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1132 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1157 JUMPI PUSH2 0x1157 PUSH2 0x1F2C JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x3BC110370C8D062D875866567D288433541B3F5F05C98FA991B82EF9F6315881 DUP2 PUSH1 0x40 MLOAD PUSH2 0x118B SWAP2 SWAP1 PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x5 DUP4 SWAP1 SHL DUP1 DUP3 ADD PUSH1 0x20 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 JUMPDEST DUP1 ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x1F NOT DUP1 DUP3 ADD SWAP2 DUP7 ADD ADD CALLDATALOAD PUSH0 PUSH2 0x11CA DUP3 PUSH2 0x1535 JUMP JUMPDEST DUP5 DUP5 ADD PUSH1 0x20 ADD MSTORE POP PUSH2 0x11AF SWAP1 POP JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x760 DUP3 PUSH2 0x19B3 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x120A JUMPI PUSH2 0x120A PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH2 0x190A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1237 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1240 PUSH0 PUSH2 0x1A52 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x124D PUSH2 0x18AA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1258 PUSH0 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 DUP4 EQ PUSH2 0x1271 JUMPI PUSH2 0x126E DUP6 DUP5 DUP5 PUSH2 0x1AA3 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x9A8 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1271 DUP5 DUP5 DUP5 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0x12A5 PUSH4 0x66365B80 PUSH2 0x2A30 PUSH2 0x2255 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12C7 JUMPI PUSH2 0x12C7 PUSH2 0x1F2C JUMP JUMPDEST SUB PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAF79B437 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12F5 PUSH4 0x66365B80 PUSH2 0x2A30 PUSH2 0x2255 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1315 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD967E35 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1327 DUP2 PUSH7 0x6A94D74F430000 PUSH2 0x23B8 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x1347 JUMPI PUSH1 0x40 MLOAD PUSH4 0x356680B7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP4 SWAP2 PUSH1 0x3 SWAP2 DUP4 SWAP2 PUSH2 0x1372 SWAP2 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x137C SWAP2 SWAP1 PUSH2 0x2255 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x1394 JUMPI POP PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x13B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67EEC833 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x10 SLOAD PUSH2 0x1A0A PUSH2 0x13C3 SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x13CD PUSH0 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x13D7 SWAP1 DUP5 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x13E1 SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST GT ISZERO PUSH2 0x1400 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC30436E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ORIGIN CALLER EQ PUSH2 0x1420 JUMPI PUSH1 0x40 MLOAD PUSH4 0x58516B3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x143E SWAP1 DUP5 SWAP1 PUSH2 0x2255 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x144E SWAP1 POP CALLER DUP6 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF07265907AAF7B6329BB73E97EA492CCBBC0678C94313E1F8331013A2E269D33 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x14FF DUP5 DUP5 DUP5 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x152F JUMPI PUSH2 0x151B DUP5 DUP5 DUP5 DUP5 PUSH2 0x1BAE JUMP JUMPDEST PUSH2 0x152F JUMPI PUSH2 0x152F PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1560 PUSH2 0x18AA JUMP JUMPDEST DUP3 LT PUSH2 0x1596 JUMPI PUSH0 SLOAD DUP3 LT ISZERO PUSH2 0x1596 JUMPI JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x158D JUMPI PUSH0 NOT SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x760 DUP3 PUSH2 0x1C8C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A3 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x60 SWAP1 PUSH1 0xFF AND PUSH2 0x15BD JUMPI PUSH2 0x760 PUSH2 0x1D09 JUMP JUMPDEST PUSH2 0x15C6 DUP3 PUSH2 0x18BC JUMP JUMPDEST PUSH2 0x15E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x15EC PUSH2 0x1D09 JUMP JUMPDEST PUSH1 0x12 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x160A JUMPI PUSH2 0x1605 DUP5 PUSH2 0x1D18 JUMP JUMPDEST PUSH2 0x161A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1630 SWAP3 SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP3 MLOAD PUSH0 SUB PUSH2 0x1271 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1669 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1697 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1108 DUP2 PUSH2 0x1A52 JUMP JUMPDEST PUSH0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x16D0 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x760 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x152A902D PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x760 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x760 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1240 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x168E JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP2 LT ISZERO PUSH2 0x178D JUMPI PUSH1 0x40 MLOAD PUSH4 0x6F483D09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x168E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x17B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x168E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 MUL OR PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0x180B JUMPI PUSH2 0x180B PUSH4 0xB562E8DD PUSH1 0xE0 SHL PUSH2 0x190A JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND TIMESTAMP PUSH1 0xA0 SHL PUSH1 0x1 DUP9 EQ PUSH1 0xE1 SHL OR DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP7 MUL ADD SWAP1 SSTORE SWAP1 DUP2 SWAP1 SUB PUSH2 0x1868 JUMPI PUSH2 0x1868 PUSH3 0x2E0763 PUSH1 0xE8 SHL PUSH2 0x190A JUMP JUMPDEST DUP2 DUP4 ADD DUP3 JUMPDEST DUP1 DUP4 PUSH0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 DUP1 LOG4 DUP2 DUP2 PUSH1 0x1 ADD SWAP2 POP DUP2 SUB PUSH2 0x186D JUMPI POP PUSH0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18B7 PUSH4 0x28F75032 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x18C6 PUSH2 0x18AA JUMP JUMPDEST GT PUSH2 0x1596 JUMPI PUSH0 SLOAD DUP3 LT ISZERO PUSH2 0x1596 JUMPI PUSH0 JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x18FD JUMPI PUSH2 0x18F6 DUP4 PUSH2 0x2431 JUMP JUMPDEST SWAP3 POP PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x191C DUP4 PUSH2 0x11E1 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x1934 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1957 JUMPI PUSH2 0x1943 DUP2 CALLER PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x1957 JUMPI PUSH2 0x1957 PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x19BD PUSH2 0x18AA JUMP JUMPDEST GT PUSH2 0x1A42 JUMPI POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH0 SUB PUSH2 0x1A30 JUMPI PUSH0 SLOAD DUP3 LT PUSH2 0x19F0 JUMPI PUSH2 0x19F0 PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST JUMPDEST POP PUSH0 NOT ADD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x19F1 JUMPI PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0x1A1B JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2B PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH0 SUB PUSH2 0x1A42 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1596 PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP4 LT PUSH2 0x1ABC JUMPI PUSH2 0x1ABC PUSH4 0x1960CCAD PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST PUSH2 0x1AC4 PUSH2 0x18AA JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x1AD6 JUMPI PUSH2 0x1AD3 PUSH2 0x18AA JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH0 SLOAD DUP1 DUP1 DUP5 LT PUSH2 0x1AE4 JUMPI DUP1 SWAP4 POP JUMPDEST PUSH0 PUSH2 0x1AEE DUP8 PUSH2 0x11EB JUMP JUMPDEST SWAP1 POP DUP5 DUP7 LT PUSH2 0x1AFA JUMPI POP PUSH0 JUMPDEST DUP1 ISZERO PUSH2 0x1BA4 JUMPI DUP1 DUP7 DUP7 SUB GT PUSH2 0x1B0E JUMPI POP DUP5 DUP5 SUB JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP4 ADD PUSH1 0x5 SHL DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE SWAP5 POP PUSH0 PUSH2 0x1B2B DUP9 PUSH2 0x1535 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x1B3B JUMPI POP DUP1 MLOAD JUMPDEST PUSH0 JUMPDEST PUSH2 0x1B46 DUP11 PUSH2 0x1C8C JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP4 ADD MLOAD PUSH0 DUP2 EQ PUSH2 0x1B5C JUMPI PUSH0 SWAP3 POP PUSH2 0x1B81 JUMP JUMPDEST DUP4 MLOAD ISZERO PUSH2 0x1B68 JUMPI DUP4 MLOAD SWAP3 POP JUMPDEST DUP12 DUP4 XOR PUSH1 0x60 SHL PUSH2 0x1B81 JUMPI PUSH1 0x1 DUP3 ADD SWAP2 POP DUP11 DUP3 PUSH1 0x5 SHL DUP11 ADD MSTORE JUMPDEST POP PUSH1 0x1 DUP11 ADD SWAP10 POP DUP4 PUSH1 0x40 MSTORE DUP9 DUP11 EQ DUP1 PUSH2 0x1B99 JUMPI POP DUP5 DUP2 EQ JUMPDEST ISZERO PUSH2 0x1B3D JUMPI DUP8 MSTORE POP POP POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1BE2 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1C1C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1C19 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2482 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1C6F JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x1C67 JUMPI PUSH2 0x1C67 PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH2 0x190A JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x760 SWAP1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0xA0 DUP4 SWAP1 SHR PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL DUP4 AND ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x13 DUP1 SLOAD PUSH2 0x9A8 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x1D31 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1108 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D80 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D8B DUP2 PUSH2 0x1D5B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1596 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DC2 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DDD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E10 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E23 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1E31 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1E42 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1D8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E54 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EBC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EC5 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1EEE DUP5 PUSH2 0x1D92 JUMP JUMPDEST SWAP3 POP PUSH2 0x1EFC PUSH1 0x20 DUP6 ADD PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x4 DUP4 LT PUSH2 0x1F60 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F76 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x1D8B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F95 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1FAC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FBF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1FCD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1E42 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD PUSH3 0xFFFFFF AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x205F JUMPI PUSH2 0x204C DUP4 DUP6 MLOAD PUSH2 0x1FE1 JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH1 0x80 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2039 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x207B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1D8B DUP3 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x205F JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x209F JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20CD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x20D6 DUP5 PUSH2 0x1D92 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20FC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2105 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1DDD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2140 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2149 DUP6 PUSH2 0x1D92 JUMP JUMPDEST SWAP4 POP PUSH2 0x2157 PUSH1 0x20 DUP7 ADD PUSH2 0x1D92 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x217A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x218D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x219F JUMPI PUSH2 0x219F PUSH2 0x2119 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x21C7 JUMPI PUSH2 0x21C7 PUSH2 0x2119 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x21DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0x760 DUP3 DUP5 PUSH2 0x1FE1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2221 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x222A DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2238 PUSH1 0x20 DUP5 ADD PUSH2 0x1D92 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x760 JUMPI PUSH2 0x760 PUSH2 0x2241 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x760 JUMPI PUSH2 0x760 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x228F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22AD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1125 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x22D8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22F7 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x22E4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x2316 JUMPI PUSH2 0x2316 PUSH2 0x2119 JUMP JUMPDEST PUSH2 0x232A DUP4 PUSH2 0x2324 DUP4 SLOAD PUSH2 0x227B JUMP JUMPDEST DUP4 PUSH2 0x22B3 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x235B JUMPI PUSH0 DUP6 ISZERO PUSH2 0x2344 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x22F7 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP8 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x238A JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x236A JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x23A6 JUMPI PUSH0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x760 JUMPI PUSH2 0x760 PUSH2 0x2241 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x23E0 JUMPI PUSH2 0x23E0 PUSH2 0x2241 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2401 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1271 PUSH2 0x242B DUP4 DUP7 PUSH2 0x2406 JUMP JUMPDEST DUP5 PUSH2 0x2406 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x243F JUMPI PUSH2 0x243F PUSH2 0x2241 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x2478 SWAP1 DUP4 ADD DUP5 PUSH2 0x1E54 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2492 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1D8B DUP2 PUSH2 0x1D5B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXTCODESIZE 0xD2 PUSH32 0xE976B9C80D7F049EC1EA9FFE4285F2DC41FB36A93AF9DAC3A399FF2B64736F6C PUSH4 0x43000819 STOP CALLER ",
		"sourceMap": "694:8351:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8782:261;;;;;;;;;;-1:-1:-1;8782:261:8;;;;;:::i;:::-;;:::i;:::-;;;565:14:12;;558:22;540:41;;528:2;513:18;8782:261:8;;;;;;;;8160:164;;;;;;;;;;-1:-1:-1;8160:164:8;;;;;:::i;:::-;;:::i;6442:500::-;;;;;;;;;;;;;:::i;7940:214::-;;;;;;;;;;-1:-1:-1;7940:214:8;;;;;:::i;:::-;;:::i;11539:98:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;18602:223::-;;;;;;;;;;-1:-1:-1;18602:223:6;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2628:32:12;;;2610:51;;2598:2;2583:18;18602:223:6;2464:203:12;18330:122:6;;;;;;:::i;:::-;;:::i;6868:564::-;;;;;;;;;;;;;:::i;:::-;;;3077:25:12;;;3065:2;3050:18;6868:564:6;2931:177:12;22760:3399:6;;;;;;:::i;:::-;;:::i;5843:593:8:-;;;;;;:::i;:::-;;:::i;5258:579::-;;;;;;:::i;:::-;;:::i;2379:419:2:-;;;;;;;;;;-1:-1:-1;2379:419:2;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;4144:32:12;;;4126:51;;4208:2;4193:18;;4186:34;;;;4099:18;2379:419:2;3952:274:12;8600:105:8;;;;;;;;;;;;;:::i;26250:157:6:-;;;;;;:::i;:::-;;:::i;1434:50:8:-;;;;;;;;;;-1:-1:-1;1434:50:8;;;;-1:-1:-1;;;1434:50:8;;;;;;;;;;;;;:::i;8330:152::-;;;;;;;;;;-1:-1:-1;8330:152:8;;;;;:::i;:::-;;:::i;1882:1131:7:-;;;;;;;;;;-1:-1:-1;1882:1131:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12900:150:6:-;;;;;;;;;;-1:-1:-1;12900:150:6;;;;;:::i;:::-;;:::i;8548:239::-;;;;;;;;;;-1:-1:-1;8548:239:6;;;;;:::i;:::-;;:::i;2293:101:0:-;;;;;;;;;;;;;:::i;905:52:8:-;;;;;;;;;;;;947:10;905:52;;4039:484:7;;;;;;;;;;-1:-1:-1;4039:484:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;856:43:8:-;;;;;;;;;;;;895:4;856:43;;805:45;;;;;;;;;;;;846:4;805:45;;1638:85:0;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;11708:102:6;;;;;;;;;;;;;:::i;3387:217:7:-;;;;;;;;;;-1:-1:-1;3387:217:7;;;;;:::i;:::-;;:::i;1238:91:8:-;;;;;;;;;;;;;:::i;4861:391::-;;;;;;:::i;:::-;;:::i;19152:231:6:-;;;;;;;;;;-1:-1:-1;19152:231:6;;;;;:::i;:::-;;:::i;963:47:8:-;;;;;;;;;;;;1009:1;963:47;;6948:149;;;;;;;;;;-1:-1:-1;6948:149:8;;;;;:::i;:::-;-1:-1:-1;;;;;7055:35:8;7029:7;7055:35;;;:27;:35;;;;;;;6948:149;26988:415:6;;;;;;:::i;:::-;;:::i;1070:659:7:-;;;;;;;;;;-1:-1:-1;1070:659:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8488:106:8:-;;;;;;;;;;-1:-1:-1;8488:106:8;;;;;:::i;:::-;;:::i;7368:566::-;;;;;;;;;;-1:-1:-1;7368:566:8;;;;;:::i;:::-;;:::i;667:155:11:-;;;;;;;;;;-1:-1:-1;777:28:11;771:35;667:155;;19533:162:6;;;;;;;;;;-1:-1:-1;19533:162:6;;;;;:::i;:::-;-1:-1:-1;;;;;19653:25:6;;;19630:4;19653:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;19533:162;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;1138:62:8:-;;;;;;;;;;;;1190:10;1138:62;;1016:116;;;;;;;;;;-1:-1:-1;1016:116:8;1066:66;1016:116;;8782:261;8909:4;8944:38;8970:11;8944:25;:38::i;:::-;:92;;;;8998:38;9024:11;8998:25;:38::i;:::-;8925:111;8782:261;-1:-1:-1;;8782:261:8:o;8160:164::-;1531:13:0;:11;:13::i;:::-;8275:42:8::1;8294:8;8304:12;8275:18;:42::i;:::-;8160:164:::0;;:::o;6442:500::-;2702:19;2688:10;;-1:-1:-1;;;2688:10:8;;;;:33;;;;;;;;:::i;:::-;;2684:88;;2744:17;;-1:-1:-1;;;2744:17:8;;;;;;;;;;;2684:88;1190:10:::1;3387:15;:43;3383:97;;;3453:16;;-1:-1:-1::0;;;3453:16:8::1;;;;;;;;;;;3383:97;3573:10:::2;3545:39;::::0;;;:27:::2;:39;::::0;;;;;:44;;3541:95:::2;;3612:13;;-1:-1:-1::0;;;3612:13:8::2;;;;;;;;;;;3541:95;6602:10:::3;6574:39;::::0;;;:27:::3;:39;::::0;;;;;;;;4122:16:::3;:28:::0;;;;;;;1009:1:::3;::::0;6574:39;;4122:86:::3;::::0;6574:39;;4122:86:::3;:::i;:::-;:113;;;;:::i;:::-;:147;:184;;;;-1:-1:-1::0;1710:6:0;;-1:-1:-1;;;;;1710:6:0;4285:10:8::3;:21;;4122:184;4105:269;;;4338:25;;-1:-1:-1::0;;;4338:25:8::3;;;;;;;;;;;4105:269;4580:9:::4;4593:10;4580:23;4576:75;;4626:14;;-1:-1:-1::0;;;4626:14:8::4;;;;;;;;;;;4576:75;6692:10:::5;6645:16;6664:39:::0;;;:27:::5;:39;::::0;;;;;;;;6713:16:::5;:28:::0;;;;;:40;;6664:39;;;;6713:40:::5;::::0;6664:39;;6713:40:::5;:::i;:::-;::::0;;;-1:-1:-1;;6791:10:8::5;6805:1;6763:39:::0;;;:27:::5;:39;::::0;;;;:43;;;6816:20:::5;:32:::0;;6840:8;;6805:1;6816:32:::5;::::0;6840:8;;6816:32:::5;:::i;:::-;::::0;;;-1:-1:-1;6858:27:8::5;::::0;-1:-1:-1;6864:10:8::5;6876:8:::0;6858:5:::5;:27::i;:::-;6901:34;::::0;3077:25:12;;;6914:10:8::5;::::0;6901:34:::5;::::0;3065:2:12;3050:18;6901:34:8::5;;;;;;;6635:307;3645:1:::3;6442:500::o:0;7940:214::-;1531:13:0;:11;:13::i;:::-;8021:8:8::1;:15:::0;;-1:-1:-1;;8021:15:8::1;8032:4;8021:15;::::0;;8046:13:::1;:29;8062:13:::0;;8046;:29:::1;:::i;:::-;;8090:57;8110:15;:13;:15::i;:::-;8090:57;::::0;;13354:25:12;;;-1:-1:-1;;13410:2:12;13395:18;;13388:34;13327:18;8090:57:8::1;;;;;;;7940:214:::0;;:::o;11539:98:6:-;11593:13;11625:5;11618:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11539:98;:::o;18602:223::-;18678:7;18702:16;18710:7;18702;:16::i;:::-;18697:73;;18720:50;-1:-1:-1;;;18720:7:6;:50::i;:::-;-1:-1:-1;18788:24:6;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;18788:30:6;;18602:223::o;18330:122::-;18418:27;18427:2;18431:7;18440:4;18418:8;:27::i;6868:564::-;6929:14;7321:15;:13;:15::i;:::-;7306:12;;7290:13;;:28;:46;;-1:-1:-1;6868:564:6;:::o;22760:3399::-;22867:27;22897;22916:7;22897:18;:27::i;:::-;-1:-1:-1;;;;;23049:22:6;;;;22867:57;;-1:-1:-1;23107:45:6;;;;23103:95;;23154:44;-1:-1:-1;;;23154:7:6;:44::i;:::-;23210:27;21893:24;;;:15;:24;;;;;22117:26;;47409:10;21530:30;;;-1:-1:-1;;;;;21227:28:6;;21508:20;;;21505:56;23393:201;;23487:43;23504:4;47409:10;19533:162;:::i;23487:43::-;23482:101;;23532:51;-1:-1:-1;;;23532:7:6;:51::i;:::-;23736:15;23733:157;;;23874:1;23853:19;23846:30;23733:157;-1:-1:-1;;;;;24262:24:6;;;;;;;:18;:24;;;;;;24260:26;;-1:-1:-1;;24260:26:6;;;24330:22;;;;;;;;;24328:24;;-1:-1:-1;24328:24:6;;;17458:11;17433:23;17429:41;17416:63;-1:-1:-1;;;17416:63:6;24616:26;;;;:17;:26;;;;;:142;;;;-1:-1:-1;;;24875:47:6;;:52;;24871:617;;24979:1;24969:11;;24947:19;25100:30;;;:17;:30;;;;;;:35;;25096:378;;25236:13;;25221:11;:28;25217:239;;25381:30;;;;:17;:30;;;;;:52;;;25217:239;24929:559;24871:617;-1:-1:-1;;;;;25616:20:6;;25987:7;25616:20;25919:4;25862:25;25597:16;;25730:292;26045:8;26057:1;26045:13;26041:58;;26060:39;-1:-1:-1;;;26060:7:6;:39::i;:::-;22857:3302;;;;22760:3399;;;:::o;5843:593:8:-;2702:19;2688:10;;-1:-1:-1;;;2688:10:8;;;;:33;;;;;;;;:::i;:::-;;2684:88;;2744:17;;-1:-1:-1;;;2744:17:8;;;;;;;;;;;2684:88;1190:10:::1;2834:15;:43;2830:99;;;2900:18;;-1:-1:-1::0;;;2900:18:8::1;;;;;;;;;;;2830:99;6027:8:::0;3949:26:::2;6027:8:::0;947:10:::2;3949:26;:::i;:::-;3937:9;:38;3933:95;;;3998:19;;-1:-1:-1::0;;;3998:19:8::2;;;;;;;;;;;3933:95;4197:10:::3;4169:39;::::0;;;:27:::3;:39;::::0;;;;;;;;4122:16:::3;:28:::0;;;;;;;6062:8;;1009:1:::3;::::0;6062:8;;4122:86:::3;::::0;::::3;:::i;:::-;:113;;;;:::i;:::-;:147;:184;;;;-1:-1:-1::0;1710:6:0;;-1:-1:-1;;;;;1710:6:0;4285:10:8::3;:21;;4122:184;4105:269;;;4338:25;;-1:-1:-1::0;;;4338:25:8::3;;;;;;;;;;;4105:269;6098:8:::4;3778:20;;895:4;3763:35;;;;:::i;:::-;3759:1;3742:14;6619:7:6::0;6645:13;;6564:101;3742:14:8::4;3731:25;::::0;:8;:25:::4;:::i;:::-;:29;;;;:::i;:::-;:67;3714:145;;;3830:18;;-1:-1:-1::0;;;3830:18:8::4;;;;;;;;;;;3714:145;6124:12:::5;4465;4450:11;;:27;4446:78;;4500:13;;-1:-1:-1::0;;;4500:13:8::5;;;;;;;;;;;4446:78;4580:9:::6;4593:10;4580:23;4576:75;;4626:14;;-1:-1:-1::0;;;4626:14:8::6;;;;;;;;;;;4576:75;6170:14:::7;;6168:16;;;;;:::i;:::-;;;;;;;;6218:8;6194:20;;:32;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6264:10:8::7;6236:39;::::0;;;:27:::7;:39;::::0;;;;;;;:50;;;6316:14:::7;::::0;6296:35;;:19:::7;:35:::0;;;;;;:48;;-1:-1:-1;;;;;;6296:48:8::7;::::0;::::7;::::0;;6360:37;;3077:25:12;;;6360:37:8::7;::::0;3050:18:12;6360:37:8::7;;;;;;;;3868:1:::5;4383::::4;4037::::3;2938::::2;5843:593:::0;;:::o;5258:579::-;2702:19;2688:10;;-1:-1:-1;;;2688:10:8;;;;:33;;;;;;;;:::i;:::-;;2684:88;;2744:17;;-1:-1:-1;;;2744:17:8;;;;;;;;;;;2684:88;1190:10:::1;3006:15;:43;:98;;;-1:-1:-1::0;1294:35:8::1;1190:10;1322:7;1294:35;:::i;:::-;3065:15;:39;3006:98;2989:178;;;3136:20;;-1:-1:-1::0;;;3136:20:8::1;;;;;;;;;;;2989:178;5442:8:::0;3949:26:::2;5442:8:::0;947:10:::2;3949:26;:::i;:::-;3937:9;:38;3933:95;;;3998:19;;-1:-1:-1::0;;;3998:19:8::2;;;;;;;;;;;3933:95;4197:10:::3;4169:39;::::0;;;:27:::3;:39;::::0;;;;;;;;4122:16:::3;:28:::0;;;;;;;5477:8;;1009:1:::3;::::0;5477:8;;4122:86:::3;::::0;::::3;:::i;:::-;:113;;;;:::i;:::-;:147;:184;;;;-1:-1:-1::0;1710:6:0;;-1:-1:-1;;;;;1710:6:0;4285:10:8::3;:21;;4122:184;4105:269;;;4338:25;;-1:-1:-1::0;;;4338:25:8::3;;;;;;;;;;;4105:269;5513:8:::4;3778:20;;895:4;3763:35;;;;:::i;:::-;3759:1;3742:14;6619:7:6::0;6645:13;;6564:101;3742:14:8::4;3731:25;::::0;:8;:25:::4;:::i;:::-;:29;;;;:::i;:::-;:67;3714:145;;;3830:18;;-1:-1:-1::0;;;3830:18:8::4;;;;;;;;;;;3714:145;5539:12:::5;4465;4450:11;;:27;4446:78;;4500:13;;-1:-1:-1::0;;;4500:13:8::5;;;;;;;;;;;4446:78;4580:9:::6;4593:10;4580:23;4576:75;;4626:14;;-1:-1:-1::0;;;4626:14:8::6;;;;;;;;;;;4576:75;5602:12:::7;5587:11;;:27;5583:78;;5637:13;;-1:-1:-1::0;;;5637:13:8::7;;;;;;;;;;;5583:78;5687:10;5670:28;::::0;;;:16:::7;:28;::::0;;;;:40;;5702:8;;5670:28;:40:::7;::::0;5702:8;;5670:40:::7;:::i;:::-;::::0;;;-1:-1:-1;5720:27:8::7;::::0;-1:-1:-1;5726:10:8::7;5738:8:::0;5720:5:::7;:27::i;:::-;5763:35;::::0;3077:25:12;;;5777:10:8::7;::::0;5763:35:::7;::::0;3065:2:12;3050:18;5763:35:8::7;2931:177:12::0;2379:419:2;2465:7;2522:26;;;:17;:26;;;;;;;;2493:55;;;;;;;;;-1:-1:-1;;;;;2493:55:2;;;;;-1:-1:-1;;;2493:55:2;;;-1:-1:-1;;;;;2493:55:2;;;;;;;;2465:7;;2559:90;;-1:-1:-1;2609:29:2;;;;;;;;;2619:19;2609:29;-1:-1:-1;;;;;2609:29:2;;;;-1:-1:-1;;;2609:29:2;;-1:-1:-1;;;;;2609:29:2;;;;;2559:90;2696:23;;;;2659:21;;3156:5;;2684:35;;-1:-1:-1;;;;;2684:35:2;:9;:35;:::i;:::-;2683:57;;;;:::i;:::-;2759:16;;;;;-1:-1:-1;2379:419:2;;-1:-1:-1;;;;2379:419:2:o;8600:105:8:-;1531:13:0;:11;:13::i;:::-;8647:51:8::1;::::0;8655:10:::1;::::0;8676:21:::1;8647:51:::0;::::1;;;::::0;::::1;::::0;;;8676:21;8655:10;8647:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;8600:105::o:0;26250:157:6:-;26361:39;26378:4;26384:2;26388:7;26361:39;;;;;;;;;;;;:16;:39::i;:::-;26250:157;;;:::o;8330:152:8:-;1531:13:0;:11;:13::i;:::-;8406:10:8::1;:26:::0;;8419:13;;8406:10;-1:-1:-1;;;;8406:26:8::1;-1:-1:-1::0;;;8419:13:8;8406:26:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;8447:28;8461:13;8447:28;;;;;;:::i;:::-;;;;;;;;8330:152:::0;:::o;1882:1131:7:-;2229:4;2223:11;;2280:21;;;2429:1;2425:9;;;2483:29;;;2503:4;2483:29;2470:43;;;2021:23;;2532:448;2539:6;;2532:448;;-1:-1:-1;;2622:12:7;;;;2675:23;;;2662:37;2561:15;2760:28;2662:37;2760:19;:28::i;:::-;2915:29;;;2935:4;2915:29;2908:48;-1:-1:-1;2532:448:7;;-1:-1:-1;2532:448:7;;-1:-1:-1;2996:10:7;1882:1131;-1:-1:-1;;;1882:1131:7:o;12900:150:6:-;12972:7;13014:27;13033:7;13014:18;:27::i;8548:239::-;8620:7;-1:-1:-1;;;;;8643:19:6;;8639:69;;8664:44;-1:-1:-1;;;8664:7:6;:44::i;:::-;-1:-1:-1;;;;;;8725:25:6;;;;;:18;:25;;;;;;1496:13;8725:55;;8548:239::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4039:484:7:-;4117:16;4310:13;4326:15;:13;:15::i;:::-;4310:31;;4351:12;4366:14;6619:7:6;6645:13;;6564:101;4366:14:7;4351:29;;4390:25;4438:4;4429:5;:13;4425:66;;4455:36;4472:5;4479;4486:4;4455:16;:36::i;:::-;4444:47;;4425:66;4508:8;4039:484;-1:-1:-1;;;;4039:484:7:o;11708:102:6:-;11764:13;11796:7;11789:14;;;;;:::i;3387:217:7:-;3526:16;3561:36;3578:5;3585;3592:4;3561:16;:36::i;1238:91:8:-;1294:35;1190:10;1322:7;1294:35;:::i;:::-;1238:91;:::o;4861:391::-;2702:19;2688:10;;-1:-1:-1;;;2688:10:8;;;;:33;;;;;;;;:::i;:::-;;2684:88;;2744:17;;-1:-1:-1;;;2744:17:8;;;;;;;;;;;2684:88;1294:35:::1;1190:10;1322:7;1294:35;:::i;:::-;3232:15;:39;3228:98;;;3294:21;;-1:-1:-1::0;;;3294:21:8::1;;;;;;;;;;;3228:98;5007:8:::0;3949:26:::2;5007:8:::0;947:10:::2;3949:26;:::i;:::-;3937:9;:38;3933:95;;;3998:19;;-1:-1:-1::0;;;3998:19:8::2;;;;;;;;;;;3933:95;4197:10:::3;4169:39;::::0;;;:27:::3;:39;::::0;;;;;;;;4122:16:::3;:28:::0;;;;;;;5042:8;;1009:1:::3;::::0;5042:8;;4122:86:::3;::::0;::::3;:::i;:::-;:113;;;;:::i;:::-;:147;:184;;;;-1:-1:-1::0;1710:6:0;;-1:-1:-1;;;;;1710:6:0;4285:10:8::3;:21;;4122:184;4105:269;;;4338:25;;-1:-1:-1::0;;;4338:25:8::3;;;;;;;;;;;4105:269;5078:8:::4;3778:20;;895:4;3763:35;;;;:::i;:::-;3759:1;3742:14;6619:7:6::0;6645:13;;6564:101;3742:14:8::4;3731:25;::::0;:8;:25:::4;:::i;:::-;:29;;;;:::i;:::-;:67;3714:145;;;3830:18;;-1:-1:-1::0;;;3830:18:8::4;;;;;;;;;;;3714:145;4580:9:::5;4593:10;4580:23;4576:75;;4626:14;;-1:-1:-1::0;;;4626:14:8::5;;;;;;;;;;;4576:75;5135:10:::6;5118:28;::::0;;;:16:::6;:28;::::0;;;;:40;;5150:8;;5118:28;:40:::6;::::0;5150:8;;5118:40:::6;:::i;:::-;::::0;;;-1:-1:-1;5168:27:8::6;::::0;-1:-1:-1;5174:10:8::6;5186:8:::0;5168:5:::6;:27::i;:::-;5211:34;::::0;3077:25:12;;;5224:10:8::6;::::0;5211:34:::6;::::0;3065:2:12;3050:18;5211:34:8::6;;;;;;;4383:1:::4;4037::::3;3335::::2;4861:391:::0;:::o;19152:231:6:-;47409:10;19246:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;19246:49:6;;;;;;;;;;;;:60;;-1:-1:-1;;19246:60:6;;;;;;;;;;19321:55;;540:41:12;;;19246:49:6;;47409:10;19321:55;;513:18:12;19321:55:6;;;;;;;19152:231;;:::o;26988:415::-;27155:31;27168:4;27174:2;27178:7;27155:12;:31::i;:::-;-1:-1:-1;;;;;27200:14:6;;;:19;27196:201;;27240:56;27271:4;27277:2;27281:7;27290:5;27240:30;:56::i;:::-;27235:152;;27316:56;-1:-1:-1;;;27316:7:6;:56::i;:::-;26988:415;;;;:::o;1070:659:7:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1280:15:7;:13;:15::i;:::-;1269:7;:26;1265:448;;6619:7:6;6645:13;1399:7:7;:24;1395:304;;;1579:51;13905:4:6;13928:24;;;:17;:24;;;;;;1579:51:7;;-1:-1:-1;;1621:9:7;;;;1579:51;;;1659:21;1672:7;1659:12;:21::i;1395:304::-;1070:659;;;:::o;8488:106:8:-;1531:13:0;:11;:13::i;:::-;8561:11:8::1;:26:::0;8488:106::o;7368:566::-;7496:8;;7466:13;;7496:8;;7491:57;;7527:10;:8;:10::i;7491:57::-;7562:16;7570:7;7562;:16::i;:::-;7557:84;;7601:29;;-1:-1:-1;;;7601:29:8;;;;;;;;;;;7557:84;7650:21;7674:10;:8;:10::i;:::-;7729:8;;7650:34;;-1:-1:-1;7694:31:8;;7729:8;;7728:9;:35;;7745:18;7755:7;7745:9;:18::i;:::-;7728:35;;;;;;;;;;;;;;;;7694:69;;7773:20;7833:7;7842:17;7816:44;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7773:97;;7893:7;7887:21;7912:1;7887:26;:40;;;;;;;;;;;;;;7880:47;7368:566;-1:-1:-1;;;;;7368:566:8:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2610:51:12::0;2583:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;10667:618:6:-:0;10752:4;-1:-1:-1;;;;;;;;;11058:25:6;;;;:101;;-1:-1:-1;;;;;;;;;;11134:25:6;;;11058:101;:177;;;-1:-1:-1;;;;;;;;11210:25:6;-1:-1:-1;;;11210:25:6;;10667:618::o;2116:213:2:-;2218:4;-1:-1:-1;;;;;;2241:41:2;;-1:-1:-1;;;2241:41:2;;:81;;-1:-1:-1;;;;;;;;;;861:40:4;;;2286:36:2;762:146:4;1796:162:0;1710:6;;-1:-1:-1;;;;;1710:6:0;47409:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;47409:10:6;1901:40:0;;;2610:51:12;2583:18;;1901:40:0;2464:203:12;3429:507:2;3156:5;-1:-1:-1;;;;;3576:26:2;;;-1:-1:-1;3572:173:2;;;3679:55;;-1:-1:-1;;;3679:55:2;;-1:-1:-1;;;;;14648:39:12;;3679:55:2;;;14630:58:12;14704:18;;;14697:34;;;14603:18;;3679:55:2;14457:280:12;3572:173:2;-1:-1:-1;;;;;3758:22:2;;3754:108;;3803:48;;-1:-1:-1;;;3803:48:2;;3848:1;3803:48;;;2610:51:12;2583:18;;3803:48:2;2464:203:12;3754:108:2;-1:-1:-1;3894:35:2;;;;;;;;;-1:-1:-1;;;;;3894:35:2;;;;;;-1:-1:-1;;;;;3894:35:2;;;;;;;;;;-1:-1:-1;;;3872:57:2;;;;:19;:57;3429:507::o;30454:2313:6:-;30526:20;30549:13;;;30576;;;30572:53;;30591:34;-1:-1:-1;;;30591:7:6;:34::i;:::-;31125:31;;;;:17;:31;;;;;;;;-1:-1:-1;;;;;17286:28:6;;17458:11;17433:23;17429:41;17891:1;17878:15;;17852:24;17848:46;17426:52;17416:63;;31125:140;;;31476:22;;;:18;:22;;;;;:71;;31514:32;31502:45;;31476:71;;;17286:28;31732:13;;;31728:54;;31747:35;-1:-1:-1;;;31747:7:6;:35::i;:::-;31811:23;;;;31985:662;32395:7;32352:8;32308:1;32243:25;32181:1;32117;32087:351;32642:3;32629:9;;;;;;:16;31985:662;;-1:-1:-1;32661:13:6;:19;-1:-1:-1;26250:157:6;;;:::o;7103:104:8:-;7160:7;7186:14;777:28:11;771:35;;667:155;7186:14:8;7179:21;;7103:104;:::o;19944:465:6:-;20009:11;20055:7;20036:15;:13;:15::i;:::-;:26;20032:371;;20197:13;;20187:7;:23;20183:210;;;20230:14;20262:60;-1:-1:-1;20279:26:6;;;;:17;:26;;;;;;;20269:42;;;20262:60;;20313:9;;;:::i;:::-;;;20262:60;;;-1:-1:-1;;;20349:24:6;:29;;19944:465;-1:-1:-1;;19944:465:6:o;49293:160::-;49392:13;49386:4;49379:27;49432:4;49426;49419:18;40985:442;41079:13;41095:16;41103:7;41095;:16::i;:::-;41079:32;;41126:13;:45;;;;-1:-1:-1;47409:10:6;-1:-1:-1;;;;;41143:28:6;;;;41126:45;41122:210;;;41192:44;41209:5;47409:10;19533:162;:::i;41192:44::-;41187:135;;41256:51;-1:-1:-1;;;41256:7:6;:51::i;:::-;41342:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;41342:35:6;-1:-1:-1;;;;;41342:35:6;;;;;;;;;41392:28;;41342:24;;41392:28;;;;;;;41069:358;40985:442;;;:::o;14346:2173::-;14413:14;14462:7;14443:15;:13;:15::i;:::-;:26;14439:2017;;-1:-1:-1;14494:26:6;;;;:17;:26;;;;;;14813:6;14823:1;14813:11;14809:1270;;14859:13;;14848:7;:24;14844:77;;14874:47;-1:-1:-1;;;14874:7:6;:47::i;:::-;15468:597;-1:-1:-1;;;15562:9:6;15544:28;;;;:17;:28;;;;;;15616:25;;15468:597;15616:25;-1:-1:-1;;;15667:6:6;:24;15695:1;15667:29;15663:48;;14346:2173;;;:::o;15663:48::-;15999:47;-1:-1:-1;;;15999:7:6;:47::i;:::-;15468:597;;14809:1270;-1:-1:-1;;;16401:6:6;:24;16429:1;16401:29;16397:48;;14346:2173;;;:::o;16397:48::-;16465:47;-1:-1:-1;;;16465:7:6;:47::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;4771:4906:7:-;4893:25;4967:4;4958:5;:13;4954:54;;4973:35;-1:-1:-1;;;4973:7:7;:35::i;:::-;5092:15;:13;:15::i;:::-;5084:5;:23;5080:52;;;5117:15;:13;:15::i;:::-;5109:23;;5080:52;5146:19;6645:13:6;;5430:17:7;;;5426:39;;5456:9;5449:16;;5426:39;5520:25;5548:16;5558:5;5548:9;:16::i;:::-;5520:44;;5671:4;5662:5;:13;5658:40;;-1:-1:-1;5697:1:7;5658:40;5772:22;;5768:3893;;5921:17;5912:5;5905:4;:12;:33;5901:71;;-1:-1:-1;5960:12:7;;;5901:71;6149:4;6143:11;;6391:1;6368:25;;6365:1;6361:33;6347:48;;6416:15;;;;6143:11;-1:-1:-1;5990:9:7;6636:26;6656:5;6636:19;:26::i;:::-;6602:60;;6680:25;6972:9;:16;;;6967:57;;-1:-1:-1;7010:14:7;;6967:57;7042:19;7229:2273;7692:19;7705:5;7692:12;:19::i;:::-;7680:31;;7833:4;7822:9;7818:20;7812:27;7928:1;7923:893;;;;9132:1;9111:22;;7805:1354;;7923:893;8202:9;8196:16;8193:121;;;8274:9;8268:16;8247:37;;8193:121;8601:5;8582:17;8578:29;8574:2;8570:38;8560:230;;8676:1;8663:11;8659:19;8644:34;;8754:5;8739:11;8736:1;8732:19;8722:8;8718:34;8711:49;8560:230;7805:1354;9204:1;9197:5;9193:13;9184:22;;9398:1;9392:4;9385:15;9459:4;9450:5;:13;:49;;;;9482:17;9467:11;:32;9450:49;9448:52;7229:2273;;9600:29;;-1:-1:-1;;;5768:3893:7;4930:4741;;;4771:4906;;;;;:::o;29353:655:6:-;29513:88;;-1:-1:-1;;;29513:88:6;;29489:4;;-1:-1:-1;;;;;29513:45:6;;;;;:88;;47409:10;;29580:4;;29586:7;;29595:5;;29513:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29513:88:6;;;;;;;;-1:-1:-1;;29513:88:6;;;;;;;;;;;;:::i;:::-;;;29509:493;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29791:6;:13;29808:1;29791:18;29787:113;;29829:56;-1:-1:-1;;;29829:7:6;:56::i;:::-;29970:6;29964:13;29955:6;29951:2;29947:15;29940:38;29509:493;-1:-1:-1;;;;;;29669:64:6;-1:-1:-1;;;29669:64:6;;-1:-1:-1;29353:655:6;;;;;;:::o;13488:159::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13615:24:6;;;;:17;:24;;;;;;13596:44;;-1:-1:-1;;;;;;;;;;;;;16722:41:6;;;;2140:3;16807:33;;;16773:68;;-1:-1:-1;;;16773:68:6;-1:-1:-1;;;16870:24:6;;:29;;-1:-1:-1;;;16851:48:6;;;;2649:3;16938:28;;;;-1:-1:-1;;;16909:58:6;-1:-1:-1;16613:361:6;7213:149:8;7306:13;7342;7335:20;;;;;:::i;47523:1708:6:-;47588:17;48016:4;48009;48003:11;47999:22;48106:1;48100:4;48093:15;48179:4;48176:1;48172:12;48165:19;;;48259:1;48254:3;48247:14;48360:3;48594:5;48576:419;48641:1;48636:3;48632:11;48625:18;;48809:2;48803:4;48799:13;48795:2;48791:22;48786:3;48778:36;48901:2;48891:13;;48956:25;48576:419;48956:25;-1:-1:-1;49023:13:6;;;-1:-1:-1;;49136:14:6;;;49196:19;;;49136:14;47523:1708;-1:-1:-1;47523:1708:6:o;14:131:12:-;-1:-1:-1;;;;;;88:32:12;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:12:o;592:173::-;660:20;;-1:-1:-1;;;;;709:31:12;;699:42;;689:70;;755:1;752;745:12;770:366;837:6;845;898:2;886:9;877:7;873:23;869:32;866:52;;;914:1;911;904:12;866:52;937:29;956:9;937:29;:::i;:::-;927:39;;1016:2;1005:9;1001:18;988:32;-1:-1:-1;;;;;1053:5:12;1049:38;1042:5;1039:49;1029:77;;1102:1;1099;1092:12;1029:77;1125:5;1115:15;;;770:366;;;;;:::o;1141:592::-;1212:6;1220;1273:2;1261:9;1252:7;1248:23;1244:32;1241:52;;;1289:1;1286;1279:12;1241:52;1329:9;1316:23;1358:18;1399:2;1391:6;1388:14;1385:34;;;1415:1;1412;1405:12;1385:34;1453:6;1442:9;1438:22;1428:32;;1498:7;1491:4;1487:2;1483:13;1479:27;1469:55;;1520:1;1517;1510:12;1469:55;1560:2;1547:16;1586:2;1578:6;1575:14;1572:34;;;1602:1;1599;1592:12;1572:34;1647:7;1642:2;1633:6;1629:2;1625:15;1621:24;1618:37;1615:57;;;1668:1;1665;1658:12;1615:57;1699:2;1691:11;;;;;1721:6;;-1:-1:-1;1141:592:12;;-1:-1:-1;;;;1141:592:12:o;1738:300::-;1791:3;1829:5;1823:12;1856:6;1851:3;1844:19;1912:6;1905:4;1898:5;1894:16;1887:4;1882:3;1878:14;1872:47;1964:1;1957:4;1948:6;1943:3;1939:16;1935:27;1928:38;2027:4;2020:2;2016:7;2011:2;2003:6;1999:15;1995:29;1990:3;1986:39;1982:50;1975:57;;;1738:300;;;;:::o;2043:231::-;2192:2;2181:9;2174:21;2155:4;2212:56;2264:2;2253:9;2249:18;2241:6;2212:56;:::i;2279:180::-;2338:6;2391:2;2379:9;2370:7;2366:23;2362:32;2359:52;;;2407:1;2404;2397:12;2359:52;-1:-1:-1;2430:23:12;;2279:180;-1:-1:-1;2279:180:12:o;2672:254::-;2740:6;2748;2801:2;2789:9;2780:7;2776:23;2772:32;2769:52;;;2817:1;2814;2807:12;2769:52;2840:29;2859:9;2840:29;:::i;:::-;2830:39;2916:2;2901:18;;;;2888:32;;-1:-1:-1;;;2672:254:12:o;3113:328::-;3190:6;3198;3206;3259:2;3247:9;3238:7;3234:23;3230:32;3227:52;;;3275:1;3272;3265:12;3227:52;3298:29;3317:9;3298:29;:::i;:::-;3288:39;;3346:38;3380:2;3369:9;3365:18;3346:38;:::i;:::-;3336:48;;3431:2;3420:9;3416:18;3403:32;3393:42;;3113:328;;;;;:::o;3446:248::-;3514:6;3522;3575:2;3563:9;3554:7;3550:23;3546:32;3543:52;;;3591:1;3588;3581:12;3543:52;-1:-1:-1;;3614:23:12;;;3684:2;3669:18;;;3656:32;;-1:-1:-1;3446:248:12:o;4231:127::-;4292:10;4287:3;4283:20;4280:1;4273:31;4323:4;4320:1;4313:15;4347:4;4344:1;4337:15;4363:343;4510:2;4495:18;;4543:1;4532:13;;4522:144;;4588:10;4583:3;4579:20;4576:1;4569:31;4623:4;4620:1;4613:15;4651:4;4648:1;4641:15;4522:144;4675:25;;;4363:343;:::o;4711:271::-;4785:6;4838:2;4826:9;4817:7;4813:23;4809:32;4806:52;;;4854:1;4851;4844:12;4806:52;4893:9;4880:23;4932:1;4925:5;4922:12;4912:40;;4948:1;4945;4938:12;4987:615;5073:6;5081;5134:2;5122:9;5113:7;5109:23;5105:32;5102:52;;;5150:1;5147;5140:12;5102:52;5190:9;5177:23;5219:18;5260:2;5252:6;5249:14;5246:34;;;5276:1;5273;5266:12;5246:34;5314:6;5303:9;5299:22;5289:32;;5359:7;5352:4;5348:2;5344:13;5340:27;5330:55;;5381:1;5378;5371:12;5330:55;5421:2;5408:16;5447:2;5439:6;5436:14;5433:34;;;5463:1;5460;5453:12;5433:34;5516:7;5511:2;5501:6;5498:1;5494:14;5490:2;5486:23;5482:32;5479:45;5476:65;;;5537:1;5534;5527:12;5607:349;5691:12;;-1:-1:-1;;;;;5687:38:12;5675:51;;5779:4;5768:16;;;5762:23;5787:18;5758:48;5742:14;;;5735:72;5870:4;5859:16;;;5853:23;5846:31;5839:39;5823:14;;;5816:63;5932:4;5921:16;;;5915:23;5940:8;5911:38;5895:14;;5888:62;5607:349::o;5961:724::-;6196:2;6248:21;;;6318:13;;6221:18;;;6340:22;;;6167:4;;6196:2;6419:15;;;;6393:2;6378:18;;;6167:4;6462:197;6476:6;6473:1;6470:13;6462:197;;;6525:52;6573:3;6564:6;6558:13;6525:52;:::i;:::-;6634:15;;;;6606:4;6597:14;;;;;6498:1;6491:9;6462:197;;;-1:-1:-1;6676:3:12;;5961:724;-1:-1:-1;;;;;;5961:724:12:o;6690:186::-;6749:6;6802:2;6790:9;6781:7;6777:23;6773:32;6770:52;;;6818:1;6815;6808:12;6770:52;6841:29;6860:9;6841:29;:::i;6881:632::-;7052:2;7104:21;;;7174:13;;7077:18;;;7196:22;;;7023:4;;7052:2;7275:15;;;;7249:2;7234:18;;;7023:4;7318:169;7332:6;7329:1;7326:13;7318:169;;;7393:13;;7381:26;;7462:15;;;;7427:12;;;;7354:1;7347:9;7318:169;;7518:322;7595:6;7603;7611;7664:2;7652:9;7643:7;7639:23;7635:32;7632:52;;;7680:1;7677;7670:12;7632:52;7703:29;7722:9;7703:29;:::i;:::-;7693:39;7779:2;7764:18;;7751:32;;-1:-1:-1;7830:2:12;7815:18;;;7802:32;;7518:322;-1:-1:-1;;;7518:322:12:o;7845:347::-;7910:6;7918;7971:2;7959:9;7950:7;7946:23;7942:32;7939:52;;;7987:1;7984;7977:12;7939:52;8010:29;8029:9;8010:29;:::i;:::-;8000:39;;8089:2;8078:9;8074:18;8061:32;8136:5;8129:13;8122:21;8115:5;8112:32;8102:60;;8158:1;8155;8148:12;8197:127;8258:10;8253:3;8249:20;8246:1;8239:31;8289:4;8286:1;8279:15;8313:4;8310:1;8303:15;8329:1138;8424:6;8432;8440;8448;8501:3;8489:9;8480:7;8476:23;8472:33;8469:53;;;8518:1;8515;8508:12;8469:53;8541:29;8560:9;8541:29;:::i;:::-;8531:39;;8589:38;8623:2;8612:9;8608:18;8589:38;:::i;:::-;8579:48;;8674:2;8663:9;8659:18;8646:32;8636:42;;8729:2;8718:9;8714:18;8701:32;8752:18;8793:2;8785:6;8782:14;8779:34;;;8809:1;8806;8799:12;8779:34;8847:6;8836:9;8832:22;8822:32;;8892:7;8885:4;8881:2;8877:13;8873:27;8863:55;;8914:1;8911;8904:12;8863:55;8950:2;8937:16;8972:2;8968;8965:10;8962:36;;;8978:18;;:::i;:::-;9053:2;9047:9;9021:2;9107:13;;-1:-1:-1;;9103:22:12;;;9127:2;9099:31;9095:40;9083:53;;;9151:18;;;9171:22;;;9148:46;9145:72;;;9197:18;;:::i;:::-;9237:10;9233:2;9226:22;9272:2;9264:6;9257:18;9312:7;9307:2;9302;9298;9294:11;9290:20;9287:33;9284:53;;;9333:1;9330;9323:12;9284:53;9389:2;9384;9380;9376:11;9371:2;9363:6;9359:15;9346:46;9434:1;9429:2;9424;9416:6;9412:15;9408:24;9401:35;9455:6;9445:16;;;;;;;8329:1138;;;;;;;:::o;9472:268::-;9670:3;9655:19;;9683:51;9659:9;9716:6;9683:51;:::i;9930:260::-;9998:6;10006;10059:2;10047:9;10038:7;10034:23;10030:32;10027:52;;;10075:1;10072;10065:12;10027:52;10098:29;10117:9;10098:29;:::i;:::-;10088:39;;10146:38;10180:2;10169:9;10165:18;10146:38;:::i;:::-;10136:48;;9930:260;;;;;:::o;10377:127::-;10438:10;10433:3;10429:20;10426:1;10419:31;10469:4;10466:1;10459:15;10493:4;10490:1;10483:15;10509:125;10574:9;;;10595:10;;;10592:36;;;10608:18;;:::i;10639:128::-;10706:9;;;10727:11;;;10724:37;;;10741:18;;:::i;10772:380::-;10851:1;10847:12;;;;10894;;;10915:61;;10969:4;10961:6;10957:17;10947:27;;10915:61;11022:2;11014:6;11011:14;10991:18;10988:38;10985:161;;11068:10;11063:3;11059:20;11056:1;11049:31;11103:4;11100:1;11093:15;11131:4;11128:1;11121:15;10985:161;;10772:380;;;:::o;11283:518::-;11385:2;11380:3;11377:11;11374:421;;;11421:5;11418:1;11411:16;11465:4;11462:1;11452:18;11535:2;11523:10;11519:19;11516:1;11512:27;11506:4;11502:38;11571:4;11559:10;11556:20;11553:47;;;-1:-1:-1;11594:4:12;11553:47;11649:2;11644:3;11640:12;11637:1;11633:20;11627:4;11623:31;11613:41;;11704:81;11722:2;11715:5;11712:13;11704:81;;;11781:1;11767:16;;11748:1;11737:13;11704:81;;;11708:3;;11283:518;;;:::o;11977:1198::-;12101:18;12096:3;12093:27;12090:53;;;12123:18;;:::i;:::-;12152:94;12242:3;12202:38;12234:4;12228:11;12202:38;:::i;:::-;12196:4;12152:94;:::i;:::-;12272:1;12297:2;12292:3;12289:11;12314:1;12309:608;;;;12961:1;12978:3;12975:93;;;-1:-1:-1;13034:19:12;;;13021:33;12975:93;-1:-1:-1;;11934:1:12;11930:11;;;11926:24;11922:29;11912:40;11958:1;11954:11;;;11909:57;13081:78;;12282:887;;12309:608;11230:1;11223:14;;;11267:4;11254:18;;-1:-1:-1;;12345:17:12;;;12460:229;12474:7;12471:1;12468:14;12460:229;;;12563:19;;;12550:33;12535:49;;12670:4;12655:20;;;;12623:1;12611:14;;;;12490:12;12460:229;;;12464:3;12717;12708:7;12705:16;12702:159;;;12841:1;12837:6;12831:3;12825;12822:1;12818:11;12814:21;12810:34;12806:39;12793:9;12788:3;12784:19;12771:33;12767:79;12759:6;12752:95;12702:159;;;12904:1;12898:3;12895:1;12891:11;12887:19;12881:4;12874:33;12282:887;;11977:1198;;;:::o;13433:168::-;13506:9;;;13537;;13554:15;;;13548:22;;13534:37;13524:71;;13575:18;;:::i;13606:135::-;13645:3;13666:17;;;13663:43;;13686:18;;:::i;:::-;-1:-1:-1;13733:1:12;13722:13;;13606:135::o;13746:217::-;13786:1;13812;13802:132;;13856:10;13851:3;13847:20;13844:1;13837:31;13891:4;13888:1;13881:15;13919:4;13916:1;13909:15;13802:132;-1:-1:-1;13948:9:12;;13746:217::o;13968:212::-;14010:3;14048:5;14042:12;14092:6;14085:4;14078:5;14074:16;14069:3;14063:36;14154:1;14118:16;;14143:13;;;-1:-1:-1;14118:16:12;;13968:212;-1:-1:-1;13968:212:12:o;14185:267::-;14364:3;14389:57;14415:30;14441:3;14433:6;14415:30;:::i;:::-;14407:6;14389:57;:::i;14742:136::-;14781:3;14809:5;14799:39;;14818:18;;:::i;:::-;-1:-1:-1;;;14854:18:12;;14742:136::o;14883:500::-;-1:-1:-1;;;;;15152:15:12;;;15134:34;;15204:15;;15199:2;15184:18;;15177:43;15251:2;15236:18;;15229:34;;;15299:3;15294:2;15279:18;;15272:31;;;15077:4;;15320:57;;15357:19;;15349:6;15320:57;:::i;:::-;15312:65;14883:500;-1:-1:-1;;;;;;14883:500:12:o;15388:249::-;15457:6;15510:2;15498:9;15489:7;15485:23;15481:32;15478:52;;;15526:1;15523;15516:12;15478:52;15558:9;15552:16;15577:30;15601:5;15577:30;:::i"
	},
	"Assembly": ".code\n  PUSH B\t\t\tDropStatus public dropStatus =...\n  DUP1 \t\t\tDropStatus public dropStatus =...\n  SLOAD \t\t\tDropStatus public dropStatus =...\n  PUSH FF\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  NOT \t\t\t\n  AND \t\t\tDropStatus public dropStatus =...\n  SWAP1 \t\t\tDropStatus public dropStatus =...\n  SSTORE \t\t\tDropStatus public dropStatus =...\n  PUSH 12\t\t\tbool private revealed = false\n  DUP1 \t\t\tbool private revealed = false\n  SLOAD \t\t\tbool private revealed = false\n  PUSH FF\t\t\t\n  NOT \t\t\t\n  AND \t\t\tbool private revealed = false\n  SWAP1 \t\t\tbool private revealed = false\n  SSTORE \t\t\tbool private revealed = false\n  PUSH 100\t\t\tstring private _baseTokenURI =...\n  PUSH 40\t\t\tcontract Gloomers is\\n    Star...\n  MSTORE \t\t\tstring private _baseTokenURI =...\n  PUSH 5C\t\t\tstring private _baseTokenURI =...\n  PUSH 80\t\t\tcontract Gloomers is\\n    Star...\n  DUP2 \t\t\tstring private _baseTokenURI =...\n  DUP2 \t\t\tstring private _baseTokenURI =...\n  MSTORE \t\t\tstring private _baseTokenURI =...\n  SWAP1 \t\t\tcontract Gloomers is\\n    Star...\n  PUSH data CF74D66FE868420D434BE9B09CA8E38CFEA32209A70393FE7659CF3EB6C10014\t\t\tstring private _baseTokenURI =...\n  PUSH A0\t\t\tstring private _baseTokenURI =...\n  CODECOPY \t\t\tstring private _baseTokenURI =...\n  PUSH 13\t\t\tstring private _baseTokenURI =...\n  SWAP1 \t\t\tstring private _baseTokenURI =...\n  PUSH [tag] 4\t\t\tstring private _baseTokenURI =...\n  SWAP1 \t\t\tstring private _baseTokenURI =...\n  DUP3 \t\t\tstring private _baseTokenURI =...\n  PUSH [tag] 5\t\t\tstring private _baseTokenURI =...\n  JUMP \t\t\tstring private _baseTokenURI =...\ntag 4\t\t\tstring private _baseTokenURI =...\n  JUMPDEST \t\t\tstring private _baseTokenURI =...\n  POP \t\t\tstring private _baseTokenURI =...\n  CALLVALUE \t\t\tconstructor()\\n        StartTo...\n  DUP1 \t\t\tconstructor()\\n        StartTo...\n  ISZERO \t\t\tconstructor()\\n        StartTo...\n  PUSH [tag] 6\t\t\tconstructor()\\n        StartTo...\n  JUMPI \t\t\tconstructor()\\n        StartTo...\n  PUSH 0\t\t\tconstructor()\\n        StartTo...\n  DUP1 \t\t\tconstructor()\\n        StartTo...\n  REVERT \t\t\tconstructor()\\n        StartTo...\ntag 6\t\t\tconstructor()\\n        StartTo...\n  JUMPDEST \t\t\tconstructor()\\n        StartTo...\n  POP \t\t\tconstructor()\\n        StartTo...\n  CALLER \t\t\tmsg.sender\n  PUSH 40\t\t\tntity);\\n    }\\n\\n    function...\n  MLOAD \t\t\tntity);\\n    }\\n\\n    function...\n  DUP1 \t\t\tntity);\\n    }\\n\\n    function...\n  PUSH 40\t\t\tntity);\\n    }\\n\\n    function...\n  ADD \t\t\tntity);\\n    }\\n\\n    function...\n  PUSH 40\t\t\tntity);\\n    }\\n\\n    function...\n  MSTORE \t\t\tntity);\\n    }\\n\\n    function...\n  DUP1 \t\t\tntity);\\n    }\\n\\n    function...\n  PUSH 8\t\t\tntity);\\n    }\\n\\n    function...\n  DUP2 \t\t\tntity);\\n    }\\n\\n    function...\n  MSTORE \t\t\tntity);\\n    }\\n\\n    function...\n  PUSH 20\t\t\tntity);\\n    }\\n\\n    function...\n  ADD \t\t\tntity);\\n    }\\n\\n    function...\n  PUSH 476C6F6F6D657273\t\t\t\n  PUSH C0\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\tntity);\\n    }\\n\\n    function...\n  MSTORE \t\t\tntity);\\n    }\\n\\n    function...\n  POP \t\t\tntity);\\n    }\\n\\n    function...\n  PUSH 40\t\t\tntity);\\n    }\\n\\n    function...\n  MLOAD \t\t\tntity);\\n    }\\n\\n    function...\n  DUP1 \t\t\tntity);\\n    }\\n\\n    function...\n  PUSH 40\t\t\tntity);\\n    }\\n\\n    function...\n  ADD \t\t\tntity);\\n    }\\n\\n    function...\n  PUSH 40\t\t\tntity);\\n    }\\n\\n    function...\n  MSTORE \t\t\tntity);\\n    }\\n\\n    function...\n  DUP1 \t\t\tntity);\\n    }\\n\\n    function...\n  PUSH 8\t\t\tntity);\\n    }\\n\\n    function...\n  DUP2 \t\t\tntity);\\n    }\\n\\n    function...\n  MSTORE \t\t\tntity);\\n    }\\n\\n    function...\n  PUSH 20\t\t\tntity);\\n    }\\n\\n    function...\n  ADD \t\t\tntity);\\n    }\\n\\n    function...\n  PUSH 474C4F4F4D455253\t\t\t\n  PUSH C0\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\tntity);\\n    }\\n\\n    function...\n  MSTORE \t\t\tntity);\\n    }\\n\\n    function...\n  POP \t\t\tntity);\\n    }\\n\\n    function...\n  PUSH D06\t\t\t3334\n  PUSH [tag] 12\t\t\ton launched across Base, Solan...\n  DUP2 \t\t\t Solana, and \n  PUSH [tag] 13\t\t\ton launched across Base\n  PUSH 20\t\t\ton launched across Base\n  SHL \t\t\ton launched across Base\n  PUSH 20\t\t\ton launched across Base, Solan...\n  SHR \t\t\ton launched across Base, Solan...\n  JUMP \t\t\ton launched across Base, Solan...\ntag 12\t\t\ton launched across Base, Solan...\n  JUMPDEST \t\t\ton launched across Base, Solan...\n  POP \t\t\t\n  PUSH 2\t\t\ty,\\n  \n  PUSH [tag] 15\t\t\ty,\\n        by\n  DUP4 \t\t\t   by\n  DUP3 \t\t\ty,\\n  \n  PUSH [tag] 5\t\t\ty,\\n        by\n  JUMP \t\t\ty,\\n        by\ntag 15\t\t\ty,\\n        by\n  JUMPDEST \t\t\ty,\\n        by\n  POP \t\t\t\n  PUSH 3\t\t\tmerHash\n  PUSH [tag] 16\t\t\tmerHash_\\n    )\\n  \n  DUP3 \t\t\t   )\\n  \n  DUP3 \t\t\tmerHash\n  PUSH [tag] 5\t\t\tmerHash_\\n    )\\n  \n  JUMP \t\t\tmerHash_\\n    )\\n  \ntag 16\t\t\tmerHash_\\n    )\\n  \n  JUMPDEST \t\t\tmerHash_\\n    )\\n  \n  POP \t\t\t\n  PUSH [tag] 17\t\t\table\\n        dr\n  PUSH [tag] 18\t\t\table\\n        \n  JUMP \t\t\table\\n        dr\ntag 17\t\t\table\\n        dr\n  JUMPDEST \t\t\table\\n        dr\n  PUSH 0\t\t\trnal\\n        \n  SSTORE \t\t\trnal\\n        payable\\n       ...\n  PUSH [tag] 19\t\t\t       fundsAtt\n  PUSH [tag] 18\t\t\t       fundsA\n  JUMP \t\t\t       fundsAtt\ntag 19\t\t\t       fundsAtt\n  JUMPDEST \t\t\t       fundsAtt\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP2 \t\t\t_TIMESTAMP =\\n        WHITE\n  AND \t\t\t_TIMESTAMP =\\n        WHITE\n  PUSH [tag] 26\t\t\tMINT_TIMESTAMP =\\n        WHIT...\n  JUMPI \t\t\tMINT_TIMESTAMP =\\n        WHIT...\n  PUSH 40\t\t\t3 hours;\\n\\n    enum DropStatu...\n  MLOAD \t\t\t3 hours;\\n\\n    enum DropStatu...\n  PUSH 1E4FBDF7\t\t\t\n  PUSH E0\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t3 hours;\\n\\n    enum DropStatu...\n  MSTORE \t\t\t3 hours;\\n\\n    enum DropStatu...\n  PUSH 0\t\t\ts\n  PUSH 4\t\t\t3 hours;\\n\\n    enum DropStatu...\n  DUP3 \t\t\t3 hours;\\n\\n    enum DropStatu...\n  ADD \t\t\t3 hours;\\n\\n    enum DropStatu...\n  MSTORE \t\t\t{\\n        if (\\n            b...\n  PUSH 24\t\t\tmodifier whitelist\n  ADD \t\t\tmodifier whitelist\ntag 27\t\t\t3 hours;\\n\\n    enum DropStatu...\n  JUMPDEST \t\t\t3 hours;\\n\\n    enum DropStatu...\n  PUSH 40\t\t\t3 hours;\\n\\n    enum DropStatu...\n  MLOAD \t\t\t3 hours;\\n\\n    enum DropStatu...\n  DUP1 \t\t\t3 hours;\\n\\n    enum DropStatu...\n  SWAP2 \t\t\t3 hours;\\n\\n    enum DropStatu...\n  SUB \t\t\t3 hours;\\n\\n    enum DropStatu...\n  SWAP1 \t\t\t3 hours;\\n\\n    enum DropStatu...\n  REVERT \t\t\t3 hours;\\n\\n    enum DropStatu...\ntag 26\t\t\tMINT_TIMESTAMP =\\n        WHIT...\n  JUMPDEST \t\t\tMINT_TIMESTAMP =\\n        WHIT...\n  PUSH [tag] 29\t\t\t       PRESALE,\\n        WHITE...\n  DUP2 \t\t\t     WHITELI\n  PUSH [tag] 30\t\t\t       PRESALE,\\n  \n  JUMP \t\t\t       PRESALE,\\n        WHITE...\ntag 29\t\t\t       PRESALE,\\n        WHITE...\n  JUMPDEST \t\t\t       PRESALE,\\n        WHITE...\n  POP \t\t\t\n  PUSH [tag] 32\t\t\t_setDefaultRoyalty(msg.sender,...\n  CALLER \t\t\tmsg.sender\n  PUSH 1F4\t\t\t500\n  PUSH [tag] 33\t\t\t_setDefaultRoyalty\n  JUMP \t\t\t_setDefaultRoyalty(msg.sender,...\ntag 32\t\t\t_setDefaultRoyalty(msg.sender,...\n  JUMPDEST \t\t\t_setDefaultRoyalty(msg.sender,...\n  PUSH [tag] 57\t\t\tcontract Gloomers is\\n    Star...\n  JUMP \t\t\tcontract Gloomers is\\n    Star...\ntag 13\t\t\t START_TOKEN_ID = 3334;\\n    u...\n  JUMPDEST \t\t\t START_TOKEN_ID = 3334;\\n    u...\n  PUSH 28F75032\t\t\te63ac7c7d1e7aa58b7c33426665c\n  SSTORE \t\t\t1d8d9dfe63ac7c7d1e7aa58b7c3342...\n  JUMP \t\t\t START_TOKEN_ID = 3334;\\n    u...\ntag 18\t\t\tfunction _startTokenId() inter...\n  JUMPDEST \t\t\tfunction _startTokenId() inter...\n  PUSH 0\t\t\tuint256\n  PUSH [tag] 37\t\t\tstartTokenId()\n  PUSH 28F75032\t\t\t ERC2981,\\n    Ownable\\n{\\n   ...\n  SLOAD \t\t\te,\\n    ERC2981,\\n    Ownable\\...\n  SWAP1 \t\t\te,\\n    ERC2981,\\n    Ownable\\...\n  JUMP \t\t\tteleburning to Bitcoin\\n */\\nc...\ntag 37\t\t\tstartTokenId()\n  JUMPDEST \t\t\tstartTokenId()\n  SWAP1 \t\t\treturn startTokenId()\n  POP \t\t\treturn startTokenId()\n  SWAP1 \t\t\tfunction _startTokenId() inter...\n  JUMP \t\t\tfunction _startTokenId() inter...\ntag 30\t\t\ttive();\\n        }\\n        _;...\n  JUMPDEST \t\t\ttive();\\n        }\\n        _;...\n  PUSH B\t\t\t  bloc\n  DUP1 \t\t\t  bloc\n  SLOAD \t\t\t  bloc\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP4 \t\t\tp < WHITELIST_STA\n  DUP2 \t\t\tp < WHITELIST_STA\n  AND \t\t\tp < WHITELIST_STA\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  NOT \t\t\t\n  DUP4 \t\t\tp < WHITELIST_STA\n  AND \t\t\tp < WHITELIST_STA\n  DUP2 \t\t\tp < WHITELIST_STA\n  OR \t\t\tp < WHITELIST_STA\n  SWAP1 \t\t\tp < WHITELIST_STA\n  SWAP4 \t\t\tp < WHITELIST_STA\n  SSTORE \t\t\tp < WHITELIST_STA\n  PUSH 40\t\t\t\\n            block.timestamp ...\n  MLOAD \t\t\t\\n            block.timestamp ...\n  SWAP2 \t\t\t  bloc\n  AND \t\t\t  bloc\n  SWAP2 \t\t\t  bloc\n  SWAP1 \t\t\tp < WHITELIST_STA\n  DUP3 \t\t\t  bloc\n  SWAP1 \t\t\t  bloc\n  PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\t\t\t\\n            block.timestamp ...\n  SWAP1 \t\t\t\\n            block.timestamp ...\n  PUSH 0\t\t\t    if (\\n       \n  SWAP1 \t\t\t    if (\\n       \n  LOG3 \t\t\t\\n            block.timestamp ...\n  POP \t\t\te() {\\n        if (\\n         ...\n  POP \t\t\ttive();\\n        }\\n        _;...\n  JUMP \t\t\ttive();\\n        }\\n        _;...\ntag 33\t\t\tP) {\\n            revert Claim...\n  JUMPDEST \t\t\tP) {\\n            revert Claim...\n  PUSH 2710\t\t\t;\\n   \n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH 60\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP3 \t\t\t.sender] == 0) {\\n         \n  AND \t\t\t.sender] == 0) {\\n         \n  DUP2 \t\t\t.sender] == 0) {\\n         \n  LT \t\t\t\n  ISZERO \t\t\t[msg.sender] == 0) {\\n        ...\n  PUSH [tag] 45\t\t\t[msg.sender] == 0) {\\n        ...\n  JUMPI \t\t\t[msg.sender] == 0) {\\n        ...\n  PUSH 40\t\t\tilable(uint256 quantity) {\\n  ...\n  MLOAD \t\t\tilable(uint256 quantity) {\\n  ...\n  PUSH 6F483D09\t\t\t\n  PUSH E0\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\tilable(uint256 quantity) {\\n  ...\n  MSTORE \t\t\tilable(uint256 quantity) {\\n  ...\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH 60\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP4 \t\t\tblock.timestamp < PUBLIC_MINT_...\n  AND \t\t\tblock.timestamp < PUBLIC_MINT_...\n  PUSH 4\t\t\tilable(uint256 quantity) {\\n  ...\n  DUP3 \t\t\tilable(uint256 quantity) {\\n  ...\n  ADD \t\t\tilable(uint256 quantity) {\\n  ...\n  MSTORE \t\t\te() {\\n        if (block.times...\n  PUSH 24\t\t\t       revert Publ\n  DUP2 \t\t\t       revert Publ\n  ADD \t\t\t       revert Publ\n  DUP3 \t\t\t{\\n            revert PublicMi...\n  SWAP1 \t\t\t{\\n            revert PublicMi...\n  MSTORE \t\t\t{\\n            revert PublicMi...\n  PUSH 44\t\t\t   modifier public\n  ADD \t\t\t   modifier public\n  PUSH [tag] 27\t\t\tilable(uint256 quantity) {\\n  ...\n  JUMP \t\t\tIMESTAMP ||\\n            block...\ntag 45\t\t\t[msg.sender] == 0) {\\n        ...\n  JUMPDEST \t\t\t[msg.sender] == 0) {\\n        ...\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP4 \t\t\t 1 > END_TOKEN_ID - _p\n  AND \t\t\t 1 > END_TOKEN_ID - _p\n  PUSH [tag] 48\t\t\t() - 1 > END_TOKEN_ID - _presa...\n  JUMPI \t\t\t() - 1 > END_TOKEN_ID - _presa...\n  PUSH 40\t\t\t    ) {\\n            revert Ex...\n  MLOAD \t\t\t    ) {\\n            revert Ex...\n  PUSH 5B6CC805\t\t\t\n  PUSH E1\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t    ) {\\n            revert Ex...\n  MSTORE \t\t\t    ) {\\n            revert Ex...\n  PUSH 0\t\t\t;\n  PUSH 4\t\t\t    ) {\\n            revert Ex...\n  DUP3 \t\t\t    ) {\\n            revert Ex...\n  ADD \t\t\t    ) {\\n            revert Ex...\n  MSTORE \t\t\t{\\n        if (\\n            b...\n  PUSH 24\t\t\tmodifier whitelist\n  ADD \t\t\tmodifier whitelist\n  PUSH [tag] 27\t\t\t    ) {\\n            revert Ex...\n  JUMP \t\t\t(block.timestamp > WHITELIST_S...\ntag 48\t\t\t() - 1 > END_TOKEN_ID - _presa...\n  JUMPDEST \t\t\t() - 1 > END_TOKEN_ID - _presa...\n  POP \t\t\t\n  PUSH 40\t\t\tdsAttached(uint256 quantity) {...\n  DUP1 \t\t\tdsAttached(uint256 quantity) {...\n  MLOAD \t\t\tdsAttached(uint256 quantity) {...\n  DUP1 \t\t\tdsAttached(uint256 quantity) {...\n  DUP3 \t\t\tdsAttached(uint256 quantity) {...\n  ADD \t\t\tdsAttached(uint256 quantity) {...\n  SWAP1 \t\t\tdsAttached(uint256 quantity) {...\n  SWAP2 \t\t\tdsAttached(uint256 quantity) {...\n  MSTORE \t\t\tdsAttached(uint256 quantity) {...\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\tdsAttached(uint256 quantity) {...\n  SWAP3 \t\t\tdsAttached(uint256 quantity) {...\n  AND \t\t\tdsAttached(uint256 quantity) {...\n  DUP1 \t\t\tdsAttached(uint256 quantity) {...\n  DUP4 \t\t\tdsAttached(uint256 quantity) {...\n  MSTORE \t\t\tdsAttached(uint256 quantity) {...\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH 60\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\tdsAttached(uint256 quantity) {...\n  SWAP2 \t\t\tdsAttached(uint256 quantity) {...\n  AND \t\t\tdsAttached(uint256 quantity) {...\n  PUSH 20\t\t\tdsAttached(uint256 quantity) {...\n  SWAP1 \t\t\tdsAttached(uint256 quantity) {...\n  SWAP3 \t\t\tdsAttached(uint256 quantity) {...\n  ADD \t\t\tdsAttached(uint256 quantity) {...\n  DUP3 \t\t\tdsAttached(uint256 quantity) {...\n  SWAP1 \t\t\tdsAttached(uint256 quantity) {...\n  MSTORE \t\t\tdsAttached(uint256 quantity) {...\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SWAP1 \t\t\t   }\\n\\n    modifier fundsAtta...\n  SWAP2 \t\t\t   }\\n\\n    modifier fundsAtta...\n  MUL \t\t\t   }\\n\\n    modifier fundsAtta...\n  OR \t\t\t   }\\n\\n    modifier fundsAtta...\n  PUSH 9\t\t\t   }\\n\\n    modifier \n  SSTORE \t\t\t   }\\n\\n    modifier fundsAtta...\n  JUMP \t\t\tP) {\\n            revert Claim...\ntag 52\t\t\tRC721AQueryable} from \"./ERC72...\n  JUMPDEST \t\t\tRC721AQueryable} from \"./ERC72...\n  PUSH 4E487B71\t\t\tTokenIdHel\n  PUSH E0\t\t\tSta\n  SHL \t\t\trt {StartTokenIdHelp\n  PUSH 0\t\t\tm\n  MSTORE \t\t\tsol\";\\nimport {StartTokenIdHel...\n  PUSH 41\t\t\tenId\n  PUSH 4\t\t\tT\n  MSTORE \t\t\t./StartTokenIdH\n  PUSH 24\t\t\t{Own\n  PUSH 0\t\t\tr\n  REVERT \t\t\t\";\\nimport {Owna\ntag 53\t\t\t@openzeppelin/contracts/access...\n  JUMPDEST \t\t\t@openzeppelin/contracts/access...\n  PUSH 1\t\t\ti\n  DUP2 \t\t\tppelin/contr\n  DUP2 \t\t\tppelin/contr\n  SHR \t\t\tppelin/contr\n  SWAP1 \t\t\tppelin/contr\n  DUP3 \t\t\t*\\n * @title \n  AND \t\t\t*\\n * @title \n  DUP1 \t\t\t*\\n * @title \n  PUSH [tag] 61\t\t\t#3334 - #6666\\n * @author soko...\n  JUMPI \t\t\t#3334 - #6666\\n * @author soko...\n  PUSH 7F\t\t\t://w\n  DUP3 \t\t\t | htt\n  AND \t\t\tLabs | https://ww\n  SWAP2 \t\t\th | Gloom Labs | https://ww\n  POP \t\t\th | Gloom Labs | https://ww\ntag 61\t\t\t#3334 - #6666\\n * @author soko...\n  JUMPDEST \t\t\t#3334 - #6666\\n * @author soko...\n  PUSH 20\t\t\tre\n  DUP3 \t\t\tt with\n  LT \t\t\tract with pres\n  DUP2 \t\t\t * @dev ERC721A co\n  SUB \t\t\tom\\n * @dev ERC721A contract w...\n  PUSH [tag] 62\t\t\tn.com\\n * @dev ERC721A contrac...\n  JUMPI \t\t\tn.com\\n * @dev ERC721A contrac...\n  PUSH 4E487B71\t\t\t\\n * @notic\n  PUSH E0\t\t\tiod\n  SHL \t\t\t periods.\\n * @notice\n  PUSH 0\t\t\ti\n  MSTORE \t\t\tic minting periods.\\n * @notic...\n  PUSH 22\t\t\tolle\n  PUSH 4\t\t\tP\n  MSTORE \t\t\t 10k PFP collec\n  PUSH 24\t\t\tse, \n  PUSH 0\t\t\t \n  REVERT \t\t\t across Base, S\ntag 62\t\t\tn.com\\n * @dev ERC721A contrac...\n  JUMPDEST \t\t\tn.com\\n * @dev ERC721A contrac...\n  POP \t\t\tn.com\\n * @dev ERC721A contrac...\n  SWAP2 \t\t\t@openzeppelin/contracts/access...\n  SWAP1 \t\t\t@openzeppelin/contracts/access...\n  POP \t\t\t@openzeppelin/contracts/access...\n  JUMP \t\t\t@openzeppelin/contracts/access...\ntag 55\t\t\t  Ownable\\n{\\n    uint256 publ...\n  JUMPDEST \t\t\t  Ownable\\n{\\n    uint256 publ...\n  PUSH 1F\t\t\tD \n  DUP3 \t\t\tKEN\n  GT \t\t\t_TOKEN_ID =\n  ISZERO \t\t\tEND_TOKEN_ID = 6666;\\n    uint...\n  PUSH [tag] 65\t\t\tEND_TOKEN_ID = 6666;\\n    uint...\n  JUMPI \t\t\tEND_TOKEN_ID = 6666;\\n    uint...\n  DUP1 \t\t\tt PRI\n  PUSH 0\t\t\tt\n  MSTORE \t\t\tic constant PRIC\n  PUSH 20\t\t\tpubl\n  PUSH 0\t\t\t5\n  KECCAK256 \t\t\t\\n    uint256 publi\n  PUSH 1F\t\t\tRO\n  DUP5 \t\t\tc constant\n  ADD \t\t\tublic constant PROV\n  PUSH 5\t\t\t2\n  SHR \t\t\ttes32 public constant PROVE\n  DUP2 \t\t\t    \n  ADD \t\t\t 3;\\n    bytes32 public consta...\n  PUSH 20\t\t\t201d\n  DUP6 \t\t\t 0x5158cf3\n  LT \t\t\t    0x5158cf3ac201d8\n  ISZERO \t\t\t       0x5158cf3ac201d8d9dfe63...\n  PUSH [tag] 66\t\t\t       0x5158cf3ac201d8d9dfe63...\n  JUMPI \t\t\t       0x5158cf3ac201d8d9dfe63...\n  POP \t\t\t\n  DUP1 \t\t\t58b7\ntag 66\t\t\t       0x5158cf3ac201d8d9dfe63...\n  JUMPDEST \t\t\t       0x5158cf3ac201d8d9dfe63...\n  PUSH 1F\t\t\tns\n  DUP5 \t\t\tic \n  ADD \t\t\tpublic const\n  PUSH 5\t\t\t5\n  SHR \t\t\tint256 public consta\n  DUP3 \t\t\t\\n   \n  ADD \t\t\te2f;\\n    uint256 public const...\n  SWAP2 \t\t\t3e0003e095e2f;\\n    uint256 pu...\n  POP \t\t\t3e0003e095e2f;\\n    uint256 pu...\ntag 67\t\t\tay 04 2024 16:00:00 GMT\\n    u...\n  JUMPDEST \t\t\tay 04 2024 16:00:00 GMT\\n    u...\n  DUP2 \t\t\t0 \n  DUP2 \t\t\t16:00\n  LT \t\t\t24 16:00:00 G\n  ISZERO \t\t\tay 04 2024 16:00:00 GMT\\n    u...\n  PUSH [tag] 69\t\t\tay 04 2024 16:00:00 GMT\\n    u...\n  JUMPI \t\t\tay 04 2024 16:00:00 GMT\\n    u...\n  PUSH 0\t\t\t \n  DUP2 \t\t\t_TIMESTAMP =\\n   \n  SSTORE \t\t\t_TIMESTAMP =\\n   \n  PUSH 1\t\t\to\n  ADD \t\t\t56 public con\n  PUSH [tag] 67\t\t\tay 04 2024 16:00:00 GMT\\n    u...\n  JUMP \t\t\tay 04 2024 16:00:00 GMT\\n    u...\ntag 69\t\t\tay 04 2024 16:00:00 GMT\\n    u...\n  JUMPDEST \t\t\tay 04 2024 16:00:00 GMT\\n    u...\n  POP \t\t\t4 2\n  POP \t\t\t4 2\ntag 65\t\t\tEND_TOKEN_ID = 6666;\\n    uint...\n  JUMPDEST \t\t\tEND_TOKEN_ID = 6666;\\n    uint...\n  POP \t\t\t  Ownable\\n{\\n    uint256 publ...\n  POP \t\t\t  Ownable\\n{\\n    uint256 publ...\n  POP \t\t\t  Ownable\\n{\\n    uint256 publ...\n  JUMP \t\t\t  Ownable\\n{\\n    uint256 publ...\ntag 5\t\t\tD;\\n\\n    mapping(address => u...\n  JUMPDEST \t\t\tD;\\n\\n    mapping(address => u...\n  DUP2 \t\t\tsByWallet;\n  MLOAD \t\t\tsByWallet;\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH 40\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP2 \t\t\t(uint256 => address) private _\n  GT \t\t\t(uint256 => address) private _\n  ISZERO \t\t\ting(uint256 => address) privat...\n  PUSH [tag] 73\t\t\ting(uint256 => address) privat...\n  JUMPI \t\t\ting(uint256 => address) privat...\n  PUSH [tag] 73\t\t\tsaleWalletsById;\\n \n  PUSH [tag] 52\t\t\tsaleWalletsById;\\n \n  JUMP \t\t\tsaleWalletsById;\\n \ntag 73\t\t\tsaleWalletsById;\\n \n  JUMPDEST \t\t\tsaleWalletsById;\\n \n  PUSH [tag] 74\t\t\tprivate _presalesCount;\\n    u...\n  DUP2 \t\t\tmerHas\n  PUSH [tag] 75\t\t\tleSupplyOffset;\\n    bytes32 p...\n  DUP5 \t\t\tate \n  SLOAD \t\t\t2 private g\n  PUSH [tag] 53\t\t\tleSupplyOffset;\\n    bytes32 p...\n  JUMP \t\t\tleSupplyOffset;\\n    bytes32 p...\ntag 75\t\t\tleSupplyOffset;\\n    bytes32 p...\n  JUMPDEST \t\t\tleSupplyOffset;\\n    bytes32 p...\n  DUP5 \t\t\t_pre\n  PUSH [tag] 55\t\t\tprivate _presalesCount;\\n    u...\n  JUMP \t\t\tprivate _presalesCount;\\n    u...\ntag 74\t\t\tprivate _presalesCount;\\n    u...\n  JUMPDEST \t\t\tprivate _presalesCount;\\n    u...\n  PUSH 20\t\t\te _b\n  DUP1 \t\t\te _b\n  PUSH 1F\t\t\tfs\n  DUP4 \t\t\token.xyz/ipfs/\n  GT \t\t\token.xyz/ipfs/\n  PUSH 1\t\t\tr\n  DUP2 \t\t\trgagzrjvavrsjtnz6qhqvnlbkz3vh5...\n  EQ \t\t\trgagzrjvavrsjtnz6qhqvnlbkz3vh5...\n  PUSH [tag] 77\t\t\trgagzrjvavrsjtnz6qhqvnlbkz3vh5...\n  JUMPI \t\t\trgagzrjvavrsjtnz6qhqvnlbkz3vh5...\n  PUSH 0\t\t\ts\n  DUP5 \t\t\tnEOACa\n  ISZERO \t\t\t NonEOACaller();\\n\\n    modifi...\n  PUSH [tag] 78\t\t\t NonEOACaller();\\n\\n    modifi...\n  JUMPI \t\t\t NonEOACaller();\\n\\n    modifi...\n  POP \t\t\t\n  DUP6 \t\t\tif (dropStatus == D\n  DUP4 \t\t\tif (dropStatus == D\n  ADD \t\t\tif (dropStatus == D\n  MLOAD \t\t\t      if (dropStatus == Dr\ntag 78\t\t\t NonEOACaller();\\n\\n    modifi...\n  JUMPDEST \t\t\t NonEOACaller();\\n\\n    modifi...\n  PUSH 0\t\t\t\n  NOT \t\t\t\n  PUSH 3\t\t\ta\n  DUP7 \t\t\topStatus pu\n  SWAP1 \t\t\topStatus pu\n  SHL \t\t\topStatus pu\n  SHR \t\t\t  DropStatus public drop\n  NOT \t\t\t\\n\\n    DropStatus public drop...\n  AND \t\t\tBLIC\\n    }\\n\\n    DropStatus ...\n  PUSH 1\t\t\t \n  DUP6 \t\t\tus = DropSt\n  SWAP1 \t\t\tus = DropSt\n  SHL \t\t\tus = DropSt\n  OR \t\t\t PUBLIC\\n    }\\n\\n    DropStat...\n  DUP6 \t\t\t      revert MintingDisabled()...\n  SSTORE \t\t\t      revert MintingDisabled()...\n  PUSH [tag] 76\t\t\t.gloomtoken.xyz/ipfs/bafybeidn...\n  JUMP \t\t\t.gloomtoken.xyz/ipfs/bafybeidn...\ntag 77\t\t\trgagzrjvavrsjtnz6qhqvnlbkz3vh5...\n  JUMPDEST \t\t\trgagzrjvavrsjtnz6qhqvnlbkz3vh5...\n  PUSH 0\t\t\tr\n  DUP6 \t\t\tIdHelper,\\n    \n  DUP2 \t\t\tIdHelper,\\n    \n  MSTORE \t\t\tIdHelper,\\n    \n  PUSH 20\t\t\t\\n   \n  DUP2 \t\t\t21AQueryable,\\n    \n  KECCAK256 \t\t\t21AQueryable,\\n    \n  PUSH 1F\t\t\t\n  NOT \t\t\t\n  DUP7 \t\t\tkj236ylsxwpmsy\";\\n\\n  \n  AND \t\t\tkj236ylsxwpmsy\";\\n\\n  \n  SWAP2 \t\t\tkj236ylsxwpmsy\";\\n\\n  \ntag 81\t\t\tess indexed _to, uint256 _quan...\n  JUMPDEST \t\t\tess indexed _to, uint256 _quan...\n  DUP3 \t\t\to, uint\n  DUP2 \t\t\t \n  LT \t\t\txed _to, uint2\n  ISZERO \t\t\tess indexed _to, uint256 _quan...\n  PUSH [tag] 83\t\t\tess indexed _to, uint256 _quan...\n  JUMPI \t\t\tess indexed _to, uint256 _quan...\n  DUP9 \t\t\t   event RegisterPr\n  DUP7 \t\t\t   event RegisterPr\n  ADD \t\t\t   event RegisterPr\n  MLOAD \t\t\tty);\\n    event RegisterPre\n  DUP3 \t\t\tuint256 _quantity);\\n    event...\n  SSTORE \t\t\tuint256 _quantity);\\n    event...\n  SWAP5 \t\t\tress indexed _to, uint256 _\n  DUP5 \t\t\tress indexed _to, uint256 _\n  ADD \t\t\tress indexed _to, uint256 _\n  SWAP5 \t\t\tress indexed _to, uint256 _\n  PUSH 1\t\t\ti\n  SWAP1 \t\t\tnt256 _quantit\n  SWAP2 \t\t\tnt256 _quantit\n  ADD \t\t\tnt256 _quantit\n  SWAP1 \t\t\tnt256 _quantit\n  DUP5 \t\t\ttity);\\n    event Mi\n  ADD \t\t\ttity);\\n    event Mi\n  PUSH [tag] 81\t\t\tess indexed _to, uint256 _quan...\n  JUMP \t\t\tess indexed _to, uint256 _quan...\ntag 83\t\t\tess indexed _to, uint256 _quan...\n  JUMPDEST \t\t\tess indexed _to, uint256 _quan...\n  POP \t\t\tind\n  DUP6 \t\t\ttus _d\n  DUP3 \t\t\ts(DropS\n  LT \t\t\tatus(DropStatus _dr\n  ISZERO \t\t\tpStatus(DropStatus _dropStatus...\n  PUSH [tag] 84\t\t\tpStatus(DropStatus _dropStatus...\n  JUMPI \t\t\tpStatus(DropStatus _dropStatus...\n  DUP8 \t\t\tlicMintNotActive();\n  DUP6 \t\t\tlicMintNotActive();\n  ADD \t\t\tlicMintNotActive();\n  MLOAD \t\t\tor PublicMintNotActive();\\n\n  PUSH 0\t\t\t\n  NOT \t\t\t\n  PUSH 3\t\t\t \n  DUP9 \t\t\t);\\n    error C\n  SWAP1 \t\t\t);\\n    error C\n  SHL \t\t\t);\\n    error C\n  PUSH F8\t\t\timN\n  AND \t\t\tive();\\n    error ClaimNo\n  SHR \t\t\ttActive();\\n    error ClaimNot...\n  NOT \t\t\tleNotActive();\\n    error Clai...\n  AND \t\t\t    error PresaleNotActive();\\...\n  DUP2 \t\t\tstNotActive();\\n    error Pres...\n  SSTORE \t\t\tstNotActive();\\n    error Pres...\ntag 84\t\t\tpStatus(DropStatus _dropStatus...\n  JUMPDEST \t\t\tpStatus(DropStatus _dropStatus...\n  POP \t\t\tpStatus(DropStatus _dropStatus...\n  POP \t\t\tpStatus(DropStatus _dropStatus...\n  PUSH 1\t\t\t\\n\n  DUP5 \t\t\tWallet\n  PUSH 1\t\t\tP\n  SHL \t\t\tMintPerWallet(\n  ADD \t\t\tsMaxMintPerWallet();\\n \n  DUP6 \t\t\tExce\n  SSTORE \t\t\t error ExceedsMaxMintPerWallet...\ntag 76\t\t\t.gloomtoken.xyz/ipfs/bafybeidn...\n  JUMPDEST \t\t\t.gloomtoken.xyz/ipfs/bafybeidn...\n  POP \t\t\t.gloomtoken.xyz/ipfs/bafybeidn...\n  POP \t\t\t.gloomtoken.xyz/ipfs/bafybeidn...\n  POP \t\t\t.gloomtoken.xyz/ipfs/bafybeidn...\n  POP \t\t\t.gloomtoken.xyz/ipfs/bafybeidn...\n  POP \t\t\tD;\\n\\n    mapping(address => u...\n  POP \t\t\tD;\\n\\n    mapping(address => u...\n  JUMP \t\t\tD;\\n\\n    mapping(address => u...\ntag 57\t\t\tIMESTAMP ||\\n            block...\n  JUMPDEST \t\t\tIMESTAMP ||\\n            block...\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract Gloomers is\\n    Star...\n  DUP1 \t\t\tcontract Gloomers is\\n    Star...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract Gloomers is\\n    Star...\n  PUSH 0\t\t\tcontract Gloomers is\\n    Star...\n  CODECOPY \t\t\tcontract Gloomers is\\n    Star...\n  PUSH 0\t\t\tcontract Gloomers is\\n    Star...\n  RETURN \t\t\tcontract Gloomers is\\n    Star...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract Gloomers is\\n    Star...\n      PUSH 40\t\t\tcontract Gloomers is\\n    Star...\n      MSTORE \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 4\t\t\tcontract Gloomers is\\n    Star...\n      CALLDATASIZE \t\t\tcontract Gloomers is\\n    Star...\n      LT \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 1\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 0\t\t\tcontract Gloomers is\\n    Star...\n      CALLDATALOAD \t\t\tcontract Gloomers is\\n    Star...\n      PUSH E0\t\t\tcontract Gloomers is\\n    Star...\n      SHR \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 833B9499\t\t\tcontract Gloomers is\\n    Star...\n      GT \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 44\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH B19960E6\t\t\tcontract Gloomers is\\n    Star...\n      GT \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 45\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH C87B56DD\t\t\tcontract Gloomers is\\n    Star...\n      GT \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 46\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH C87B56DD\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 38\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH E6798BAA\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 39\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH E985E9C5\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 40\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH F2FDE38B\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 41\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH FE776953\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 42\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH FF1B6556\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 43\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      STOP \t\t\tcontract Gloomers is\\n    Star...\n    tag 46\t\t\tcontract Gloomers is\\n    Star...\n      JUMPDEST \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH B19960E6\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 33\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH B19FDE5A\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 34\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH B88D4FDE\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 35\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH C23DC68F\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 36\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH C62001BD\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 37\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      STOP \t\t\tcontract Gloomers is\\n    Star...\n    tag 45\t\t\tcontract Gloomers is\\n    Star...\n      JUMPDEST \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 95D89B41\t\t\tcontract Gloomers is\\n    Star...\n      GT \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 47\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 95D89B41\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 28\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 99A2557A\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 29\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 9A4F41BA\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 30\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH A0712D68\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 31\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH A22CB465\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 32\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      STOP \t\t\tcontract Gloomers is\\n    Star...\n    tag 47\t\t\tcontract Gloomers is\\n    Star...\n      JUMPDEST \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 833B9499\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 23\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 8462151C\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 24\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 86879235\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 25\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 87F65C91\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 26\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 8DA5CB5B\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 27\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      STOP \t\t\tcontract Gloomers is\\n    Star...\n    tag 44\t\t\tcontract Gloomers is\\n    Star...\n      JUMPDEST \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 29510D34\t\t\tcontract Gloomers is\\n    Star...\n      GT \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 48\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 4B962D10\t\t\tcontract Gloomers is\\n    Star...\n      GT \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 49\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 4B962D10\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 18\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 5BBB2177\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 19\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 6352211E\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 20\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 70A08231\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 21\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 715018A6\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 22\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      STOP \t\t\tcontract Gloomers is\\n    Star...\n    tag 49\t\t\tcontract Gloomers is\\n    Star...\n      JUMPDEST \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 29510D34\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 13\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 2A55205A\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 14\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 3CCFD60B\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 15\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 42842E0E\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 16\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 46B00B6D\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 17\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      STOP \t\t\tcontract Gloomers is\\n    Star...\n    tag 48\t\t\tcontract Gloomers is\\n    Star...\n      JUMPDEST \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 81812FC\t\t\tcontract Gloomers is\\n    Star...\n      GT \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 50\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 81812FC\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 8\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 95EA7B3\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 9\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 18160DDD\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 10\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 23B872DD\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 11\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 242261AC\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 12\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      STOP \t\t\tcontract Gloomers is\\n    Star...\n    tag 50\t\t\tcontract Gloomers is\\n    Star...\n      JUMPDEST \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 1FFC9A7\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 3\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 4634D8D\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 4\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 46EF9A5\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 5\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 675B7C6\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 6\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      DUP1 \t\t\tcontract Gloomers is\\n    Star...\n      PUSH 6FDDE03\t\t\tcontract Gloomers is\\n    Star...\n      EQ \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 7\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      STOP \t\t\tcontract Gloomers is\\n    Star...\n    tag 1\t\t\tcontract Gloomers is\\n    Star...\n      JUMPDEST \t\t\tcontract Gloomers is\\n    Star...\n      CALLDATASIZE \t\t\tcontract Gloomers is\\n    Star...\n      PUSH [tag] 2\t\t\tcontract Gloomers is\\n    Star...\n      JUMPI \t\t\tcontract Gloomers is\\n    Star...\n      STOP \t\t\tcontract Gloomers is\\n    Star...\n    tag 2\t\t\tcontract Gloomers is\\n    Star...\n      JUMPDEST \t\t\tcontract Gloomers is\\n    Star...\n      STOP \t\t\tcontract Gloomers is\\n    Star...\n    tag 3\t\t\tfunction supportsInterface(\\n ...\n      JUMPDEST \t\t\tfunction supportsInterface(\\n ...\n      CALLVALUE \t\t\tfunction supportsInterface(\\n ...\n      DUP1 \t\t\tfunction supportsInterface(\\n ...\n      ISZERO \t\t\tfunction supportsInterface(\\n ...\n      PUSH [tag] 55\t\t\tfunction supportsInterface(\\n ...\n      JUMPI \t\t\tfunction supportsInterface(\\n ...\n      PUSH 0\t\t\tfunction supportsInterface(\\n ...\n      DUP1 \t\t\tfunction supportsInterface(\\n ...\n      REVERT \t\t\tfunction supportsInterface(\\n ...\n    tag 55\t\t\tfunction supportsInterface(\\n ...\n      JUMPDEST \t\t\tfunction supportsInterface(\\n ...\n      POP \t\t\t\n      PUSH [tag] 56\t\t\tfunction supportsInterface(\\n ...\n      PUSH [tag] 57\t\t\tfunction supportsInterface(\\n ...\n      CALLDATASIZE \t\t\tfunction supportsInterface(\\n ...\n      PUSH 4\t\t\tfunction supportsInterface(\\n ...\n      PUSH [tag] 58\t\t\tfunction supportsInterface(\\n ...\n      JUMP \t\t\tfunction supportsInterface(\\n ...\n    tag 57\t\t\tfunction supportsInterface(\\n ...\n      JUMPDEST \t\t\tfunction supportsInterface(\\n ...\n      PUSH [tag] 59\t\t\tfunction supportsInterface(\\n ...\n      JUMP \t\t\tfunction supportsInterface(\\n ...\n    tag 56\t\t\tfunction supportsInterface(\\n ...\n      JUMPDEST \t\t\tfunction supportsInterface(\\n ...\n      PUSH 40\t\t\tfunction supportsInterface(\\n ...\n      MLOAD \t\t\tfunction supportsInterface(\\n ...\n      SWAP1 \t\t\t periods.\\n * @\n      ISZERO \t\t\t periods.\\n * @\n      ISZERO \t\t\tminting periods.\\n * @n\n      DUP2 \t\t\telist, and public minting peri...\n      MSTORE \t\t\telist, and public minting peri...\n      PUSH 20\t\t\tre\n      ADD \t\t\tcontract with pres\n    tag 60\t\t\tfunction supportsInterface(\\n ...\n      JUMPDEST \t\t\tfunction supportsInterface(\\n ...\n      PUSH 40\t\t\tfunction supportsInterface(\\n ...\n      MLOAD \t\t\tfunction supportsInterface(\\n ...\n      DUP1 \t\t\tfunction supportsInterface(\\n ...\n      SWAP2 \t\t\tfunction supportsInterface(\\n ...\n      SUB \t\t\tfunction supportsInterface(\\n ...\n      SWAP1 \t\t\tfunction supportsInterface(\\n ...\n      RETURN \t\t\tfunction supportsInterface(\\n ...\n    tag 4\t\t\tfunction setDefaultRoyalty(\\n ...\n      JUMPDEST \t\t\tfunction setDefaultRoyalty(\\n ...\n      CALLVALUE \t\t\tfunction setDefaultRoyalty(\\n ...\n      DUP1 \t\t\tfunction setDefaultRoyalty(\\n ...\n      ISZERO \t\t\tfunction setDefaultRoyalty(\\n ...\n      PUSH [tag] 62\t\t\tfunction setDefaultRoyalty(\\n ...\n      JUMPI \t\t\tfunction setDefaultRoyalty(\\n ...\n      PUSH 0\t\t\tfunction setDefaultRoyalty(\\n ...\n      DUP1 \t\t\tfunction setDefaultRoyalty(\\n ...\n      REVERT \t\t\tfunction setDefaultRoyalty(\\n ...\n    tag 62\t\t\tfunction setDefaultRoyalty(\\n ...\n      JUMPDEST \t\t\tfunction setDefaultRoyalty(\\n ...\n      POP \t\t\t\n      PUSH [tag] 2\t\t\tfunction setDefaultRoyalty(\\n ...\n      PUSH [tag] 64\t\t\tfunction setDefaultRoyalty(\\n ...\n      CALLDATASIZE \t\t\tfunction setDefaultRoyalty(\\n ...\n      PUSH 4\t\t\tfunction setDefaultRoyalty(\\n ...\n      PUSH [tag] 65\t\t\tfunction setDefaultRoyalty(\\n ...\n      JUMP \t\t\tfunction setDefaultRoyalty(\\n ...\n    tag 64\t\t\tfunction setDefaultRoyalty(\\n ...\n      JUMPDEST \t\t\tfunction setDefaultRoyalty(\\n ...\n      PUSH [tag] 66\t\t\tfunction setDefaultRoyalty(\\n ...\n      JUMP \t\t\tfunction setDefaultRoyalty(\\n ...\n    tag 5\t\t\tfunction claimPresale()\\n     ...\n      JUMPDEST \t\t\tfunction claimPresale()\\n     ...\n      CALLVALUE \t\t\tfunction claimPresale()\\n     ...\n      DUP1 \t\t\tfunction claimPresale()\\n     ...\n      ISZERO \t\t\tfunction claimPresale()\\n     ...\n      PUSH [tag] 67\t\t\tfunction claimPresale()\\n     ...\n      JUMPI \t\t\tfunction claimPresale()\\n     ...\n      PUSH 0\t\t\tfunction claimPresale()\\n     ...\n      DUP1 \t\t\tfunction claimPresale()\\n     ...\n      REVERT \t\t\tfunction claimPresale()\\n     ...\n    tag 67\t\t\tfunction claimPresale()\\n     ...\n      JUMPDEST \t\t\tfunction claimPresale()\\n     ...\n      POP \t\t\tfunction claimPresale()\\n     ...\n      PUSH [tag] 2\t\t\tfunction claimPresale()\\n     ...\n      PUSH [tag] 69\t\t\tfunction claimPresale()\\n     ...\n      JUMP \t\t\tfunction claimPresale()\\n     ...\n    tag 6\t\t\tfunction setTokenUri(string ca...\n      JUMPDEST \t\t\tfunction setTokenUri(string ca...\n      CALLVALUE \t\t\tfunction setTokenUri(string ca...\n      DUP1 \t\t\tfunction setTokenUri(string ca...\n      ISZERO \t\t\tfunction setTokenUri(string ca...\n      PUSH [tag] 70\t\t\tfunction setTokenUri(string ca...\n      JUMPI \t\t\tfunction setTokenUri(string ca...\n      PUSH 0\t\t\tfunction setTokenUri(string ca...\n      DUP1 \t\t\tfunction setTokenUri(string ca...\n      REVERT \t\t\tfunction setTokenUri(string ca...\n    tag 70\t\t\tfunction setTokenUri(string ca...\n      JUMPDEST \t\t\tfunction setTokenUri(string ca...\n      POP \t\t\t\n      PUSH [tag] 2\t\t\tfunction setTokenUri(string ca...\n      PUSH [tag] 72\t\t\tfunction setTokenUri(string ca...\n      CALLDATASIZE \t\t\tfunction setTokenUri(string ca...\n      PUSH 4\t\t\tfunction setTokenUri(string ca...\n      PUSH [tag] 73\t\t\tfunction setTokenUri(string ca...\n      JUMP \t\t\tfunction setTokenUri(string ca...\n    tag 72\t\t\tfunction setTokenUri(string ca...\n      JUMPDEST \t\t\tfunction setTokenUri(string ca...\n      PUSH [tag] 74\t\t\tfunction setTokenUri(string ca...\n      JUMP \t\t\tfunction setTokenUri(string ca...\n    tag 7\t\t\t\n      JUMPDEST \t\t\t\n      CALLVALUE \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 75\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 75\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 77\t\t\t\n      JUMP \t\t\t\n    tag 76\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 60\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 79\t\t\t\n      JUMP \t\t\t\n    tag 8\t\t\t\n      JUMPDEST \t\t\t\n      CALLVALUE \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 80\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 80\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 81\t\t\t\n      PUSH [tag] 82\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 83\t\t\t\n      JUMP \t\t\t\n    tag 82\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 84\t\t\t\n      JUMP \t\t\t\n    tag 81\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\tr NonEOACaller();\\n\\n    modif...\n      SWAP2 \t\t\tr NonEOACaller();\\n\\n    modif...\n      AND \t\t\tr NonEOACaller();\\n\\n    modif...\n      DUP2 \t\t\ttFunds();\\n    error NonEOACal...\n      MSTORE \t\t\ttFunds();\\n    error NonEOACal...\n      PUSH 20\t\t\t I\n      ADD \t\t\tly();\\n    error In\n      PUSH [tag] 60\t\t\t\n      JUMP \t\t\te();\\n    error ClaimNotActive...\n    tag 9\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 2\t\t\t\n      PUSH [tag] 88\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 89\t\t\t\n      JUMP \t\t\t\n    tag 88\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 90\t\t\t\n      JUMP \t\t\t\n    tag 10\t\t\tsender, quantity);\\n\\n        ...\n      JUMPDEST \t\t\tsender, quantity);\\n\\n        ...\n      CALLVALUE \t\t\tsender, quantity);\\n\\n        ...\n      DUP1 \t\t\tsender, quantity);\\n\\n        ...\n      ISZERO \t\t\tsender, quantity);\\n\\n        ...\n      PUSH [tag] 91\t\t\tsender, quantity);\\n\\n        ...\n      JUMPI \t\t\tsender, quantity);\\n\\n        ...\n      PUSH 0\t\t\tsender, quantity);\\n\\n        ...\n      DUP1 \t\t\tsender, quantity);\\n\\n        ...\n      REVERT \t\t\tsender, quantity);\\n\\n        ...\n    tag 91\t\t\tsender, quantity);\\n\\n        ...\n      JUMPDEST \t\t\tsender, quantity);\\n\\n        ...\n      POP \t\t\tsender, quantity);\\n\\n        ...\n      PUSH [tag] 92\t\t\tsender, quantity);\\n\\n        ...\n      PUSH [tag] 93\t\t\tsender, quantity);\\n\\n        ...\n      JUMP \t\t\tsender, quantity);\\n\\n        ...\n    tag 92\t\t\tsender, quantity);\\n\\n        ...\n      JUMPDEST \t\t\tsender, quantity);\\n\\n        ...\n      PUSH 40\t\t\tsender, quantity);\\n\\n        ...\n      MLOAD \t\t\tsender, quantity);\\n\\n        ...\n      SWAP1 \t\t\tamp > PUBLIC_MINT_TIMESTA\n      DUP2 \t\t\tamp > PUBLIC_MINT_TIMESTA\n      MSTORE \t\t\tamp > PUBLIC_MINT_TIMESTA\n      PUSH 20\t\t\tbl\n      ADD \t\t\t||\\n            blo\n      PUSH [tag] 60\t\t\tsender, quantity);\\n\\n        ...\n      JUMP \t\t\t       _;\\n    }\\n\\n    modifi...\n    tag 11\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 2\t\t\t\n      PUSH [tag] 97\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 98\t\t\t\n      JUMP \t\t\t\n    tag 97\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 99\t\t\t\n      JUMP \t\t\t\n    tag 12\t\t\tfunction registerPresale(\\n   ...\n      JUMPDEST \t\t\tfunction registerPresale(\\n   ...\n      PUSH [tag] 2\t\t\tfunction registerPresale(\\n   ...\n      PUSH [tag] 101\t\t\tfunction registerPresale(\\n   ...\n      CALLDATASIZE \t\t\tfunction registerPresale(\\n   ...\n      PUSH 4\t\t\tfunction registerPresale(\\n   ...\n      PUSH [tag] 102\t\t\tfunction registerPresale(\\n   ...\n      JUMP \t\t\tfunction registerPresale(\\n   ...\n    tag 101\t\t\tfunction registerPresale(\\n   ...\n      JUMPDEST \t\t\tfunction registerPresale(\\n   ...\n      PUSH [tag] 103\t\t\tfunction registerPresale(\\n   ...\n      JUMP \t\t\tfunction registerPresale(\\n   ...\n    tag 13\t\t\tfunction mintWhitelist(\\n     ...\n      JUMPDEST \t\t\tfunction mintWhitelist(\\n     ...\n      PUSH [tag] 2\t\t\tfunction mintWhitelist(\\n     ...\n      PUSH [tag] 105\t\t\tfunction mintWhitelist(\\n     ...\n      CALLDATASIZE \t\t\tfunction mintWhitelist(\\n     ...\n      PUSH 4\t\t\tfunction mintWhitelist(\\n     ...\n      PUSH [tag] 102\t\t\tfunction mintWhitelist(\\n     ...\n      JUMP \t\t\tfunction mintWhitelist(\\n     ...\n    tag 105\t\t\tfunction mintWhitelist(\\n     ...\n      JUMPDEST \t\t\tfunction mintWhitelist(\\n     ...\n      PUSH [tag] 106\t\t\tfunction mintWhitelist(\\n     ...\n      JUMP \t\t\tfunction mintWhitelist(\\n     ...\n    tag 14\t\t\trror PublicMintNotActive();\\n ...\n      JUMPDEST \t\t\trror PublicMintNotActive();\\n ...\n      CALLVALUE \t\t\trror PublicMintNotActive();\\n ...\n      DUP1 \t\t\trror PublicMintNotActive();\\n ...\n      ISZERO \t\t\trror PublicMintNotActive();\\n ...\n      PUSH [tag] 107\t\t\trror PublicMintNotActive();\\n ...\n      JUMPI \t\t\trror PublicMintNotActive();\\n ...\n      PUSH 0\t\t\trror PublicMintNotActive();\\n ...\n      DUP1 \t\t\trror PublicMintNotActive();\\n ...\n      REVERT \t\t\trror PublicMintNotActive();\\n ...\n    tag 107\t\t\trror PublicMintNotActive();\\n ...\n      JUMPDEST \t\t\trror PublicMintNotActive();\\n ...\n      POP \t\t\t\n      PUSH [tag] 108\t\t\trror PublicMintNotActive();\\n ...\n      PUSH [tag] 109\t\t\trror PublicMintNotActive();\\n ...\n      CALLDATASIZE \t\t\trror PublicMintNotActive();\\n ...\n      PUSH 4\t\t\trror PublicMintNotActive();\\n ...\n      PUSH [tag] 102\t\t\trror PublicMintNotActive();\\n ...\n      JUMP \t\t\trror PublicMintNotActive();\\n ...\n    tag 109\t\t\trror PublicMintNotActive();\\n ...\n      JUMPDEST \t\t\trror PublicMintNotActive();\\n ...\n      PUSH [tag] 111\t\t\trror PublicMintNotActive();\\n ...\n      JUMP \t\t\trror PublicMintNotActive();\\n ...\n    tag 108\t\t\trror PublicMintNotActive();\\n ...\n      JUMPDEST \t\t\trror PublicMintNotActive();\\n ...\n      PUSH 40\t\t\trror PublicMintNotActive();\\n ...\n      DUP1 \t\t\trror PublicMintNotActive();\\n ...\n      MLOAD \t\t\trror PublicMintNotActive();\\n ...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\tender] +\\n                _pre...\n      SWAP4 \t\t\tender] +\\n                _pre...\n      AND \t\t\tender] +\\n                _pre...\n      DUP4 \t\t\ttedPerWallet[msg.sender] +\\n  ...\n      MSTORE \t\t\ttedPerWallet[msg.sender] +\\n  ...\n      PUSH 20\t\t\t +\n      DUP4 \t\t\tlet[msg.sender] +\\n\n      ADD \t\t\tlet[msg.sender] +\\n\n      SWAP2 \t\t\tnsByWallet[msg.sender] +\\n    ...\n      SWAP1 \t\t\tnsByWallet[msg.sender] +\\n    ...\n      SWAP2 \t\t\tnsByWallet[msg.sender] +\\n    ...\n      MSTORE \t\t\tnsByWallet[msg.sender] +\\n    ...\n      ADD \t\t\t      if (\\n       \n      PUSH [tag] 60\t\t\trror PublicMintNotActive();\\n ...\n      JUMP \t\t\tCE_PER_TOKEN * quantity) {\\n  ...\n    tag 15\t\t\tfunction withdraw() public onl...\n      JUMPDEST \t\t\tfunction withdraw() public onl...\n      CALLVALUE \t\t\tfunction withdraw() public onl...\n      DUP1 \t\t\tfunction withdraw() public onl...\n      ISZERO \t\t\tfunction withdraw() public onl...\n      PUSH [tag] 114\t\t\tfunction withdraw() public onl...\n      JUMPI \t\t\tfunction withdraw() public onl...\n      PUSH 0\t\t\tfunction withdraw() public onl...\n      DUP1 \t\t\tfunction withdraw() public onl...\n      REVERT \t\t\tfunction withdraw() public onl...\n    tag 114\t\t\tfunction withdraw() public onl...\n      JUMPDEST \t\t\tfunction withdraw() public onl...\n      POP \t\t\tfunction withdraw() public onl...\n      PUSH [tag] 2\t\t\tfunction withdraw() public onl...\n      PUSH [tag] 116\t\t\tfunction withdraw() public onl...\n      JUMP \t\t\tfunction withdraw() public onl...\n    tag 16\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 2\t\t\t\n      PUSH [tag] 118\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 98\t\t\t\n      JUMP \t\t\t\n    tag 118\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 119\t\t\t\n      JUMP \t\t\t\n    tag 17\t\t\tDropStatus public dropStatus =...\n      JUMPDEST \t\t\tDropStatus public dropStatus =...\n      CALLVALUE \t\t\tDropStatus public dropStatus =...\n      DUP1 \t\t\tDropStatus public dropStatus =...\n      ISZERO \t\t\tDropStatus public dropStatus =...\n      PUSH [tag] 120\t\t\tDropStatus public dropStatus =...\n      JUMPI \t\t\tDropStatus public dropStatus =...\n      PUSH 0\t\t\tDropStatus public dropStatus =...\n      DUP1 \t\t\tDropStatus public dropStatus =...\n      REVERT \t\t\tDropStatus public dropStatus =...\n    tag 120\t\t\tDropStatus public dropStatus =...\n      JUMPDEST \t\t\tDropStatus public dropStatus =...\n      POP \t\t\t\n      PUSH B\t\t\tDropStatus public dropStatus =...\n      SLOAD \t\t\tDropStatus public dropStatus =...\n      PUSH [tag] 121\t\t\tDropStatus public dropStatus =...\n      SWAP1 \t\t\tDropStatus public dropStatus =...\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SWAP1 \t\t\tDropStatus public dropStatus =...\n      DIV \t\t\tDropStatus public dropStatus =...\n      PUSH FF\t\t\tDropStatus public dropStatus =...\n      AND \t\t\tDropStatus public dropStatus =...\n      DUP2 \t\t\tDropStatus public dropStatus =...\n      JUMP \t\t\tDropStatus public dropStatus =...\n    tag 121\t\t\tDropStatus public dropStatus =...\n      JUMPDEST \t\t\tDropStatus public dropStatus =...\n      PUSH 40\t\t\tDropStatus public dropStatus =...\n      MLOAD \t\t\tDropStatus public dropStatus =...\n      PUSH [tag] 60\t\t\tDropStatus public dropStatus =...\n      SWAP2 \t\t\tDropStatus public dropStatus =...\n      SWAP1 \t\t\tDropStatus public dropStatus =...\n      PUSH [tag] 124\t\t\tDropStatus public dropStatus =...\n      JUMP \t\t\tDropStatus public dropStatus =...\n    tag 18\t\t\tfunction setDropStatus(DropSta...\n      JUMPDEST \t\t\tfunction setDropStatus(DropSta...\n      CALLVALUE \t\t\tfunction setDropStatus(DropSta...\n      DUP1 \t\t\tfunction setDropStatus(DropSta...\n      ISZERO \t\t\tfunction setDropStatus(DropSta...\n      PUSH [tag] 125\t\t\tfunction setDropStatus(DropSta...\n      JUMPI \t\t\tfunction setDropStatus(DropSta...\n      PUSH 0\t\t\tfunction setDropStatus(DropSta...\n      DUP1 \t\t\tfunction setDropStatus(DropSta...\n      REVERT \t\t\tfunction setDropStatus(DropSta...\n    tag 125\t\t\tfunction setDropStatus(DropSta...\n      JUMPDEST \t\t\tfunction setDropStatus(DropSta...\n      POP \t\t\t\n      PUSH [tag] 2\t\t\tfunction setDropStatus(DropSta...\n      PUSH [tag] 127\t\t\tfunction setDropStatus(DropSta...\n      CALLDATASIZE \t\t\tfunction setDropStatus(DropSta...\n      PUSH 4\t\t\tfunction setDropStatus(DropSta...\n      PUSH [tag] 128\t\t\tfunction setDropStatus(DropSta...\n      JUMP \t\t\tfunction setDropStatus(DropSta...\n    tag 127\t\t\tfunction setDropStatus(DropSta...\n      JUMPDEST \t\t\tfunction setDropStatus(DropSta...\n      PUSH [tag] 129\t\t\tfunction setDropStatus(DropSta...\n      JUMP \t\t\tfunction setDropStatus(DropSta...\n    tag 19\t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      JUMPDEST \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      CALLVALUE \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      DUP1 \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      ISZERO \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      PUSH [tag] 130\t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      JUMPI \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      PUSH 0\t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      DUP1 \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      REVERT \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n    tag 130\t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      JUMPDEST \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      POP \t\t\t\n      PUSH [tag] 131\t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      PUSH [tag] 132\t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      CALLDATASIZE \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      PUSH 4\t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      PUSH [tag] 133\t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      JUMP \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n    tag 132\t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      JUMPDEST \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      PUSH [tag] 134\t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      JUMP \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n    tag 131\t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      JUMPDEST \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      PUSH 40\t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      MLOAD \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      PUSH [tag] 60\t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      SWAP2 \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      SWAP1 \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      PUSH [tag] 136\t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      JUMP \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n    tag 20\t\t\t\n      JUMPDEST \t\t\t\n      CALLVALUE \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 137\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 137\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 81\t\t\t\n      PUSH [tag] 139\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 83\t\t\t\n      JUMP \t\t\t\n    tag 139\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 140\t\t\t\n      JUMP \t\t\t\n    tag 21\t\t\ter {\\n        gloomerHash = gl...\n      JUMPDEST \t\t\ter {\\n        gloomerHash = gl...\n      CALLVALUE \t\t\ter {\\n        gloomerHash = gl...\n      DUP1 \t\t\ter {\\n        gloomerHash = gl...\n      ISZERO \t\t\ter {\\n        gloomerHash = gl...\n      PUSH [tag] 142\t\t\ter {\\n        gloomerHash = gl...\n      JUMPI \t\t\ter {\\n        gloomerHash = gl...\n      PUSH 0\t\t\ter {\\n        gloomerHash = gl...\n      DUP1 \t\t\ter {\\n        gloomerHash = gl...\n      REVERT \t\t\ter {\\n        gloomerHash = gl...\n    tag 142\t\t\ter {\\n        gloomerHash = gl...\n      JUMPDEST \t\t\ter {\\n        gloomerHash = gl...\n      POP \t\t\t\n      PUSH [tag] 92\t\t\ter {\\n        gloomerHash = gl...\n      PUSH [tag] 144\t\t\ter {\\n        gloomerHash = gl...\n      CALLDATASIZE \t\t\ter {\\n        gloomerHash = gl...\n      PUSH 4\t\t\ter {\\n        gloomerHash = gl...\n      PUSH [tag] 145\t\t\ter {\\n        gloomerHash = gl...\n      JUMP \t\t\ter {\\n        gloomerHash = gl...\n    tag 144\t\t\ter {\\n        gloomerHash = gl...\n      JUMPDEST \t\t\ter {\\n        gloomerHash = gl...\n      PUSH [tag] 146\t\t\ter {\\n        gloomerHash = gl...\n      JUMP \t\t\ter {\\n        gloomerHash = gl...\n    tag 22\t\t\t;\\n    event NewDropStatus(Dro...\n      JUMPDEST \t\t\t;\\n    event NewDropStatus(Dro...\n      CALLVALUE \t\t\t;\\n    event NewDropStatus(Dro...\n      DUP1 \t\t\t;\\n    event NewDropStatus(Dro...\n      ISZERO \t\t\t;\\n    event NewDropStatus(Dro...\n      PUSH [tag] 148\t\t\t;\\n    event NewDropStatus(Dro...\n      JUMPI \t\t\t;\\n    event NewDropStatus(Dro...\n      PUSH 0\t\t\t;\\n    event NewDropStatus(Dro...\n      DUP1 \t\t\t;\\n    event NewDropStatus(Dro...\n      REVERT \t\t\t;\\n    event NewDropStatus(Dro...\n    tag 148\t\t\t;\\n    event NewDropStatus(Dro...\n      JUMPDEST \t\t\t;\\n    event NewDropStatus(Dro...\n      POP \t\t\t;\\n    event NewDropStatus(Dro...\n      PUSH [tag] 2\t\t\t;\\n    event NewDropStatus(Dro...\n      PUSH [tag] 150\t\t\t;\\n    event NewDropStatus(Dro...\n      JUMP \t\t\t;\\n    event NewDropStatus(Dro...\n    tag 23\t\t\tuint256 public constant PRICE_...\n      JUMPDEST \t\t\tuint256 public constant PRICE_...\n      CALLVALUE \t\t\tuint256 public constant PRICE_...\n      DUP1 \t\t\tuint256 public constant PRICE_...\n      ISZERO \t\t\tuint256 public constant PRICE_...\n      PUSH [tag] 151\t\t\tuint256 public constant PRICE_...\n      JUMPI \t\t\tuint256 public constant PRICE_...\n      PUSH 0\t\t\tuint256 public constant PRICE_...\n      DUP1 \t\t\tuint256 public constant PRICE_...\n      REVERT \t\t\tuint256 public constant PRICE_...\n    tag 151\t\t\tuint256 public constant PRICE_...\n      JUMPDEST \t\t\tuint256 public constant PRICE_...\n      POP \t\t\tuint256 public constant PRICE_...\n      PUSH [tag] 92\t\t\tuint256 public constant PRICE_...\n      PUSH 6A94D74F430000\t\t\t0.03 ether\n      DUP2 \t\t\tuint256 public constant PRICE_...\n      JUMP \t\t\tuint256 public constant PRICE_...\n    tag 24\t\t\t\\n    }\\n\\n    modifier obeysW...\n      JUMPDEST \t\t\t\\n    }\\n\\n    modifier obeysW...\n      CALLVALUE \t\t\t\\n    }\\n\\n    modifier obeysW...\n      DUP1 \t\t\t\\n    }\\n\\n    modifier obeysW...\n      ISZERO \t\t\t\\n    }\\n\\n    modifier obeysW...\n      PUSH [tag] 155\t\t\t\\n    }\\n\\n    modifier obeysW...\n      JUMPI \t\t\t\\n    }\\n\\n    modifier obeysW...\n      PUSH 0\t\t\t\\n    }\\n\\n    modifier obeysW...\n      DUP1 \t\t\t\\n    }\\n\\n    modifier obeysW...\n      REVERT \t\t\t\\n    }\\n\\n    modifier obeysW...\n    tag 155\t\t\t\\n    }\\n\\n    modifier obeysW...\n      JUMPDEST \t\t\t\\n    }\\n\\n    modifier obeysW...\n      POP \t\t\t\n      PUSH [tag] 156\t\t\t\\n    }\\n\\n    modifier obeysW...\n      PUSH [tag] 157\t\t\t\\n    }\\n\\n    modifier obeysW...\n      CALLDATASIZE \t\t\t\\n    }\\n\\n    modifier obeysW...\n      PUSH 4\t\t\t\\n    }\\n\\n    modifier obeysW...\n      PUSH [tag] 145\t\t\t\\n    }\\n\\n    modifier obeysW...\n      JUMP \t\t\t\\n    }\\n\\n    modifier obeysW...\n    tag 157\t\t\t\\n    }\\n\\n    modifier obeysW...\n      JUMPDEST \t\t\t\\n    }\\n\\n    modifier obeysW...\n      PUSH [tag] 158\t\t\t\\n    }\\n\\n    modifier obeysW...\n      JUMP \t\t\t\\n    }\\n\\n    modifier obeysW...\n    tag 156\t\t\t\\n    }\\n\\n    modifier obeysW...\n      JUMPDEST \t\t\t\\n    }\\n\\n    modifier obeysW...\n      PUSH 40\t\t\t\\n    }\\n\\n    modifier obeysW...\n      MLOAD \t\t\t\\n    }\\n\\n    modifier obeysW...\n      PUSH [tag] 60\t\t\t\\n    }\\n\\n    modifier obeysW...\n      SWAP2 \t\t\t\\n    }\\n\\n    modifier obeysW...\n      SWAP1 \t\t\t\\n    }\\n\\n    modifier obeysW...\n      PUSH [tag] 160\t\t\t\\n    }\\n\\n    modifier obeysW...\n      JUMP \t\t\t\\n    }\\n\\n    modifier obeysW...\n    tag 25\t\t\tuint256 public constant END_TO...\n      JUMPDEST \t\t\tuint256 public constant END_TO...\n      CALLVALUE \t\t\tuint256 public constant END_TO...\n      DUP1 \t\t\tuint256 public constant END_TO...\n      ISZERO \t\t\tuint256 public constant END_TO...\n      PUSH [tag] 161\t\t\tuint256 public constant END_TO...\n      JUMPI \t\t\tuint256 public constant END_TO...\n      PUSH 0\t\t\tuint256 public constant END_TO...\n      DUP1 \t\t\tuint256 public constant END_TO...\n      REVERT \t\t\tuint256 public constant END_TO...\n    tag 161\t\t\tuint256 public constant END_TO...\n      JUMPDEST \t\t\tuint256 public constant END_TO...\n      POP \t\t\tuint256 public constant END_TO...\n      PUSH [tag] 92\t\t\tuint256 public constant END_TO...\n      PUSH 1A0A\t\t\t6666\n      DUP2 \t\t\tuint256 public constant END_TO...\n      JUMP \t\t\tuint256 public constant END_TO...\n    tag 26\t\t\tuint256 public constant START_...\n      JUMPDEST \t\t\tuint256 public constant START_...\n      CALLVALUE \t\t\tuint256 public constant START_...\n      DUP1 \t\t\tuint256 public constant START_...\n      ISZERO \t\t\tuint256 public constant START_...\n      PUSH [tag] 165\t\t\tuint256 public constant START_...\n      JUMPI \t\t\tuint256 public constant START_...\n      PUSH 0\t\t\tuint256 public constant START_...\n      DUP1 \t\t\tuint256 public constant START_...\n      REVERT \t\t\tuint256 public constant START_...\n    tag 165\t\t\tuint256 public constant START_...\n      JUMPDEST \t\t\tuint256 public constant START_...\n      POP \t\t\tuint256 public constant START_...\n      PUSH [tag] 92\t\t\tuint256 public constant START_...\n      PUSH D06\t\t\t3334\n      DUP2 \t\t\tuint256 public constant START_...\n      JUMP \t\t\tuint256 public constant START_...\n    tag 27\t\t\tddress) private _presaleWallet...\n      JUMPDEST \t\t\tddress) private _presaleWallet...\n      CALLVALUE \t\t\tddress) private _presaleWallet...\n      DUP1 \t\t\tddress) private _presaleWallet...\n      ISZERO \t\t\tddress) private _presaleWallet...\n      PUSH [tag] 169\t\t\tddress) private _presaleWallet...\n      JUMPI \t\t\tddress) private _presaleWallet...\n      PUSH 0\t\t\tddress) private _presaleWallet...\n      DUP1 \t\t\tddress) private _presaleWallet...\n      REVERT \t\t\tddress) private _presaleWallet...\n    tag 169\t\t\tddress) private _presaleWallet...\n      JUMPDEST \t\t\tddress) private _presaleWallet...\n      POP \t\t\t\n      PUSH B\t\t\t\\n    u\n      SLOAD \t\t\t\\n    u\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\\n    u\n      PUSH [tag] 81\t\t\tddress) private _presaleWallet...\n      JUMP \t\t\tddress) private _presaleWallet...\n    tag 28\t\t\t\n      JUMPDEST \t\t\t\n      CALLVALUE \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 173\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 173\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 175\t\t\t\n      JUMP \t\t\t\n    tag 29\t\t\tblock.timestamp < WHITELIST_ST...\n      JUMPDEST \t\t\tblock.timestamp < WHITELIST_ST...\n      CALLVALUE \t\t\tblock.timestamp < WHITELIST_ST...\n      DUP1 \t\t\tblock.timestamp < WHITELIST_ST...\n      ISZERO \t\t\tblock.timestamp < WHITELIST_ST...\n      PUSH [tag] 177\t\t\tblock.timestamp < WHITELIST_ST...\n      JUMPI \t\t\tblock.timestamp < WHITELIST_ST...\n      PUSH 0\t\t\tblock.timestamp < WHITELIST_ST...\n      DUP1 \t\t\tblock.timestamp < WHITELIST_ST...\n      REVERT \t\t\tblock.timestamp < WHITELIST_ST...\n    tag 177\t\t\tblock.timestamp < WHITELIST_ST...\n      JUMPDEST \t\t\tblock.timestamp < WHITELIST_ST...\n      POP \t\t\t\n      PUSH [tag] 156\t\t\tblock.timestamp < WHITELIST_ST...\n      PUSH [tag] 179\t\t\tblock.timestamp < WHITELIST_ST...\n      CALLDATASIZE \t\t\tblock.timestamp < WHITELIST_ST...\n      PUSH 4\t\t\tblock.timestamp < WHITELIST_ST...\n      PUSH [tag] 180\t\t\tblock.timestamp < WHITELIST_ST...\n      JUMP \t\t\tblock.timestamp < WHITELIST_ST...\n    tag 179\t\t\tblock.timestamp < WHITELIST_ST...\n      JUMPDEST \t\t\tblock.timestamp < WHITELIST_ST...\n      PUSH [tag] 181\t\t\tblock.timestamp < WHITELIST_ST...\n      JUMP \t\t\tblock.timestamp < WHITELIST_ST...\n    tag 30\t\t\tuint256 public constant PUBLIC...\n      JUMPDEST \t\t\tuint256 public constant PUBLIC...\n      CALLVALUE \t\t\tuint256 public constant PUBLIC...\n      DUP1 \t\t\tuint256 public constant PUBLIC...\n      ISZERO \t\t\tuint256 public constant PUBLIC...\n      PUSH [tag] 183\t\t\tuint256 public constant PUBLIC...\n      JUMPI \t\t\tuint256 public constant PUBLIC...\n      PUSH 0\t\t\tuint256 public constant PUBLIC...\n      DUP1 \t\t\tuint256 public constant PUBLIC...\n      REVERT \t\t\tuint256 public constant PUBLIC...\n    tag 183\t\t\tuint256 public constant PUBLIC...\n      JUMPDEST \t\t\tuint256 public constant PUBLIC...\n      POP \t\t\tuint256 public constant PUBLIC...\n      PUSH [tag] 92\t\t\tuint256 public constant PUBLIC...\n      PUSH [tag] 185\t\t\tuint256 public constant PUBLIC...\n      JUMP \t\t\tuint256 public constant PUBLIC...\n    tag 31\t\t\tfunction mint(\\n        uint25...\n      JUMPDEST \t\t\tfunction mint(\\n        uint25...\n      PUSH [tag] 2\t\t\tfunction mint(\\n        uint25...\n      PUSH [tag] 188\t\t\tfunction mint(\\n        uint25...\n      CALLDATASIZE \t\t\tfunction mint(\\n        uint25...\n      PUSH 4\t\t\tfunction mint(\\n        uint25...\n      PUSH [tag] 83\t\t\tfunction mint(\\n        uint25...\n      JUMP \t\t\tfunction mint(\\n        uint25...\n    tag 188\t\t\tfunction mint(\\n        uint25...\n      JUMPDEST \t\t\tfunction mint(\\n        uint25...\n      PUSH [tag] 189\t\t\tfunction mint(\\n        uint25...\n      JUMP \t\t\tfunction mint(\\n        uint25...\n    tag 32\t\t\t\n      JUMPDEST \t\t\t\n      CALLVALUE \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 190\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 190\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 2\t\t\t\n      PUSH [tag] 192\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 193\t\t\t\n      JUMP \t\t\t\n    tag 192\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP \t\t\t\n    tag 33\t\t\tuint256 public constant MAX_MI...\n      JUMPDEST \t\t\tuint256 public constant MAX_MI...\n      CALLVALUE \t\t\tuint256 public constant MAX_MI...\n      DUP1 \t\t\tuint256 public constant MAX_MI...\n      ISZERO \t\t\tuint256 public constant MAX_MI...\n      PUSH [tag] 195\t\t\tuint256 public constant MAX_MI...\n      JUMPI \t\t\tuint256 public constant MAX_MI...\n      PUSH 0\t\t\tuint256 public constant MAX_MI...\n      DUP1 \t\t\tuint256 public constant MAX_MI...\n      REVERT \t\t\tuint256 public constant MAX_MI...\n    tag 195\t\t\tuint256 public constant MAX_MI...\n      JUMPDEST \t\t\tuint256 public constant MAX_MI...\n      POP \t\t\tuint256 public constant MAX_MI...\n      PUSH [tag] 92\t\t\tuint256 public constant MAX_MI...\n      PUSH 3\t\t\t3\n      DUP2 \t\t\tuint256 public constant MAX_MI...\n      JUMP \t\t\tuint256 public constant MAX_MI...\n    tag 34\t\t\tfunction getPresaleAllocation(...\n      JUMPDEST \t\t\tfunction getPresaleAllocation(...\n      CALLVALUE \t\t\tfunction getPresaleAllocation(...\n      DUP1 \t\t\tfunction getPresaleAllocation(...\n      ISZERO \t\t\tfunction getPresaleAllocation(...\n      PUSH [tag] 199\t\t\tfunction getPresaleAllocation(...\n      JUMPI \t\t\tfunction getPresaleAllocation(...\n      PUSH 0\t\t\tfunction getPresaleAllocation(...\n      DUP1 \t\t\tfunction getPresaleAllocation(...\n      REVERT \t\t\tfunction getPresaleAllocation(...\n    tag 199\t\t\tfunction getPresaleAllocation(...\n      JUMPDEST \t\t\tfunction getPresaleAllocation(...\n      POP \t\t\t\n      PUSH [tag] 92\t\t\tfunction getPresaleAllocation(...\n      PUSH [tag] 201\t\t\tfunction getPresaleAllocation(...\n      CALLDATASIZE \t\t\tfunction getPresaleAllocation(...\n      PUSH 4\t\t\tfunction getPresaleAllocation(...\n      PUSH [tag] 145\t\t\tfunction getPresaleAllocation(...\n      JUMP \t\t\tfunction getPresaleAllocation(...\n    tag 201\t\t\tfunction getPresaleAllocation(...\n      JUMPDEST \t\t\tfunction getPresaleAllocation(...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t_presaleAllocationsByWallet[wa...\n      PUSH 0\t\t\tuint256\n      SWAP1 \t\t\t_presaleAllocationsByWallet[wa...\n      DUP2 \t\t\t_presaleAllocationsByWallet[wa...\n      MSTORE \t\t\t_presaleAllocationsByWallet[wa...\n      PUSH D\t\t\t_presaleAllocationsByWallet\n      PUSH 20\t\t\t_presaleAllocationsByWallet[wa...\n      MSTORE \t\t\t_presaleAllocationsByWallet[wa...\n      PUSH 40\t\t\t_presaleAllocationsByWallet[wa...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[wa...\n      KECCAK256 \t\t\t_presaleAllocationsByWallet[wa...\n      SLOAD \t\t\t_presaleAllocationsByWallet[wa...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[wa...\n      JUMP \t\t\tfunction getPresaleAllocation(...\n    tag 35\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 2\t\t\t\n      PUSH [tag] 205\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 206\t\t\t\n      JUMP \t\t\t\n    tag 205\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 207\t\t\t\n      JUMP \t\t\t\n    tag 36\t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      JUMPDEST \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      CALLVALUE \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      DUP1 \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      ISZERO \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      PUSH [tag] 208\t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      JUMPI \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      PUSH 0\t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      DUP1 \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      REVERT \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n    tag 208\t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      JUMPDEST \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      POP \t\t\t\n      PUSH [tag] 209\t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      PUSH [tag] 210\t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      CALLDATASIZE \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      PUSH 4\t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      PUSH [tag] 83\t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      JUMP \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n    tag 210\t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      JUMPDEST \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      PUSH [tag] 211\t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      JUMP \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n    tag 209\t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      JUMPDEST \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      PUSH 40\t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      MLOAD \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      PUSH [tag] 60\t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      SWAP2 \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      SWAP1 \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      PUSH [tag] 213\t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      JUMP \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n    tag 37\t\t\tfunction setGloomerHash(bytes3...\n      JUMPDEST \t\t\tfunction setGloomerHash(bytes3...\n      CALLVALUE \t\t\tfunction setGloomerHash(bytes3...\n      DUP1 \t\t\tfunction setGloomerHash(bytes3...\n      ISZERO \t\t\tfunction setGloomerHash(bytes3...\n      PUSH [tag] 214\t\t\tfunction setGloomerHash(bytes3...\n      JUMPI \t\t\tfunction setGloomerHash(bytes3...\n      PUSH 0\t\t\tfunction setGloomerHash(bytes3...\n      DUP1 \t\t\tfunction setGloomerHash(bytes3...\n      REVERT \t\t\tfunction setGloomerHash(bytes3...\n    tag 214\t\t\tfunction setGloomerHash(bytes3...\n      JUMPDEST \t\t\tfunction setGloomerHash(bytes3...\n      POP \t\t\t\n      PUSH [tag] 2\t\t\tfunction setGloomerHash(bytes3...\n      PUSH [tag] 216\t\t\tfunction setGloomerHash(bytes3...\n      CALLDATASIZE \t\t\tfunction setGloomerHash(bytes3...\n      PUSH 4\t\t\tfunction setGloomerHash(bytes3...\n      PUSH [tag] 83\t\t\tfunction setGloomerHash(bytes3...\n      JUMP \t\t\tfunction setGloomerHash(bytes3...\n    tag 216\t\t\tfunction setGloomerHash(bytes3...\n      JUMPDEST \t\t\tfunction setGloomerHash(bytes3...\n      PUSH [tag] 218\t\t\tfunction setGloomerHash(bytes3...\n      JUMP \t\t\tfunction setGloomerHash(bytes3...\n    tag 38\t\t\tfunction tokenURI(\\n        ui...\n      JUMPDEST \t\t\tfunction tokenURI(\\n        ui...\n      CALLVALUE \t\t\tfunction tokenURI(\\n        ui...\n      DUP1 \t\t\tfunction tokenURI(\\n        ui...\n      ISZERO \t\t\tfunction tokenURI(\\n        ui...\n      PUSH [tag] 219\t\t\tfunction tokenURI(\\n        ui...\n      JUMPI \t\t\tfunction tokenURI(\\n        ui...\n      PUSH 0\t\t\tfunction tokenURI(\\n        ui...\n      DUP1 \t\t\tfunction tokenURI(\\n        ui...\n      REVERT \t\t\tfunction tokenURI(\\n        ui...\n    tag 219\t\t\tfunction tokenURI(\\n        ui...\n      JUMPDEST \t\t\tfunction tokenURI(\\n        ui...\n      POP \t\t\t\n      PUSH [tag] 76\t\t\tfunction tokenURI(\\n        ui...\n      PUSH [tag] 221\t\t\tfunction tokenURI(\\n        ui...\n      CALLDATASIZE \t\t\tfunction tokenURI(\\n        ui...\n      PUSH 4\t\t\tfunction tokenURI(\\n        ui...\n      PUSH [tag] 83\t\t\tfunction tokenURI(\\n        ui...\n      JUMP \t\t\tfunction tokenURI(\\n        ui...\n    tag 221\t\t\tfunction tokenURI(\\n        ui...\n      JUMPDEST \t\t\tfunction tokenURI(\\n        ui...\n      PUSH [tag] 222\t\t\tfunction tokenURI(\\n        ui...\n      JUMP \t\t\tfunction tokenURI(\\n        ui...\n    tag 39\t\t\tteleburning to Bitcoin\\n */\\nc...\n      JUMPDEST \t\t\tteleburning to Bitcoin\\n */\\nc...\n      CALLVALUE \t\t\tteleburning to Bitcoin\\n */\\nc...\n      DUP1 \t\t\tteleburning to Bitcoin\\n */\\nc...\n      ISZERO \t\t\tteleburning to Bitcoin\\n */\\nc...\n      PUSH [tag] 224\t\t\tteleburning to Bitcoin\\n */\\nc...\n      JUMPI \t\t\tteleburning to Bitcoin\\n */\\nc...\n      PUSH 0\t\t\tteleburning to Bitcoin\\n */\\nc...\n      DUP1 \t\t\tteleburning to Bitcoin\\n */\\nc...\n      REVERT \t\t\tteleburning to Bitcoin\\n */\\nc...\n    tag 224\t\t\tteleburning to Bitcoin\\n */\\nc...\n      JUMPDEST \t\t\tteleburning to Bitcoin\\n */\\nc...\n      POP \t\t\t\n      PUSH 28F75032\t\t\t ERC2981,\\n    Ownable\\n{\\n   ...\n      SLOAD \t\t\te,\\n    ERC2981,\\n    Ownable\\...\n      PUSH [tag] 92\t\t\tteleburning to Bitcoin\\n */\\nc...\n      JUMP \t\t\tteleburning to Bitcoin\\n */\\nc...\n    tag 40\t\t\t\n      JUMPDEST \t\t\t\n      CALLVALUE \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 228\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 228\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 56\t\t\t\n      PUSH [tag] 230\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 231\t\t\t\n      JUMP \t\t\t\n    tag 230\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      SWAP2 \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 7\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      SWAP4 \t\t\t\n      SWAP1 \t\t\t\n      SWAP5 \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 41\t\t\tintPerWallet();\\n    error Exc...\n      JUMPDEST \t\t\tintPerWallet();\\n    error Exc...\n      CALLVALUE \t\t\tintPerWallet();\\n    error Exc...\n      DUP1 \t\t\tintPerWallet();\\n    error Exc...\n      ISZERO \t\t\tintPerWallet();\\n    error Exc...\n      PUSH [tag] 234\t\t\tintPerWallet();\\n    error Exc...\n      JUMPI \t\t\tintPerWallet();\\n    error Exc...\n      PUSH 0\t\t\tintPerWallet();\\n    error Exc...\n      DUP1 \t\t\tintPerWallet();\\n    error Exc...\n      REVERT \t\t\tintPerWallet();\\n    error Exc...\n    tag 234\t\t\tintPerWallet();\\n    error Exc...\n      JUMPDEST \t\t\tintPerWallet();\\n    error Exc...\n      POP \t\t\t\n      PUSH [tag] 2\t\t\tintPerWallet();\\n    error Exc...\n      PUSH [tag] 236\t\t\tintPerWallet();\\n    error Exc...\n      CALLDATASIZE \t\t\tintPerWallet();\\n    error Exc...\n      PUSH 4\t\t\tintPerWallet();\\n    error Exc...\n      PUSH [tag] 145\t\t\tintPerWallet();\\n    error Exc...\n      JUMP \t\t\tintPerWallet();\\n    error Exc...\n    tag 236\t\t\tintPerWallet();\\n    error Exc...\n      JUMPDEST \t\t\tintPerWallet();\\n    error Exc...\n      PUSH [tag] 237\t\t\tintPerWallet();\\n    error Exc...\n      JUMP \t\t\tintPerWallet();\\n    error Exc...\n    tag 42\t\t\tuint256 public constant WHITEL...\n      JUMPDEST \t\t\tuint256 public constant WHITEL...\n      CALLVALUE \t\t\tuint256 public constant WHITEL...\n      DUP1 \t\t\tuint256 public constant WHITEL...\n      ISZERO \t\t\tuint256 public constant WHITEL...\n      PUSH [tag] 238\t\t\tuint256 public constant WHITEL...\n      JUMPI \t\t\tuint256 public constant WHITEL...\n      PUSH 0\t\t\tuint256 public constant WHITEL...\n      DUP1 \t\t\tuint256 public constant WHITEL...\n      REVERT \t\t\tuint256 public constant WHITEL...\n    tag 238\t\t\tuint256 public constant WHITEL...\n      JUMPDEST \t\t\tuint256 public constant WHITEL...\n      POP \t\t\tuint256 public constant WHITEL...\n      PUSH [tag] 92\t\t\tuint256 public constant WHITEL...\n      PUSH 66365B80\t\t\t1714838400\n      DUP2 \t\t\tuint256 public constant WHITEL...\n      JUMP \t\t\tuint256 public constant WHITEL...\n    tag 43\t\t\tbytes32 public constant PROVEN...\n      JUMPDEST \t\t\tbytes32 public constant PROVEN...\n      CALLVALUE \t\t\tbytes32 public constant PROVEN...\n      DUP1 \t\t\tbytes32 public constant PROVEN...\n      ISZERO \t\t\tbytes32 public constant PROVEN...\n      PUSH [tag] 242\t\t\tbytes32 public constant PROVEN...\n      JUMPI \t\t\tbytes32 public constant PROVEN...\n      PUSH 0\t\t\tbytes32 public constant PROVEN...\n      DUP1 \t\t\tbytes32 public constant PROVEN...\n      REVERT \t\t\tbytes32 public constant PROVEN...\n    tag 242\t\t\tbytes32 public constant PROVEN...\n      JUMPDEST \t\t\tbytes32 public constant PROVEN...\n      POP \t\t\t\n      PUSH [tag] 92\t\t\tbytes32 public constant PROVEN...\n      PUSH 5158CF3AC201D8D9DFE63AC7C7D1E7AA58B7C33426665C9BF643E0003E095E2F\t\t\t0x5158cf3ac201d8d9dfe63ac7c7d1...\n      DUP2 \t\t\tbytes32 public constant PROVEN...\n      JUMP \t\t\tbytes32 public constant PROVEN...\n    tag 59\t\t\tfunction supportsInterface(\\n ...\n      JUMPDEST \t\t\tfunction supportsInterface(\\n ...\n      PUSH 0\t\t\tbool\n      PUSH [tag] 248\t\t\tERC721A.supportsInterface(inte...\n      DUP3 \t\t\tinterfaceId\n      PUSH [tag] 249\t\t\tERC721A.supportsInterface\n      JUMP \t\t\tERC721A.supportsInterface(inte...\n    tag 248\t\t\tERC721A.supportsInterface(inte...\n      JUMPDEST \t\t\tERC721A.supportsInterface(inte...\n      DUP1 \t\t\tERC721A.supportsInterface(inte...\n      PUSH [tag] 251\t\t\tERC721A.supportsInterface(inte...\n      JUMPI \t\t\tERC721A.supportsInterface(inte...\n      POP \t\t\tERC721A.supportsInterface(inte...\n      PUSH [tag] 251\t\t\tERC2981.supportsInterface(inte...\n      DUP3 \t\t\tinterfaceId\n      PUSH [tag] 252\t\t\tERC2981.supportsInterface\n      JUMP \t\t\tERC2981.supportsInterface(inte...\n    tag 251\t\t\tERC2981.supportsInterface(inte...\n      JUMPDEST \t\t\tERC2981.supportsInterface(inte...\n      SWAP3 \t\t\treturn\\n            ERC721A.su...\n      SWAP2 \t\t\tfunction supportsInterface(\\n ...\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\tfunction supportsInterface(\\n ...\n    tag 66\t\t\tfunction setDefaultRoyalty(\\n ...\n      JUMPDEST \t\t\tfunction setDefaultRoyalty(\\n ...\n      PUSH [tag] 254\t\t\ttedPerWallet;\n      PUSH [tag] 255\t\t\ttedPerWalle\n      JUMP \t\t\ttedPerWallet;\n    tag 254\t\t\ttedPerWallet;\n      JUMPDEST \t\t\ttedPerWallet;\n      PUSH [tag] 257\t\t\t_setDefaultRoyalty(receiver, f...\n      DUP3 \t\t\treceiver\n      DUP3 \t\t\tfeeNumerator\n      PUSH [tag] 258\t\t\t_setDefaultRoyalty\n      JUMP \t\t\t_setDefaultRoyalty(receiver, f...\n    tag 257\t\t\t_setDefaultRoyalty(receiver, f...\n      JUMPDEST \t\t\t_setDefaultRoyalty(receiver, f...\n      POP \t\t\tfunction setDefaultRoyalty(\\n ...\n      POP \t\t\tfunction setDefaultRoyalty(\\n ...\n      JUMP \t\t\tfunction setDefaultRoyalty(\\n ...\n    tag 69\t\t\tfunction claimPresale()\\n     ...\n      JUMPDEST \t\t\tfunction claimPresale()\\n     ...\n      PUSH 0\t\t\tDropStatus.DISABLED\n      PUSH B\t\t\tdropStatus\n      SLOAD \t\t\tdropStatus\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SWAP1 \t\t\tdropStatus\n      DIV \t\t\tdropStatus\n      PUSH FF\t\t\tdropStatus\n      AND \t\t\tdropStatus\n      PUSH 3\t\t\tdropStatus == DropStatus.DISAB...\n      DUP2 \t\t\tdropStatus == DropStatus.DISAB...\n      GT \t\t\tdropStatus == DropStatus.DISAB...\n      ISZERO \t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 264\t\t\tdropStatus == DropStatus.DISAB...\n      JUMPI \t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 264\t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 262\t\t\tdropStatus == DropStatus.DISAB...\n      JUMP \t\t\tdropStatus == DropStatus.DISAB...\n    tag 264\t\t\tdropStatus == DropStatus.DISAB...\n      JUMPDEST \t\t\tdropStatus == DropStatus.DISAB...\n      SUB \t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 265\t\t\tif (dropStatus == DropStatus.D...\n      JUMPI \t\t\tif (dropStatus == DropStatus.D...\n      PUSH 40\t\t\tMintingDisabled()\n      MLOAD \t\t\tMintingDisabled()\n      PUSH AF79B437\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tMintingDisabled()\n      MSTORE \t\t\tMintingDisabled()\n      PUSH 4\t\t\tMintingDisabled()\n      ADD \t\t\tMintingDisabled()\n      PUSH 40\t\t\tMintingDisabled()\n      MLOAD \t\t\tMintingDisabled()\n      DUP1 \t\t\tMintingDisabled()\n      SWAP2 \t\t\tMintingDisabled()\n      SUB \t\t\tMintingDisabled()\n      SWAP1 \t\t\tMintingDisabled()\n      REVERT \t\t\tMintingDisabled()\n    tag 265\t\t\tif (dropStatus == DropStatus.D...\n      JUMPDEST \t\t\tif (dropStatus == DropStatus.D...\n      PUSH 66365B80\t\t\t1714838400\n      TIMESTAMP \t\t\tblock.timestamp\n      LT \t\t\tblock.timestamp < WHITELIST_ST...\n      ISZERO \t\t\tif (block.timestamp < WHITELIS...\n      PUSH [tag] 267\t\t\tif (block.timestamp < WHITELIS...\n      JUMPI \t\t\tif (block.timestamp < WHITELIS...\n      PUSH 40\t\t\tClaimNotActive()\n      MLOAD \t\t\tClaimNotActive()\n      PUSH 24FBAA9\t\t\t\n      PUSH E4\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tClaimNotActive()\n      MSTORE \t\t\tClaimNotActive()\n      PUSH 4\t\t\tClaimNotActive()\n      ADD \t\t\tClaimNotActive()\n      PUSH 40\t\t\tClaimNotActive()\n      MLOAD \t\t\tClaimNotActive()\n      DUP1 \t\t\tClaimNotActive()\n      SWAP2 \t\t\tClaimNotActive()\n      SUB \t\t\tClaimNotActive()\n      SWAP1 \t\t\tClaimNotActive()\n      REVERT \t\t\tClaimNotActive()\n    tag 267\t\t\tif (block.timestamp < WHITELIS...\n      JUMPDEST \t\t\tif (block.timestamp < WHITELIS...\n      CALLER \t\t\tmsg.sender\n      PUSH 0\t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH D\t\t\t_presaleAllocationsByWallet\n      PUSH 20\t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH 40\t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      KECCAK256 \t\t\t_presaleAllocationsByWallet[ms...\n      SLOAD \t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      SUB \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH [tag] 269\t\t\tif (_presaleAllocationsByWalle...\n      JUMPI \t\t\tif (_presaleAllocationsByWalle...\n      PUSH 40\t\t\tNotEligible()\n      MLOAD \t\t\tNotEligible()\n      PUSH 7C75AA6F\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tNotEligible()\n      MSTORE \t\t\tNotEligible()\n      PUSH 4\t\t\tNotEligible()\n      ADD \t\t\tNotEligible()\n      PUSH 40\t\t\tNotEligible()\n      MLOAD \t\t\tNotEligible()\n      DUP1 \t\t\tNotEligible()\n      SWAP2 \t\t\tNotEligible()\n      SUB \t\t\tNotEligible()\n      SWAP1 \t\t\tNotEligible()\n      REVERT \t\t\tNotEligible()\n    tag 269\t\t\tif (_presaleAllocationsByWalle...\n      JUMPDEST \t\t\tif (_presaleAllocationsByWalle...\n      CALLER \t\t\tmsg.sender\n      PUSH 0\t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH D\t\t\t_presaleAllocationsByWallet\n      PUSH 20\t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH 40\t\t\t_presaleAllocationsByWallet[ms...\n      DUP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP4 \t\t\t_presaleAllocationsByWallet[ms...\n      KECCAK256 \t\t\t_presaleAllocationsByWallet[ms...\n      SLOAD \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH C\t\t\t_mintedPerWallet\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender]\n      SWAP3 \t\t\t_mintedPerWallet[msg.sender]\n      MSTORE \t\t\t_mintedPerWallet[msg.sender]\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender]\n      SWAP2 \t\t\t_mintedPerWallet[msg.sender]\n      KECCAK256 \t\t\t_mintedPerWallet[msg.sender]\n      SLOAD \t\t\t_mintedPerWallet[msg.sender]\n      PUSH 3\t\t\t3\n      SWAP1 \t\t\t3\n      DUP3 \t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH [tag] 271\t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      DUP3 \t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH [tag] 272\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMP \t\t\t_mintedPerWallet[msg.sender] +...\n    tag 271\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPDEST \t\t\t_mintedPerWallet[msg.sender] +...\n      PUSH [tag] 273\t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP2 \t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      PUSH [tag] 272\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMP \t\t\t_mintedPerWallet[msg.sender] +...\n    tag 273\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPDEST \t\t\t_mintedPerWallet[msg.sender] +...\n      GT \t\t\t_mintedPerWallet[msg.sender] +...\n      DUP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      ISZERO \t\t\t_mintedPerWallet[msg.sender] +...\n      PUSH [tag] 274\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPI \t\t\t_mintedPerWallet[msg.sender] +...\n      POP \t\t\t\n      PUSH B\t\t\t\\n    u\n      SLOAD \t\t\t\\n    u\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\\n    u\n      CALLER \t\t\tmsg.sender\n      EQ \t\t\tmsg.sender != owner()\n      ISZERO \t\t\tmsg.sender != owner()\n    tag 274\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPDEST \t\t\t_mintedPerWallet[msg.sender] +...\n      ISZERO \t\t\tif (\\n            _mintedPerWa...\n      PUSH [tag] 276\t\t\tif (\\n            _mintedPerWa...\n      JUMPI \t\t\tif (\\n            _mintedPerWa...\n      PUSH 40\t\t\tExceedsMaxMintPerWallet()\n      MLOAD \t\t\tExceedsMaxMintPerWallet()\n      PUSH 67EEC833\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tExceedsMaxMintPerWallet()\n      MSTORE \t\t\tExceedsMaxMintPerWallet()\n      PUSH 4\t\t\tExceedsMaxMintPerWallet()\n      ADD \t\t\tExceedsMaxMintPerWallet()\n      PUSH 40\t\t\tExceedsMaxMintPerWallet()\n      MLOAD \t\t\tExceedsMaxMintPerWallet()\n      DUP1 \t\t\tExceedsMaxMintPerWallet()\n      SWAP2 \t\t\tExceedsMaxMintPerWallet()\n      SUB \t\t\tExceedsMaxMintPerWallet()\n      SWAP1 \t\t\tExceedsMaxMintPerWallet()\n      REVERT \t\t\tExceedsMaxMintPerWallet()\n    tag 276\t\t\tif (\\n            _mintedPerWa...\n      JUMPDEST \t\t\tif (\\n            _mintedPerWa...\n      ORIGIN \t\t\ttx.origin\n      CALLER \t\t\tmsg.sender\n      EQ \t\t\ttx.origin != msg.sender\n      PUSH [tag] 278\t\t\tif (tx.origin != msg.sender) {...\n      JUMPI \t\t\tif (tx.origin != msg.sender) {...\n      PUSH 40\t\t\tNonEOACaller()\n      MLOAD \t\t\tNonEOACaller()\n      PUSH 58516B3F\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tNonEOACaller()\n      MSTORE \t\t\tNonEOACaller()\n      PUSH 4\t\t\tNonEOACaller()\n      ADD \t\t\tNonEOACaller()\n      PUSH 40\t\t\tNonEOACaller()\n      MLOAD \t\t\tNonEOACaller()\n      DUP1 \t\t\tNonEOACaller()\n      SWAP2 \t\t\tNonEOACaller()\n      SUB \t\t\tNonEOACaller()\n      SWAP1 \t\t\tNonEOACaller()\n      REVERT \t\t\tNonEOACaller()\n    tag 278\t\t\tif (tx.origin != msg.sender) {...\n      JUMPDEST \t\t\tif (tx.origin != msg.sender) {...\n      CALLER \t\t\tmsg.sender\n      PUSH 0\t\t\tuint256 quantity\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH D\t\t\t_presaleAllocationsByWallet\n      PUSH 20\t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH 40\t\t\t_presaleAllocationsByWallet[ms...\n      DUP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP4 \t\t\t_presaleAllocationsByWallet[ms...\n      KECCAK256 \t\t\t_presaleAllocationsByWallet[ms...\n      SLOAD \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH C\t\t\t_mintedPerWallet\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender]\n      SWAP3 \t\t\t_mintedPerWallet[msg.sender]\n      MSTORE \t\t\t_mintedPerWallet[msg.sender]\n      DUP3 \t\t\t_mintedPerWallet[msg.sender]\n      KECCAK256 \t\t\t_mintedPerWallet[msg.sender]\n      DUP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      SLOAD \t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP2 \t\t\t_presaleAllocationsByWallet[ms...\n      SWAP3 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP4 \t\t\t_presaleAllocationsByWallet[ms...\n      SWAP3 \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH [tag] 280\t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      DUP5 \t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH [tag] 272\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMP \t\t\t_mintedPerWallet[msg.sender] +...\n    tag 280\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPDEST \t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP2 \t\t\t_mintedPerWallet[msg.sender] +...\n      SSTORE \t\t\t_mintedPerWallet[msg.sender] +...\n      POP \t\t\t\n      POP \t\t\t\n      CALLER \t\t\tmsg.sender\n      PUSH 0\t\t\t0\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH D\t\t\t_presaleAllocationsByWallet\n      PUSH 20\t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH 40\t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      KECCAK256 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      SSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH 10\t\t\t_presaleSupplyOffset\n      DUP1 \t\t\t_presaleSupplyOffset -= quanti...\n      SLOAD \t\t\t_presaleSupplyOffset -= quanti...\n      DUP4 \t\t\tquantity\n      SWAP3 \t\t\tquantity\n      SWAP1 \t\t\t0\n      PUSH [tag] 281\t\t\t_presaleSupplyOffset -= quanti...\n      SWAP1 \t\t\t_presaleSupplyOffset -= quanti...\n      DUP5 \t\t\tquantity\n      SWAP1 \t\t\tquantity\n      PUSH [tag] 282\t\t\t_presaleSupplyOffset -= quanti...\n      JUMP \t\t\t_presaleSupplyOffset -= quanti...\n    tag 281\t\t\t_presaleSupplyOffset -= quanti...\n      JUMPDEST \t\t\t_presaleSupplyOffset -= quanti...\n      SWAP1 \t\t\t_presaleSupplyOffset -= quanti...\n      SWAP2 \t\t\t_presaleSupplyOffset -= quanti...\n      SSTORE \t\t\t_presaleSupplyOffset -= quanti...\n      POP \t\t\t\n      PUSH [tag] 283\t\t\t_mint(msg.sender, quantity)\n      SWAP1 \t\t\t_mint(msg.sender, quantity)\n      POP \t\t\t\n      CALLER \t\t\tmsg.sender\n      DUP3 \t\t\tquantity\n      PUSH [tag] 284\t\t\t_mint\n      JUMP \t\t\t_mint(msg.sender, quantity)\n    tag 283\t\t\t_mint(msg.sender, quantity)\n      JUMPDEST \t\t\t_mint(msg.sender, quantity)\n      PUSH 40\t\t\tGloomersMint(msg.sender, quant...\n      MLOAD \t\t\tGloomersMint(msg.sender, quant...\n      DUP2 \t\t\tamp > PUBLIC_MINT_TIMESTA\n      DUP2 \t\t\tamp > PUBLIC_MINT_TIMESTA\n      MSTORE \t\t\tamp > PUBLIC_MINT_TIMESTA\n      CALLER \t\t\tmsg.sender\n      SWAP1 \t\t\tmsg.sender\n      PUSH F07265907AAF7B6329BB73E97EA492CCBBC0678C94313E1F8331013A2E269D33\t\t\tGloomersMint(msg.sender, quant...\n      SWAP1 \t\t\tGloomersMint(msg.sender, quant...\n      PUSH 20\t\t\tbl\n      ADD \t\t\t||\\n            blo\n      PUSH 40\t\t\tGloomersMint(msg.sender, quant...\n      MLOAD \t\t\tGloomersMint(msg.sender, quant...\n      DUP1 \t\t\tGloomersMint(msg.sender, quant...\n      SWAP2 \t\t\tGloomersMint(msg.sender, quant...\n      SUB \t\t\tGloomersMint(msg.sender, quant...\n      SWAP1 \t\t\tGloomersMint(msg.sender, quant...\n      LOG2 \t\t\tGloomersMint(msg.sender, quant...\n      POP \t\t\t{\\n        uint256 quantity = ...\n      POP \t\t\t_\n      JUMP \t\t\tfunction claimPresale()\\n     ...\n    tag 74\t\t\tfunction setTokenUri(string ca...\n      JUMPDEST \t\t\tfunction setTokenUri(string ca...\n      PUSH [tag] 287\t\t\ttedPerWallet;\n      PUSH [tag] 255\t\t\ttedPerWalle\n      JUMP \t\t\ttedPerWallet;\n    tag 287\t\t\ttedPerWallet;\n      JUMPDEST \t\t\ttedPerWallet;\n      PUSH 12\t\t\trevealed\n      DUP1 \t\t\trevealed = true\n      SLOAD \t\t\trevealed = true\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\trevealed = true\n      PUSH 1\t\t\ttrue\n      OR \t\t\trevealed = true\n      SWAP1 \t\t\trevealed = true\n      SSTORE \t\t\trevealed = true\n      PUSH 13\t\t\t_baseTokenURI\n      PUSH [tag] 289\t\t\t_baseTokenURI = baseTokenURI_\n      DUP3 \t\t\tbaseTokenURI_\n      DUP5 \t\t\tbaseTokenURI_\n      DUP4 \t\t\t_baseTokenURI\n      PUSH [tag] 290\t\t\t_baseTokenURI = baseTokenURI_\n      JUMP \t\t\t_baseTokenURI = baseTokenURI_\n    tag 289\t\t\t_baseTokenURI = baseTokenURI_\n      JUMPDEST \t\t\t_baseTokenURI = baseTokenURI_\n      POP \t\t\t_baseTokenURI = baseTokenURI_\n      PUSH 6BD5C950A8D8DF17F772F5AF37CB3655737899CBF903264B9795592DA439661C\t\t\tBatchMetadataUpdate(_startToke...\n      PUSH [tag] 291\t\t\t_startTokenId()\n      PUSH [tag] 292\t\t\t_startTokenId\n      JUMP \t\t\t_startTokenId()\n    tag 291\t\t\t_startTokenId()\n      JUMPDEST \t\t\t_startTokenId()\n      PUSH 40\t\t\tBatchMetadataUpdate(_startToke...\n      DUP1 \t\t\tBatchMetadataUpdate(_startToke...\n      MLOAD \t\t\tBatchMetadataUpdate(_startToke...\n      SWAP2 \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\tBatchMetadataUpdate(_startToke...\n      MLOAD \t\t\tBatchMetadataUpdate(_startToke...\n      DUP1 \t\t\tBatchMetadataUpdate(_startToke...\n      SWAP2 \t\t\tBatchMetadataUpdate(_startToke...\n      SUB \t\t\tBatchMetadataUpdate(_startToke...\n      SWAP1 \t\t\tBatchMetadataUpdate(_startToke...\n      LOG1 \t\t\tBatchMetadataUpdate(_startToke...\n      POP \t\t\tfunction setTokenUri(string ca...\n      POP \t\t\tfunction setTokenUri(string ca...\n      JUMP \t\t\tfunction setTokenUri(string ca...\n    tag 77\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 60\t\t\t\n      PUSH 2\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 296\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 297\t\t\t\n      JUMP \t\t\t\n    tag 296\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      PUSH 1F\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      DIV \t\t\t\n      MUL \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 298\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 297\t\t\t\n      JUMP \t\t\t\n    tag 298\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 299\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 1F\t\t\t\n      LT \t\t\t\n      PUSH [tag] 300\t\t\t\n      JUMPI \t\t\t\n      PUSH 100\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SLOAD \t\t\t\n      DIV \t\t\t\n      MUL \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      PUSH [tag] 299\t\t\t\n      JUMP \t\t\t\n    tag 300\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      SWAP1 \t\t\t\n    tag 301\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      GT \t\t\t\n      PUSH [tag] 301\t\t\t\n      JUMPI \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      SUB \t\t\t\n      PUSH 1F\t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n    tag 299\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 84\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 303\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 304\t\t\t\n      JUMP \t\t\t\n    tag 303\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 306\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 306\t\t\t\n      PUSH 33D1C039\t\t\t\n      PUSH E2\t\t\t\n      SHL \t\t\t\n      PUSH [tag] 307\t\t\t\n      JUMP \t\t\t\n    tag 306\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 6\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 90\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 257\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      PUSH 1\t\t\t\n      PUSH [tag] 310\t\t\t\n      JUMP \t\t\t\n    tag 93\t\t\tsender, quantity);\\n\\n        ...\n      JUMPDEST \t\t\tsender, quantity);\\n\\n        ...\n      PUSH 0\t\t\tntity);\\n    }\\n\n      PUSH [tag] 312\t\t\t    {\\n        r\n      PUSH [tag] 292\t\t\t    {\\n       \n      JUMP \t\t\t    {\\n        r\n    tag 312\t\t\t    {\\n        r\n      JUMPDEST \t\t\t    {\\n        r\n      PUSH 1\t\t\tstring memor\n      SLOAD \t\t\tstring memor\n      PUSH 0\t\t\t       return\n      SLOAD \t\t\t       return\n      SUB \t\t\t       returns (string memor\n      SUB \t\t\t       returns (string memory)...\n      SWAP1 \t\t\t       returns (string memory)...\n      POP \t\t\t\n      SWAP1 \t\t\tsender, quantity);\\n\\n        ...\n      JUMP \t\t\tsender, quantity);\\n\\n        ...\n    tag 99\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 317\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 318\t\t\t\n      JUMP \t\t\t\n    tag 317\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      SWAP5 \t\t\t\n      DUP6 \t\t\t\n      AND \t\t\t\n      SWAP5 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      DUP5 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 320\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 320\t\t\t\n      PUSH A11481\t\t\t\n      PUSH E8\t\t\t\n      SHL \t\t\t\n      PUSH [tag] 307\t\t\t\n      JUMP \t\t\t\n    tag 320\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 6\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      CALLER \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      EQ \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP9 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      EQ \t\t\t\n      OR \t\t\t\n      PUSH [tag] 331\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 328\t\t\t\n      DUP7 \t\t\t\n      CALLER \t\t\t\n      PUSH [tag] 230\t\t\t\n      JUMP \t\t\t\n    tag 328\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 331\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 331\t\t\t\n      PUSH 2CE44B5F\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      PUSH [tag] 307\t\t\t\n      JUMP \t\t\t\n    tag 331\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 334\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      SSTORE \t\t\t\n    tag 334\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP7 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 5\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      KECCAK256 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      SWAP2 \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      TIMESTAMP \t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      OR \t\t\t\n      PUSH 1\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      OR \t\t\t\n      PUSH 0\t\t\t\n      DUP6 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP2 \t\t\t\n      KECCAK256 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      SSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP5 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 339\t\t\t\n      JUMPI \t\t\t\n      PUSH 1\t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP2 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 341\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 341\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      DUP5 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n    tag 341\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n    tag 339\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP6 \t\t\t\n      AND \t\t\t\n      DUP5 \t\t\t\n      DUP2 \t\t\t\n      DUP9 \t\t\t\n      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      LOG4 \t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      SUB \t\t\t\n      PUSH [tag] 343\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 343\t\t\t\n      PUSH 3A954ECD\t\t\t\n      PUSH E2\t\t\t\n      SHL \t\t\t\n      PUSH [tag] 307\t\t\t\n      JUMP \t\t\t\n    tag 343\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 103\t\t\tfunction registerPresale(\\n   ...\n      JUMPDEST \t\t\tfunction registerPresale(\\n   ...\n      PUSH 0\t\t\tDropStatus.DISABLED\n      PUSH B\t\t\tdropStatus\n      SLOAD \t\t\tdropStatus\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SWAP1 \t\t\tdropStatus\n      DIV \t\t\tdropStatus\n      PUSH FF\t\t\tdropStatus\n      AND \t\t\tdropStatus\n      PUSH 3\t\t\tdropStatus == DropStatus.DISAB...\n      DUP2 \t\t\tdropStatus == DropStatus.DISAB...\n      GT \t\t\tdropStatus == DropStatus.DISAB...\n      ISZERO \t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 350\t\t\tdropStatus == DropStatus.DISAB...\n      JUMPI \t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 350\t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 262\t\t\tdropStatus == DropStatus.DISAB...\n      JUMP \t\t\tdropStatus == DropStatus.DISAB...\n    tag 350\t\t\tdropStatus == DropStatus.DISAB...\n      JUMPDEST \t\t\tdropStatus == DropStatus.DISAB...\n      SUB \t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 351\t\t\tif (dropStatus == DropStatus.D...\n      JUMPI \t\t\tif (dropStatus == DropStatus.D...\n      PUSH 40\t\t\tMintingDisabled()\n      MLOAD \t\t\tMintingDisabled()\n      PUSH AF79B437\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tMintingDisabled()\n      MSTORE \t\t\tMintingDisabled()\n      PUSH 4\t\t\tMintingDisabled()\n      ADD \t\t\tMintingDisabled()\n      PUSH 40\t\t\tMintingDisabled()\n      MLOAD \t\t\tMintingDisabled()\n      DUP1 \t\t\tMintingDisabled()\n      SWAP2 \t\t\tMintingDisabled()\n      SUB \t\t\tMintingDisabled()\n      SWAP1 \t\t\tMintingDisabled()\n      REVERT \t\t\tMintingDisabled()\n    tag 351\t\t\tif (dropStatus == DropStatus.D...\n      JUMPDEST \t\t\tif (dropStatus == DropStatus.D...\n      PUSH 66365B80\t\t\t1714838400\n      TIMESTAMP \t\t\tblock.timestamp\n      GT \t\t\tblock.timestamp > WHITELIST_ST...\n      ISZERO \t\t\tif (block.timestamp > WHITELIS...\n      PUSH [tag] 353\t\t\tif (block.timestamp > WHITELIS...\n      JUMPI \t\t\tif (block.timestamp > WHITELIS...\n      PUSH 40\t\t\tPresaleNotActive()\n      MLOAD \t\t\tPresaleNotActive()\n      PUSH 3844DA57\t\t\t\n      PUSH E2\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tPresaleNotActive()\n      MSTORE \t\t\tPresaleNotActive()\n      PUSH 4\t\t\tPresaleNotActive()\n      ADD \t\t\tPresaleNotActive()\n      PUSH 40\t\t\tPresaleNotActive()\n      MLOAD \t\t\tPresaleNotActive()\n      DUP1 \t\t\tPresaleNotActive()\n      SWAP2 \t\t\tPresaleNotActive()\n      SUB \t\t\tPresaleNotActive()\n      SWAP1 \t\t\tPresaleNotActive()\n      REVERT \t\t\tPresaleNotActive()\n    tag 353\t\t\tif (block.timestamp > WHITELIS...\n      JUMPDEST \t\t\tif (block.timestamp > WHITELIS...\n      DUP2 \t\t\tquantity\n      PUSH [tag] 355\t\t\tPRICE_PER_TOKEN * quantity\n      DUP2 \t\t\tquantity\n      PUSH 6A94D74F430000\t\t\t0.03 ether\n      PUSH [tag] 356\t\t\tPRICE_PER_TOKEN * quantity\n      JUMP \t\t\tPRICE_PER_TOKEN * quantity\n    tag 355\t\t\tPRICE_PER_TOKEN * quantity\n      JUMPDEST \t\t\tPRICE_PER_TOKEN * quantity\n      CALLVALUE \t\t\tmsg.value\n      LT \t\t\tmsg.value < PRICE_PER_TOKEN * ...\n      ISZERO \t\t\tif (msg.value < PRICE_PER_TOKE...\n      PUSH [tag] 357\t\t\tif (msg.value < PRICE_PER_TOKE...\n      JUMPI \t\t\tif (msg.value < PRICE_PER_TOKE...\n      PUSH 40\t\t\tInsufficientFunds()\n      MLOAD \t\t\tInsufficientFunds()\n      PUSH 356680B7\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tInsufficientFunds()\n      MSTORE \t\t\tInsufficientFunds()\n      PUSH 4\t\t\tInsufficientFunds()\n      ADD \t\t\tInsufficientFunds()\n      PUSH 40\t\t\tInsufficientFunds()\n      MLOAD \t\t\tInsufficientFunds()\n      DUP1 \t\t\tInsufficientFunds()\n      SWAP2 \t\t\tInsufficientFunds()\n      SUB \t\t\tInsufficientFunds()\n      SWAP1 \t\t\tInsufficientFunds()\n      REVERT \t\t\tInsufficientFunds()\n    tag 357\t\t\tif (msg.value < PRICE_PER_TOKE...\n      JUMPDEST \t\t\tif (msg.value < PRICE_PER_TOKE...\n      CALLER \t\t\tmsg.sender\n      PUSH 0\t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH D\t\t\t_presaleAllocationsByWallet\n      PUSH 20\t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH 40\t\t\t_presaleAllocationsByWallet[ms...\n      DUP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP4 \t\t\t_presaleAllocationsByWallet[ms...\n      KECCAK256 \t\t\t_presaleAllocationsByWallet[ms...\n      SLOAD \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH C\t\t\t_mintedPerWallet\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender]\n      SWAP3 \t\t\t_mintedPerWallet[msg.sender]\n      MSTORE \t\t\t_mintedPerWallet[msg.sender]\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender]\n      SWAP2 \t\t\t_mintedPerWallet[msg.sender]\n      KECCAK256 \t\t\t_mintedPerWallet[msg.sender]\n      SLOAD \t\t\t_mintedPerWallet[msg.sender]\n      DUP5 \t\t\tquantity\n      SWAP2 \t\t\tquantity\n      PUSH 3\t\t\t3\n      SWAP2 \t\t\t3\n      DUP4 \t\t\tquantity\n      SWAP2 \t\t\tquantity\n      PUSH [tag] 359\t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP2 \t\t\t_mintedPerWallet[msg.sender] +...\n      PUSH [tag] 272\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMP \t\t\t_mintedPerWallet[msg.sender] +...\n    tag 359\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPDEST \t\t\t_mintedPerWallet[msg.sender] +...\n      PUSH [tag] 360\t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP2 \t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      PUSH [tag] 272\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMP \t\t\t_mintedPerWallet[msg.sender] +...\n    tag 360\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPDEST \t\t\t_mintedPerWallet[msg.sender] +...\n      GT \t\t\t_mintedPerWallet[msg.sender] +...\n      DUP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      ISZERO \t\t\t_mintedPerWallet[msg.sender] +...\n      PUSH [tag] 361\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPI \t\t\t_mintedPerWallet[msg.sender] +...\n      POP \t\t\t\n      PUSH B\t\t\t\\n    u\n      SLOAD \t\t\t\\n    u\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\\n    u\n      CALLER \t\t\tmsg.sender\n      EQ \t\t\tmsg.sender != owner()\n      ISZERO \t\t\tmsg.sender != owner()\n    tag 361\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPDEST \t\t\t_mintedPerWallet[msg.sender] +...\n      ISZERO \t\t\tif (\\n            _mintedPerWa...\n      PUSH [tag] 363\t\t\tif (\\n            _mintedPerWa...\n      JUMPI \t\t\tif (\\n            _mintedPerWa...\n      PUSH 40\t\t\tExceedsMaxMintPerWallet()\n      MLOAD \t\t\tExceedsMaxMintPerWallet()\n      PUSH 67EEC833\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tExceedsMaxMintPerWallet()\n      MSTORE \t\t\tExceedsMaxMintPerWallet()\n      PUSH 4\t\t\tExceedsMaxMintPerWallet()\n      ADD \t\t\tExceedsMaxMintPerWallet()\n      PUSH 40\t\t\tExceedsMaxMintPerWallet()\n      MLOAD \t\t\tExceedsMaxMintPerWallet()\n      DUP1 \t\t\tExceedsMaxMintPerWallet()\n      SWAP2 \t\t\tExceedsMaxMintPerWallet()\n      SUB \t\t\tExceedsMaxMintPerWallet()\n      SWAP1 \t\t\tExceedsMaxMintPerWallet()\n      REVERT \t\t\tExceedsMaxMintPerWallet()\n    tag 363\t\t\tif (\\n            _mintedPerWa...\n      JUMPDEST \t\t\tif (\\n            _mintedPerWa...\n      DUP4 \t\t\tquantity\n      PUSH 10\t\t\t_presaleSupplyOffset\n      SLOAD \t\t\t_presaleSupplyOffset\n      PUSH 1A0A\t\t\t6666\n      PUSH [tag] 365\t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      SWAP2 \t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      SWAP1 \t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      PUSH [tag] 282\t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      JUMP \t\t\tEND_TOKEN_ID - _presaleSupplyO...\n    tag 365\t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      JUMPDEST \t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      PUSH 1\t\t\t1\n      PUSH [tag] 366\t\t\t_nextTokenId()\n      PUSH 0\t\t\t    onl\n      SLOAD \t\t\tuint256 quant\n      SWAP1 \t\t\tuint256 quant\n      JUMP \t\t\tlletLimit(_presaleAllocationsB...\n    tag 366\t\t\t_nextTokenId()\n      JUMPDEST \t\t\t_nextTokenId()\n      PUSH [tag] 368\t\t\tquantity + _nextTokenId()\n      SWAP1 \t\t\tquantity + _nextTokenId()\n      DUP5 \t\t\tquantity\n      PUSH [tag] 272\t\t\tquantity + _nextTokenId()\n      JUMP \t\t\tquantity + _nextTokenId()\n    tag 368\t\t\tquantity + _nextTokenId()\n      JUMPDEST \t\t\tquantity + _nextTokenId()\n      PUSH [tag] 369\t\t\tquantity + _nextTokenId() - 1\n      SWAP2 \t\t\tquantity + _nextTokenId() - 1\n      SWAP1 \t\t\tquantity + _nextTokenId() - 1\n      PUSH [tag] 282\t\t\tquantity + _nextTokenId() - 1\n      JUMP \t\t\tquantity + _nextTokenId() - 1\n    tag 369\t\t\tquantity + _nextTokenId() - 1\n      JUMPDEST \t\t\tquantity + _nextTokenId() - 1\n      GT \t\t\tquantity + _nextTokenId() - 1 ...\n      ISZERO \t\t\tif (\\n            quantity + _...\n      PUSH [tag] 370\t\t\tif (\\n            quantity + _...\n      JUMPI \t\t\tif (\\n            quantity + _...\n      PUSH 40\t\t\tExceedsMaxSupply()\n      MLOAD \t\t\tExceedsMaxSupply()\n      PUSH C30436E9\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tExceedsMaxSupply()\n      MSTORE \t\t\tExceedsMaxSupply()\n      PUSH 4\t\t\tExceedsMaxSupply()\n      ADD \t\t\tExceedsMaxSupply()\n      PUSH 40\t\t\tExceedsMaxSupply()\n      MLOAD \t\t\tExceedsMaxSupply()\n      DUP1 \t\t\tExceedsMaxSupply()\n      SWAP2 \t\t\tExceedsMaxSupply()\n      SUB \t\t\tExceedsMaxSupply()\n      SWAP1 \t\t\tExceedsMaxSupply()\n      REVERT \t\t\tExceedsMaxSupply()\n    tag 370\t\t\tif (\\n            quantity + _...\n      JUMPDEST \t\t\tif (\\n            quantity + _...\n      DUP4 \t\t\tgloomerHash_\n      DUP1 \t\t\tgloomerHash_\n      PUSH 11\t\t\tgloomerHash\n      SLOAD \t\t\tgloomerHash\n      EQ \t\t\tgloomerHash != gloomerHash_\n      PUSH [tag] 372\t\t\tif (gloomerHash != gloomerHash...\n      JUMPI \t\t\tif (gloomerHash != gloomerHash...\n      PUSH 40\t\t\tNotEligible()\n      MLOAD \t\t\tNotEligible()\n      PUSH 7C75AA6F\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tNotEligible()\n      MSTORE \t\t\tNotEligible()\n      PUSH 4\t\t\tNotEligible()\n      ADD \t\t\tNotEligible()\n      PUSH 40\t\t\tNotEligible()\n      MLOAD \t\t\tNotEligible()\n      DUP1 \t\t\tNotEligible()\n      SWAP2 \t\t\tNotEligible()\n      SUB \t\t\tNotEligible()\n      SWAP1 \t\t\tNotEligible()\n      REVERT \t\t\tNotEligible()\n    tag 372\t\t\tif (gloomerHash != gloomerHash...\n      JUMPDEST \t\t\tif (gloomerHash != gloomerHash...\n      ORIGIN \t\t\ttx.origin\n      CALLER \t\t\tmsg.sender\n      EQ \t\t\ttx.origin != msg.sender\n      PUSH [tag] 374\t\t\tif (tx.origin != msg.sender) {...\n      JUMPI \t\t\tif (tx.origin != msg.sender) {...\n      PUSH 40\t\t\tNonEOACaller()\n      MLOAD \t\t\tNonEOACaller()\n      PUSH 58516B3F\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tNonEOACaller()\n      MSTORE \t\t\tNonEOACaller()\n      PUSH 4\t\t\tNonEOACaller()\n      ADD \t\t\tNonEOACaller()\n      PUSH 40\t\t\tNonEOACaller()\n      MLOAD \t\t\tNonEOACaller()\n      DUP1 \t\t\tNonEOACaller()\n      SWAP2 \t\t\tNonEOACaller()\n      SUB \t\t\tNonEOACaller()\n      SWAP1 \t\t\tNonEOACaller()\n      REVERT \t\t\tNonEOACaller()\n    tag 374\t\t\tif (tx.origin != msg.sender) {...\n      JUMPDEST \t\t\tif (tx.origin != msg.sender) {...\n      PUSH F\t\t\t_presalesCount\n      PUSH 0\t\t\t_presalesCount\n      DUP2 \t\t\t++_presalesCount\n      SLOAD \t\t\t++_presalesCount\n      PUSH [tag] 376\t\t\t++_presalesCount\n      SWAP1 \t\t\t++_presalesCount\n      PUSH [tag] 377\t\t\t++_presalesCount\n      JUMP \t\t\t++_presalesCount\n    tag 376\t\t\t++_presalesCount\n      JUMPDEST \t\t\t++_presalesCount\n      SWAP2 \t\t\t++_presalesCount\n      SWAP1 \t\t\t++_presalesCount\n      POP \t\t\t++_presalesCount\n      DUP2 \t\t\t++_presalesCount\n      SWAP1 \t\t\t++_presalesCount\n      SSTORE \t\t\t++_presalesCount\n      POP \t\t\t++_presalesCount\n      DUP6 \t\t\tquantity\n      PUSH 10\t\t\t_presaleSupplyOffset\n      PUSH 0\t\t\t_presaleSupplyOffset\n      DUP3 \t\t\t_presaleSupplyOffset += quanti...\n      DUP3 \t\t\t_presaleSupplyOffset += quanti...\n      SLOAD \t\t\t_presaleSupplyOffset += quanti...\n      PUSH [tag] 378\t\t\t_presaleSupplyOffset += quanti...\n      SWAP2 \t\t\t_presaleSupplyOffset += quanti...\n      SWAP1 \t\t\t_presaleSupplyOffset += quanti...\n      PUSH [tag] 272\t\t\t_presaleSupplyOffset += quanti...\n      JUMP \t\t\t_presaleSupplyOffset += quanti...\n    tag 378\t\t\t_presaleSupplyOffset += quanti...\n      JUMPDEST \t\t\t_presaleSupplyOffset += quanti...\n      SWAP1 \t\t\t_presaleSupplyOffset += quanti...\n      SWAP2 \t\t\t_presaleSupplyOffset += quanti...\n      SSTORE \t\t\t_presaleSupplyOffset += quanti...\n      POP \t\t\t\n      POP \t\t\t\n      CALLER \t\t\tmsg.sender\n      PUSH 0\t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH D\t\t\t_presaleAllocationsByWallet\n      PUSH 20\t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH 40\t\t\t_presaleAllocationsByWallet[ms...\n      DUP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP4 \t\t\t_presaleAllocationsByWallet[ms...\n      KECCAK256 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP11 \t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      SSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH F\t\t\t_presalesCount\n      SLOAD \t\t\t_presalesCount\n      DUP4 \t\t\t_presaleWalletsById[_presalesC...\n      MSTORE \t\t\t_presaleWalletsById[_presalesC...\n      PUSH E\t\t\t_presaleWalletsById\n      DUP3 \t\t\t_presaleWalletsById[_presalesC...\n      MSTORE \t\t\t_presaleWalletsById[_presalesC...\n      SWAP2 \t\t\t_presaleWalletsById[_presalesC...\n      DUP3 \t\t\t_presaleWalletsById[_presalesC...\n      SWAP1 \t\t\t_presaleWalletsById[_presalesC...\n      KECCAK256 \t\t\t_presaleWalletsById[_presalesC...\n      DUP1 \t\t\t_presaleWalletsById[_presalesC...\n      SLOAD \t\t\t_presaleWalletsById[_presalesC...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      AND \t\t\t_presaleWalletsById[_presalesC...\n      DUP5 \t\t\t_presaleWalletsById[_presalesC...\n      OR \t\t\t_presaleWalletsById[_presalesC...\n      SWAP1 \t\t\t_presaleWalletsById[_presalesC...\n      SSTORE \t\t\t_presaleWalletsById[_presalesC...\n      SWAP1 \t\t\tRegisterPresale(msg.sender, qu...\n      MLOAD \t\t\tRegisterPresale(msg.sender, qu...\n      DUP9 \t\t\tamp > PUBLIC_MINT_TIMESTA\n      DUP2 \t\t\tamp > PUBLIC_MINT_TIMESTA\n      MSTORE \t\t\tamp > PUBLIC_MINT_TIMESTA\n      PUSH 954E53AAA9EE9F9AE7F4CC7C0BA01DE261F35BD07352E3C3383EA3B45AD216D4\t\t\tRegisterPresale(msg.sender, qu...\n      SWAP2 \t\t\tRegisterPresale(msg.sender, qu...\n      ADD \t\t\t||\\n            blo\n    tag 379\t\t\tRegisterPresale(msg.sender, qu...\n      JUMPDEST \t\t\tRegisterPresale(msg.sender, qu...\n      PUSH 40\t\t\tRegisterPresale(msg.sender, qu...\n      MLOAD \t\t\tRegisterPresale(msg.sender, qu...\n      DUP1 \t\t\tRegisterPresale(msg.sender, qu...\n      SWAP2 \t\t\tRegisterPresale(msg.sender, qu...\n      SUB \t\t\tRegisterPresale(msg.sender, qu...\n      SWAP1 \t\t\tRegisterPresale(msg.sender, qu...\n      LOG2 \t\t\tRegisterPresale(msg.sender, qu...\n      POP \t\t\t_\n      POP \t\t\t_\n      POP \t\t\t_\n      POP \t\t\t_\n      POP \t\t\tfunction registerPresale(\\n   ...\n      POP \t\t\tfunction registerPresale(\\n   ...\n      JUMP \t\t\tfunction registerPresale(\\n   ...\n    tag 106\t\t\tfunction mintWhitelist(\\n     ...\n      JUMPDEST \t\t\tfunction mintWhitelist(\\n     ...\n      PUSH 0\t\t\tDropStatus.DISABLED\n      PUSH B\t\t\tdropStatus\n      SLOAD \t\t\tdropStatus\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SWAP1 \t\t\tdropStatus\n      DIV \t\t\tdropStatus\n      PUSH FF\t\t\tdropStatus\n      AND \t\t\tdropStatus\n      PUSH 3\t\t\tdropStatus == DropStatus.DISAB...\n      DUP2 \t\t\tdropStatus == DropStatus.DISAB...\n      GT \t\t\tdropStatus == DropStatus.DISAB...\n      ISZERO \t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 384\t\t\tdropStatus == DropStatus.DISAB...\n      JUMPI \t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 384\t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 262\t\t\tdropStatus == DropStatus.DISAB...\n      JUMP \t\t\tdropStatus == DropStatus.DISAB...\n    tag 384\t\t\tdropStatus == DropStatus.DISAB...\n      JUMPDEST \t\t\tdropStatus == DropStatus.DISAB...\n      SUB \t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 385\t\t\tif (dropStatus == DropStatus.D...\n      JUMPI \t\t\tif (dropStatus == DropStatus.D...\n      PUSH 40\t\t\tMintingDisabled()\n      MLOAD \t\t\tMintingDisabled()\n      PUSH AF79B437\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tMintingDisabled()\n      MSTORE \t\t\tMintingDisabled()\n      PUSH 4\t\t\tMintingDisabled()\n      ADD \t\t\tMintingDisabled()\n      PUSH 40\t\t\tMintingDisabled()\n      MLOAD \t\t\tMintingDisabled()\n      DUP1 \t\t\tMintingDisabled()\n      SWAP2 \t\t\tMintingDisabled()\n      SUB \t\t\tMintingDisabled()\n      SWAP1 \t\t\tMintingDisabled()\n      REVERT \t\t\tMintingDisabled()\n    tag 385\t\t\tif (dropStatus == DropStatus.D...\n      JUMPDEST \t\t\tif (dropStatus == DropStatus.D...\n      PUSH 66365B80\t\t\t1714838400\n      TIMESTAMP \t\t\tblock.timestamp\n      LT \t\t\tblock.timestamp < WHITELIST_ST...\n      DUP1 \t\t\tblock.timestamp < WHITELIST_ST...\n      PUSH [tag] 387\t\t\tblock.timestamp < WHITELIST_ST...\n      JUMPI \t\t\tblock.timestamp < WHITELIST_ST...\n      POP \t\t\t\n      PUSH [tag] 388\t\t\tWHITELIST_START_TIMESTAMP + 3 ...\n      PUSH 66365B80\t\t\t1714838400\n      PUSH 2A30\t\t\t3 hours\n      PUSH [tag] 272\t\t\tWHITELIST_START_TIMESTAMP + 3 ...\n      JUMP \t\t\tWHITELIST_START_TIMESTAMP + 3 ...\n    tag 388\t\t\tWHITELIST_START_TIMESTAMP + 3 ...\n      JUMPDEST \t\t\tWHITELIST_START_TIMESTAMP + 3 ...\n      TIMESTAMP \t\t\tblock.timestamp\n      GT \t\t\tblock.timestamp > PUBLIC_MINT_...\n    tag 387\t\t\tblock.timestamp < WHITELIST_ST...\n      JUMPDEST \t\t\tblock.timestamp < WHITELIST_ST...\n      ISZERO \t\t\tif (\\n            block.timest...\n      PUSH [tag] 389\t\t\tif (\\n            block.timest...\n      JUMPI \t\t\tif (\\n            block.timest...\n      PUSH 40\t\t\tWhitelistNotActive()\n      MLOAD \t\t\tWhitelistNotActive()\n      PUSH 2664E71\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tWhitelistNotActive()\n      MSTORE \t\t\tWhitelistNotActive()\n      PUSH 4\t\t\tWhitelistNotActive()\n      ADD \t\t\tWhitelistNotActive()\n      PUSH 40\t\t\tWhitelistNotActive()\n      MLOAD \t\t\tWhitelistNotActive()\n      DUP1 \t\t\tWhitelistNotActive()\n      SWAP2 \t\t\tWhitelistNotActive()\n      SUB \t\t\tWhitelistNotActive()\n      SWAP1 \t\t\tWhitelistNotActive()\n      REVERT \t\t\tWhitelistNotActive()\n    tag 389\t\t\tif (\\n            block.timest...\n      JUMPDEST \t\t\tif (\\n            block.timest...\n      DUP2 \t\t\tquantity\n      PUSH [tag] 391\t\t\tPRICE_PER_TOKEN * quantity\n      DUP2 \t\t\tquantity\n      PUSH 6A94D74F430000\t\t\t0.03 ether\n      PUSH [tag] 356\t\t\tPRICE_PER_TOKEN * quantity\n      JUMP \t\t\tPRICE_PER_TOKEN * quantity\n    tag 391\t\t\tPRICE_PER_TOKEN * quantity\n      JUMPDEST \t\t\tPRICE_PER_TOKEN * quantity\n      CALLVALUE \t\t\tmsg.value\n      LT \t\t\tmsg.value < PRICE_PER_TOKEN * ...\n      ISZERO \t\t\tif (msg.value < PRICE_PER_TOKE...\n      PUSH [tag] 392\t\t\tif (msg.value < PRICE_PER_TOKE...\n      JUMPI \t\t\tif (msg.value < PRICE_PER_TOKE...\n      PUSH 40\t\t\tInsufficientFunds()\n      MLOAD \t\t\tInsufficientFunds()\n      PUSH 356680B7\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tInsufficientFunds()\n      MSTORE \t\t\tInsufficientFunds()\n      PUSH 4\t\t\tInsufficientFunds()\n      ADD \t\t\tInsufficientFunds()\n      PUSH 40\t\t\tInsufficientFunds()\n      MLOAD \t\t\tInsufficientFunds()\n      DUP1 \t\t\tInsufficientFunds()\n      SWAP2 \t\t\tInsufficientFunds()\n      SUB \t\t\tInsufficientFunds()\n      SWAP1 \t\t\tInsufficientFunds()\n      REVERT \t\t\tInsufficientFunds()\n    tag 392\t\t\tif (msg.value < PRICE_PER_TOKE...\n      JUMPDEST \t\t\tif (msg.value < PRICE_PER_TOKE...\n      CALLER \t\t\tmsg.sender\n      PUSH 0\t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH D\t\t\t_presaleAllocationsByWallet\n      PUSH 20\t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH 40\t\t\t_presaleAllocationsByWallet[ms...\n      DUP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP4 \t\t\t_presaleAllocationsByWallet[ms...\n      KECCAK256 \t\t\t_presaleAllocationsByWallet[ms...\n      SLOAD \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH C\t\t\t_mintedPerWallet\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender]\n      SWAP3 \t\t\t_mintedPerWallet[msg.sender]\n      MSTORE \t\t\t_mintedPerWallet[msg.sender]\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender]\n      SWAP2 \t\t\t_mintedPerWallet[msg.sender]\n      KECCAK256 \t\t\t_mintedPerWallet[msg.sender]\n      SLOAD \t\t\t_mintedPerWallet[msg.sender]\n      DUP5 \t\t\tquantity\n      SWAP2 \t\t\tquantity\n      PUSH 3\t\t\t3\n      SWAP2 \t\t\t3\n      DUP4 \t\t\tquantity\n      SWAP2 \t\t\tquantity\n      PUSH [tag] 394\t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP2 \t\t\t_mintedPerWallet[msg.sender] +...\n      PUSH [tag] 272\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMP \t\t\t_mintedPerWallet[msg.sender] +...\n    tag 394\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPDEST \t\t\t_mintedPerWallet[msg.sender] +...\n      PUSH [tag] 395\t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP2 \t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      PUSH [tag] 272\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMP \t\t\t_mintedPerWallet[msg.sender] +...\n    tag 395\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPDEST \t\t\t_mintedPerWallet[msg.sender] +...\n      GT \t\t\t_mintedPerWallet[msg.sender] +...\n      DUP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      ISZERO \t\t\t_mintedPerWallet[msg.sender] +...\n      PUSH [tag] 396\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPI \t\t\t_mintedPerWallet[msg.sender] +...\n      POP \t\t\t\n      PUSH B\t\t\t\\n    u\n      SLOAD \t\t\t\\n    u\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\\n    u\n      CALLER \t\t\tmsg.sender\n      EQ \t\t\tmsg.sender != owner()\n      ISZERO \t\t\tmsg.sender != owner()\n    tag 396\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPDEST \t\t\t_mintedPerWallet[msg.sender] +...\n      ISZERO \t\t\tif (\\n            _mintedPerWa...\n      PUSH [tag] 398\t\t\tif (\\n            _mintedPerWa...\n      JUMPI \t\t\tif (\\n            _mintedPerWa...\n      PUSH 40\t\t\tExceedsMaxMintPerWallet()\n      MLOAD \t\t\tExceedsMaxMintPerWallet()\n      PUSH 67EEC833\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tExceedsMaxMintPerWallet()\n      MSTORE \t\t\tExceedsMaxMintPerWallet()\n      PUSH 4\t\t\tExceedsMaxMintPerWallet()\n      ADD \t\t\tExceedsMaxMintPerWallet()\n      PUSH 40\t\t\tExceedsMaxMintPerWallet()\n      MLOAD \t\t\tExceedsMaxMintPerWallet()\n      DUP1 \t\t\tExceedsMaxMintPerWallet()\n      SWAP2 \t\t\tExceedsMaxMintPerWallet()\n      SUB \t\t\tExceedsMaxMintPerWallet()\n      SWAP1 \t\t\tExceedsMaxMintPerWallet()\n      REVERT \t\t\tExceedsMaxMintPerWallet()\n    tag 398\t\t\tif (\\n            _mintedPerWa...\n      JUMPDEST \t\t\tif (\\n            _mintedPerWa...\n      DUP4 \t\t\tquantity\n      PUSH 10\t\t\t_presaleSupplyOffset\n      SLOAD \t\t\t_presaleSupplyOffset\n      PUSH 1A0A\t\t\t6666\n      PUSH [tag] 400\t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      SWAP2 \t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      SWAP1 \t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      PUSH [tag] 282\t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      JUMP \t\t\tEND_TOKEN_ID - _presaleSupplyO...\n    tag 400\t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      JUMPDEST \t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      PUSH 1\t\t\t1\n      PUSH [tag] 401\t\t\t_nextTokenId()\n      PUSH 0\t\t\t    onl\n      SLOAD \t\t\tuint256 quant\n      SWAP1 \t\t\tuint256 quant\n      JUMP \t\t\tlletLimit(_presaleAllocationsB...\n    tag 401\t\t\t_nextTokenId()\n      JUMPDEST \t\t\t_nextTokenId()\n      PUSH [tag] 402\t\t\tquantity + _nextTokenId()\n      SWAP1 \t\t\tquantity + _nextTokenId()\n      DUP5 \t\t\tquantity\n      PUSH [tag] 272\t\t\tquantity + _nextTokenId()\n      JUMP \t\t\tquantity + _nextTokenId()\n    tag 402\t\t\tquantity + _nextTokenId()\n      JUMPDEST \t\t\tquantity + _nextTokenId()\n      PUSH [tag] 403\t\t\tquantity + _nextTokenId() - 1\n      SWAP2 \t\t\tquantity + _nextTokenId() - 1\n      SWAP1 \t\t\tquantity + _nextTokenId() - 1\n      PUSH [tag] 282\t\t\tquantity + _nextTokenId() - 1\n      JUMP \t\t\tquantity + _nextTokenId() - 1\n    tag 403\t\t\tquantity + _nextTokenId() - 1\n      JUMPDEST \t\t\tquantity + _nextTokenId() - 1\n      GT \t\t\tquantity + _nextTokenId() - 1 ...\n      ISZERO \t\t\tif (\\n            quantity + _...\n      PUSH [tag] 404\t\t\tif (\\n            quantity + _...\n      JUMPI \t\t\tif (\\n            quantity + _...\n      PUSH 40\t\t\tExceedsMaxSupply()\n      MLOAD \t\t\tExceedsMaxSupply()\n      PUSH C30436E9\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tExceedsMaxSupply()\n      MSTORE \t\t\tExceedsMaxSupply()\n      PUSH 4\t\t\tExceedsMaxSupply()\n      ADD \t\t\tExceedsMaxSupply()\n      PUSH 40\t\t\tExceedsMaxSupply()\n      MLOAD \t\t\tExceedsMaxSupply()\n      DUP1 \t\t\tExceedsMaxSupply()\n      SWAP2 \t\t\tExceedsMaxSupply()\n      SUB \t\t\tExceedsMaxSupply()\n      SWAP1 \t\t\tExceedsMaxSupply()\n      REVERT \t\t\tExceedsMaxSupply()\n    tag 404\t\t\tif (\\n            quantity + _...\n      JUMPDEST \t\t\tif (\\n            quantity + _...\n      DUP4 \t\t\tgloomerHash_\n      DUP1 \t\t\tgloomerHash_\n      PUSH 11\t\t\tgloomerHash\n      SLOAD \t\t\tgloomerHash\n      EQ \t\t\tgloomerHash != gloomerHash_\n      PUSH [tag] 406\t\t\tif (gloomerHash != gloomerHash...\n      JUMPI \t\t\tif (gloomerHash != gloomerHash...\n      PUSH 40\t\t\tNotEligible()\n      MLOAD \t\t\tNotEligible()\n      PUSH 7C75AA6F\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tNotEligible()\n      MSTORE \t\t\tNotEligible()\n      PUSH 4\t\t\tNotEligible()\n      ADD \t\t\tNotEligible()\n      PUSH 40\t\t\tNotEligible()\n      MLOAD \t\t\tNotEligible()\n      DUP1 \t\t\tNotEligible()\n      SWAP2 \t\t\tNotEligible()\n      SUB \t\t\tNotEligible()\n      SWAP1 \t\t\tNotEligible()\n      REVERT \t\t\tNotEligible()\n    tag 406\t\t\tif (gloomerHash != gloomerHash...\n      JUMPDEST \t\t\tif (gloomerHash != gloomerHash...\n      ORIGIN \t\t\ttx.origin\n      CALLER \t\t\tmsg.sender\n      EQ \t\t\ttx.origin != msg.sender\n      PUSH [tag] 408\t\t\tif (tx.origin != msg.sender) {...\n      JUMPI \t\t\tif (tx.origin != msg.sender) {...\n      PUSH 40\t\t\tNonEOACaller()\n      MLOAD \t\t\tNonEOACaller()\n      PUSH 58516B3F\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tNonEOACaller()\n      MSTORE \t\t\tNonEOACaller()\n      PUSH 4\t\t\tNonEOACaller()\n      ADD \t\t\tNonEOACaller()\n      PUSH 40\t\t\tNonEOACaller()\n      MLOAD \t\t\tNonEOACaller()\n      DUP1 \t\t\tNonEOACaller()\n      SWAP2 \t\t\tNonEOACaller()\n      SUB \t\t\tNonEOACaller()\n      SWAP1 \t\t\tNonEOACaller()\n      REVERT \t\t\tNonEOACaller()\n    tag 408\t\t\tif (tx.origin != msg.sender) {...\n      JUMPDEST \t\t\tif (tx.origin != msg.sender) {...\n      DUP5 \t\t\tgloomerHash_\n      PUSH 11\t\t\tgloomerHash\n      SLOAD \t\t\tgloomerHash\n      EQ \t\t\tgloomerHash != gloomerHash_\n      PUSH [tag] 410\t\t\tif (gloomerHash != gloomerHash...\n      JUMPI \t\t\tif (gloomerHash != gloomerHash...\n      PUSH 40\t\t\tNotEligible()\n      MLOAD \t\t\tNotEligible()\n      PUSH 7C75AA6F\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tNotEligible()\n      MSTORE \t\t\tNotEligible()\n      PUSH 4\t\t\tNotEligible()\n      ADD \t\t\tNotEligible()\n      PUSH 40\t\t\tNotEligible()\n      MLOAD \t\t\tNotEligible()\n      DUP1 \t\t\tNotEligible()\n      SWAP2 \t\t\tNotEligible()\n      SUB \t\t\tNotEligible()\n      SWAP1 \t\t\tNotEligible()\n      REVERT \t\t\tNotEligible()\n    tag 410\t\t\tif (gloomerHash != gloomerHash...\n      JUMPDEST \t\t\tif (gloomerHash != gloomerHash...\n      CALLER \t\t\tmsg.sender\n      PUSH 0\t\t\t_mintedPerWallet[msg.sender]\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender]\n      DUP2 \t\t\t_mintedPerWallet[msg.sender]\n      MSTORE \t\t\t_mintedPerWallet[msg.sender]\n      PUSH C\t\t\t_mintedPerWallet\n      PUSH 20\t\t\t_mintedPerWallet[msg.sender]\n      MSTORE \t\t\t_mintedPerWallet[msg.sender]\n      PUSH 40\t\t\t_mintedPerWallet[msg.sender]\n      DUP2 \t\t\t_mintedPerWallet[msg.sender]\n      KECCAK256 \t\t\t_mintedPerWallet[msg.sender]\n      DUP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      SLOAD \t\t\t_mintedPerWallet[msg.sender] +...\n      DUP9 \t\t\tquantity\n      SWAP3 \t\t\tquantity\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender]\n      PUSH [tag] 411\t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      DUP5 \t\t\tquantity\n      SWAP1 \t\t\tquantity\n      PUSH [tag] 272\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMP \t\t\t_mintedPerWallet[msg.sender] +...\n    tag 411\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPDEST \t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP2 \t\t\t_mintedPerWallet[msg.sender] +...\n      SSTORE \t\t\t_mintedPerWallet[msg.sender] +...\n      POP \t\t\t\n      PUSH [tag] 412\t\t\t_mint(msg.sender, quantity)\n      SWAP1 \t\t\t_mint(msg.sender, quantity)\n      POP \t\t\t\n      CALLER \t\t\tmsg.sender\n      DUP8 \t\t\tquantity\n      PUSH [tag] 284\t\t\t_mint\n      JUMP \t\t\t_mint(msg.sender, quantity)\n    tag 412\t\t\t_mint(msg.sender, quantity)\n      JUMPDEST \t\t\t_mint(msg.sender, quantity)\n      PUSH 40\t\t\tMintWhitelist(msg.sender, quan...\n      MLOAD \t\t\tMintWhitelist(msg.sender, quan...\n      DUP7 \t\t\tamp > PUBLIC_MINT_TIMESTA\n      DUP2 \t\t\tamp > PUBLIC_MINT_TIMESTA\n      MSTORE \t\t\tamp > PUBLIC_MINT_TIMESTA\n      CALLER \t\t\tmsg.sender\n      SWAP1 \t\t\tmsg.sender\n      PUSH DA47E427FB170A95B4539EA720C3CAF8AD5A319335B1A85FB3A8DB83A61159C0\t\t\tMintWhitelist(msg.sender, quan...\n      SWAP1 \t\t\tMintWhitelist(msg.sender, quan...\n      PUSH 20\t\t\tbl\n      ADD \t\t\t||\\n            blo\n      PUSH [tag] 379\t\t\tMintWhitelist(msg.sender, quan...\n      JUMP \t\t\t       _;\\n    }\\n\\n    modifi...\n    tag 111\t\t\trror PublicMintNotActive();\\n ...\n      JUMPDEST \t\t\trror PublicMintNotActive();\\n ...\n      PUSH 0\t\t\t();\\n   \n      DUP3 \t\t\t    error ExceedsMaxMintPe\n      DUP2 \t\t\t    error ExceedsMaxMintPe\n      MSTORE \t\t\t    error ExceedsMaxMintPe\n      PUSH A\t\t\t    error Exceeds\n      PUSH 20\t\t\t    error ExceedsMaxMintPe\n      SWAP1 \t\t\t    error ExceedsMaxMintPe\n      DUP2 \t\t\t    error ExceedsMaxMintPe\n      MSTORE \t\t\t    error ExceedsMaxMintPe\n      PUSH 40\t\t\t    error ExceedsMaxMintPe\n      DUP1 \t\t\t    error ExceedsMaxMintPe\n      DUP4 \t\t\t    error ExceedsMaxMintPe\n      KECCAK256 \t\t\t    error ExceedsMaxMintPe\n      DUP2 \t\t\t();\\n    error NotEligible();\\...\n      MLOAD \t\t\t();\\n    error NotEligible();\\...\n      DUP1 \t\t\t();\\n    error NotEligible();\\...\n      DUP4 \t\t\t();\\n    error NotEligible();\\...\n      ADD \t\t\t();\\n    error NotEligible();\\...\n      SWAP1 \t\t\t();\\n    error NotEligible();\\...\n      SWAP3 \t\t\t();\\n    error NotEligible();\\...\n      MSTORE \t\t\t();\\n    error NotEligible();\\...\n      SLOAD \t\t\t();\\n    error NotEligible();\\...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t();\\n    error NotEligible();\\...\n      AND \t\t\t();\\n    error NotEligible();\\...\n      DUP1 \t\t\t();\\n    error NotEligible();\\...\n      DUP4 \t\t\t();\\n    error NotEligible();\\...\n      MSTORE \t\t\t();\\n    error NotEligible();\\...\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SWAP1 \t\t\t();\\n    error NotEligible();\\...\n      SWAP2 \t\t\t();\\n    error NotEligible();\\...\n      DIV \t\t\t();\\n    error NotEligible();\\...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH 60\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t();\\n    error NotEligible();\\...\n      SWAP3 \t\t\t();\\n    error NotEligible();\\...\n      DUP3 \t\t\t();\\n    error NotEligible();\\...\n      ADD \t\t\t();\\n    error NotEligible();\\...\n      SWAP3 \t\t\t();\\n    error NotEligible();\\...\n      SWAP1 \t\t\t();\\n    error NotEligible();\\...\n      SWAP3 \t\t\t();\\n    error NotEligible();\\...\n      MSTORE \t\t\t();\\n    error NotEligible();\\...\n      DUP3 \t\t\t();\\n   \n      SWAP2 \t\t\t();\\n   \n      PUSH [tag] 415\t\t\t    error ExceedsMaxSupply();\\...\n      JUMPI \t\t\t    error ExceedsMaxSupply();\\...\n      POP \t\t\t\n      PUSH 40\t\t\tntFunds();\\n    error NonEOACa\n      DUP1 \t\t\tntFunds();\\n    error NonEOACa\n      MLOAD \t\t\tntFunds();\\n    error NonEOACa\n      DUP1 \t\t\tntFunds();\\n    error NonEOACa\n      DUP3 \t\t\tntFunds();\\n    error NonEOACa\n      ADD \t\t\tntFunds();\\n    error NonEOACa\n      SWAP1 \t\t\tntFunds();\\n    error NonEOACa\n      SWAP2 \t\t\tntFunds();\\n    error NonEOACa\n      MSTORE \t\t\tntFunds();\\n    error NonEOACa\n      PUSH 9\t\t\t\\n    error NonEOACa\n      SLOAD \t\t\tntFunds();\\n    error NonEOACa\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\tntFunds();\\n    error NonEOACa\n      AND \t\t\tntFunds();\\n    error NonEOACa\n      DUP3 \t\t\tntFunds();\\n    error NonEOACa\n      MSTORE \t\t\tntFunds();\\n    error NonEOACa\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SWAP1 \t\t\tntFunds();\\n    error NonEOACa\n      DIV \t\t\tntFunds();\\n    error NonEOACa\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH 60\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\tntFunds();\\n    error NonEOACa\n      PUSH 20\t\t\tntFunds();\\n    error NonEOACa\n      DUP3 \t\t\tntFunds();\\n    error NonEOACa\n      ADD \t\t\tntFunds();\\n    error NonEOACa\n      MSTORE \t\t\tntFunds();\\n    error NonEOACa\n    tag 415\t\t\t    error ExceedsMaxSupply();\\...\n      JUMPDEST \t\t\t    error ExceedsMaxSupply();\\...\n      PUSH 20\t\t\tus == DropStatus.DISABL\n      DUP2 \t\t\tus == DropStatus.DISABL\n      ADD \t\t\tus == DropStatus.DISABL\n      MLOAD \t\t\tus == DropStatus.DISABL\n      PUSH 0\t\t\t dropEnabled() {\\n    \n      SWAP1 \t\t\t dropEnabled() {\\n    \n      PUSH 2710\t\t\t;\\n   \n      SWAP1 \t\t\t;\\n   \n      PUSH [tag] 418\t\t\tif (dropStatus == DropStatus.D...\n      SWAP1 \t\t\tif (dropStatus == DropStatus.D...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH 60\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\tif (dropStatus == DropStatus.D...\n      DUP8 \t\t\tif (dropS\n      PUSH [tag] 356\t\t\tif (dropStatus == DropStatus.D...\n      JUMP \t\t\tif (dropStatus == DropStatus.D...\n    tag 418\t\t\tif (dropStatus == DropStatus.D...\n      JUMPDEST \t\t\tif (dropStatus == DropStatus.D...\n      PUSH [tag] 419\t\t\t if (dropStatus == DropStatus....\n      SWAP2 \t\t\t if (dropStatus == DropStatus....\n      SWAP1 \t\t\t if (dropStatus == DropStatus....\n      PUSH [tag] 420\t\t\t if (dropStatus == DropStatus....\n      JUMP \t\t\t if (dropStatus == DropStatus....\n    tag 419\t\t\t if (dropStatus == DropStatus....\n      JUMPDEST \t\t\t if (dropStatus == DropStatus....\n      SWAP2 \t\t\t();\\n        }\\n  \n      MLOAD \t\t\t();\\n        }\\n  \n      SWAP7 \t\t\t();\\n        }\\n  \n      SWAP2 \t\t\t();\\n        }\\n  \n      SWAP6 \t\t\t();\\n        }\\n  \n      POP \t\t\t\n      SWAP1 \t\t\trror PublicMintNotActive();\\n ...\n      SWAP4 \t\t\trror PublicMintNotActive();\\n ...\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\trror PublicMintNotActive();\\n ...\n    tag 116\t\t\tfunction withdraw() public onl...\n      JUMPDEST \t\t\tfunction withdraw() public onl...\n      PUSH [tag] 422\t\t\ttedPerWallet;\n      PUSH [tag] 255\t\t\ttedPerWalle\n      JUMP \t\t\ttedPerWallet;\n    tag 422\t\t\ttedPerWallet;\n      JUMPDEST \t\t\ttedPerWallet;\n      PUSH 40\t\t\tpayable(msg.sender).transfer(a...\n      MLOAD \t\t\tpayable(msg.sender).transfer(a...\n      CALLER \t\t\tmsg.sender\n      SWAP1 \t\t\tmsg.sender\n      SELFBALANCE \t\t\taddress(this).balance\n      DUP1 \t\t\tpayable(msg.sender).transfer(a...\n      ISZERO \t\t\tpayable(msg.sender).transfer(a...\n      PUSH 8FC\t\t\tpayable(msg.sender).transfer(a...\n      MUL \t\t\tpayable(msg.sender).transfer(a...\n      SWAP2 \t\t\tpayable(msg.sender).transfer(a...\n      PUSH 0\t\t\tpayable(msg.sender).transfer(a...\n      DUP2 \t\t\tpayable(msg.sender).transfer(a...\n      DUP2 \t\t\tpayable(msg.sender).transfer(a...\n      DUP2 \t\t\tpayable(msg.sender).transfer(a...\n      DUP6 \t\t\taddress(this).balance\n      DUP9 \t\t\tmsg.sender\n      DUP9 \t\t\tpayable(msg.sender).transfer(a...\n      CALL \t\t\tpayable(msg.sender).transfer(a...\n      SWAP4 \t\t\tpayable(msg.sender).transfer(a...\n      POP \t\t\tpayable(msg.sender).transfer(a...\n      POP \t\t\tpayable(msg.sender).transfer(a...\n      POP \t\t\tpayable(msg.sender).transfer(a...\n      POP \t\t\tpayable(msg.sender).transfer(a...\n      ISZERO \t\t\tpayable(msg.sender).transfer(a...\n      DUP1 \t\t\tpayable(msg.sender).transfer(a...\n      ISZERO \t\t\tpayable(msg.sender).transfer(a...\n      PUSH [tag] 425\t\t\tpayable(msg.sender).transfer(a...\n      JUMPI \t\t\tpayable(msg.sender).transfer(a...\n      RETURNDATASIZE \t\t\tpayable(msg.sender).transfer(a...\n      PUSH 0\t\t\tpayable(msg.sender).transfer(a...\n      DUP1 \t\t\tpayable(msg.sender).transfer(a...\n      RETURNDATACOPY \t\t\tpayable(msg.sender).transfer(a...\n      RETURNDATASIZE \t\t\tpayable(msg.sender).transfer(a...\n      PUSH 0\t\t\tpayable(msg.sender).transfer(a...\n      REVERT \t\t\tpayable(msg.sender).transfer(a...\n    tag 425\t\t\tpayable(msg.sender).transfer(a...\n      JUMPDEST \t\t\tpayable(msg.sender).transfer(a...\n      POP \t\t\tpayable(msg.sender).transfer(a...\n      JUMP \t\t\tfunction withdraw() public onl...\n    tag 119\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 427\t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      PUSH [tag] 207\t\t\t\n      JUMP \t\t\t\n    tag 427\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 129\t\t\tfunction setDropStatus(DropSta...\n      JUMPDEST \t\t\tfunction setDropStatus(DropSta...\n      PUSH [tag] 429\t\t\ttedPerWallet;\n      PUSH [tag] 255\t\t\ttedPerWalle\n      JUMP \t\t\ttedPerWallet;\n    tag 429\t\t\ttedPerWallet;\n      JUMPDEST \t\t\ttedPerWallet;\n      PUSH B\t\t\tdropStatus\n      DUP1 \t\t\tdropStatus = newDropStatus\n      SLOAD \t\t\tdropStatus = newDropStatus\n      DUP3 \t\t\tnewDropStatus\n      SWAP2 \t\t\tnewDropStatus\n      SWAP1 \t\t\tdropStatus\n      PUSH FF\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      NOT \t\t\t\n      AND \t\t\tdropStatus = newDropStatus\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      DUP4 \t\t\tnewDropStatus\n      PUSH 3\t\t\tdropStatus = newDropStatus\n      DUP2 \t\t\tdropStatus = newDropStatus\n      GT \t\t\tdropStatus = newDropStatus\n      ISZERO \t\t\tdropStatus = newDropStatus\n      PUSH [tag] 432\t\t\tdropStatus = newDropStatus\n      JUMPI \t\t\tdropStatus = newDropStatus\n      PUSH [tag] 432\t\t\tdropStatus = newDropStatus\n      PUSH [tag] 262\t\t\tdropStatus = newDropStatus\n      JUMP \t\t\tdropStatus = newDropStatus\n    tag 432\t\t\tdropStatus = newDropStatus\n      JUMPDEST \t\t\tdropStatus = newDropStatus\n      MUL \t\t\tdropStatus = newDropStatus\n      OR \t\t\tdropStatus = newDropStatus\n      SWAP1 \t\t\tdropStatus = newDropStatus\n      SSTORE \t\t\tdropStatus = newDropStatus\n      POP \t\t\tdropStatus = newDropStatus\n      PUSH 3BC110370C8D062D875866567D288433541B3F5F05C98FA991B82EF9F6315881\t\t\tNewDropStatus(newDropStatus)\n      DUP2 \t\t\tnewDropStatus\n      PUSH 40\t\t\tNewDropStatus(newDropStatus)\n      MLOAD \t\t\tNewDropStatus(newDropStatus)\n      PUSH [tag] 433\t\t\tNewDropStatus(newDropStatus)\n      SWAP2 \t\t\tNewDropStatus(newDropStatus)\n      SWAP1 \t\t\tNewDropStatus(newDropStatus)\n      PUSH [tag] 124\t\t\tNewDropStatus(newDropStatus)\n      JUMP \t\t\tNewDropStatus(newDropStatus)\n    tag 433\t\t\tNewDropStatus(newDropStatus)\n      JUMPDEST \t\t\tNewDropStatus(newDropStatus)\n      PUSH 40\t\t\tNewDropStatus(newDropStatus)\n      MLOAD \t\t\tNewDropStatus(newDropStatus)\n      DUP1 \t\t\tNewDropStatus(newDropStatus)\n      SWAP2 \t\t\tNewDropStatus(newDropStatus)\n      SUB \t\t\tNewDropStatus(newDropStatus)\n      SWAP1 \t\t\tNewDropStatus(newDropStatus)\n      LOG1 \t\t\tNewDropStatus(newDropStatus)\n      POP \t\t\tfunction setDropStatus(DropSta...\n      JUMP \t\t\tfunction setDropStatus(DropSta...\n    tag 134\t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      JUMPDEST \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      PUSH 40\t\t\t;\\n  \n      DUP1 \t\t\tntity);\\n   \n      MLOAD \t\t\tntity);\\n   \n      DUP3 \t\t\t56 _quantity);\\n    ev\n      DUP2 \t\t\t56 _quantity);\\n    ev\n      MSTORE \t\t\t56 _quantity);\\n    ev\n      PUSH 5\t\t\tA\n      DUP4 \t\t\ttNotActiv\n      SWAP1 \t\t\ttNotActiv\n      SHL \t\t\ttNotActiv\n      DUP1 \t\t\tmNotActive();\\n    error NotEl\n      DUP3 \t\t\tmNotActive();\\n    error NotEl\n      ADD \t\t\tmNotActive();\\n    error NotEl\n      PUSH 20\t\t\tror \n      ADD \t\t\tmNotActive();\\n    error NotEl\n      SWAP1 \t\t\t   error ClaimNotActive();\\n  ...\n      SWAP3 \t\t\t   error ClaimNotActive();\\n  ...\n      MSTORE \t\t\t   error ClaimNotActive();\\n  ...\n      PUSH 60\t\t\t _toTokenId);\\n    event\n      SWAP2 \t\t\t _toTokenId);\\n    event\n    tag 435\t\t\tExceedsMaxMintPerWallet();\\n  ...\n      JUMPDEST \t\t\tExceedsMaxMintPerWallet();\\n  ...\n      DUP1 \t\t\tMaxMin\n      ISZERO \t\t\tMaxMin\n      PUSH [tag] 436\t\t\tExceedsMaxMintPerWallet();\\n  ...\n      JUMPI \t\t\tExceedsMaxMintPerWallet();\\n  ...\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      DUP1 \t\t\t  error NonE\n      DUP3 \t\t\t  error NonE\n      ADD \t\t\t  error NonE\n      SWAP2 \t\t\t  error NonE\n      DUP7 \t\t\t\\n        if (dropStatus\n      ADD \t\t\t\\n        if (dropStatus\n      ADD \t\t\t\\n        if (dropStatus\n      CALLDATALOAD \t\t\topEnabled() {\\n        if (dro...\n      PUSH 0\t\t\t  error Exceeds\n      PUSH [tag] 437\t\t\t);\\n        }\\n        _;\\n   ...\n      DUP3 \t\t\topEnabled() {\\n        if (dro...\n      PUSH [tag] 211\t\t\t);\\n        }\\n      \n      JUMP \t\t\t);\\n        }\\n        _;\\n   ...\n    tag 437\t\t\t);\\n        }\\n        _;\\n   ...\n      JUMPDEST \t\t\t);\\n        }\\n        _;\\n   ...\n      DUP5 \t\t\te();\\n        }\\n        _;\\n ...\n      DUP5 \t\t\te();\\n        }\\n        _;\\n ...\n      ADD \t\t\te();\\n        }\\n        _;\\n ...\n      PUSH 20\t\t\t   _\n      ADD \t\t\te();\\n        }\\n        _;\\n ...\n      MSTORE \t\t\totActive();\\n        }\\n      ...\n      POP \t\t\t\n      PUSH [tag] 435\t\t\tExceedsMaxMintPerWallet();\\n  ...\n      SWAP1 \t\t\tExceedsMaxMintPerWallet();\\n  ...\n      POP \t\t\t\n      JUMP \t\t\tExceedsMaxMintPerWallet();\\n  ...\n    tag 436\t\t\tExceedsMaxMintPerWallet();\\n  ...\n      JUMPDEST \t\t\tExceedsMaxMintPerWallet();\\n  ...\n      POP \t\t\t\n      SWAP4 \t\t\t          \n      SWAP3 \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\tomtoken.xyz/ipfs/bafybeidnrgag...\n    tag 140\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 251\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 318\t\t\t\n      JUMP \t\t\t\n    tag 146\t\t\ter {\\n        gloomerHash = gl...\n      JUMPDEST \t\t\ter {\\n        gloomerHash = gl...\n      PUSH 0\t\t\tpublic \n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP3 \t\t\t    payable(msg.sen\n      AND \t\t\t    payable(msg.sen\n      PUSH [tag] 442\t\t\t        payable(msg.sender).tr...\n      JUMPI \t\t\t        payable(msg.sender).tr...\n      PUSH [tag] 442\t\t\tr).transfer(address(this).bala...\n      PUSH 23D3AD81\t\t\t\n      PUSH E2\t\t\t\n      SHL \t\t\t\n      PUSH [tag] 307\t\t\tr).tran\n      JUMP \t\t\tr).transfer(address(this).bala...\n    tag 442\t\t\tr).transfer(address(this).bala...\n      JUMPDEST \t\t\tr).transfer(address(this).bala...\n      POP \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\ternal payable {}\\n\\n    rec\n      PUSH 0\t\t\ternal payable {}\\n\\n    rec\n      SWAP1 \t\t\ternal payable {}\\n\\n    rec\n      DUP2 \t\t\ternal payable {}\\n\\n    rec\n      MSTORE \t\t\ternal payable {}\\n\\n    rec\n      PUSH 5\t\t\ternal payable {}\\n\\n\n      PUSH 20\t\t\ternal payable {}\\n\\n    rec\n      MSTORE \t\t\ternal payable {}\\n\\n    rec\n      PUSH 40\t\t\ternal payable {}\\n\\n    rec\n      SWAP1 \t\t\ternal payable {}\\n\\n    rec\n      KECCAK256 \t\t\ternal payable {}\\n\\n    rec\n      SLOAD \t\t\ternal payable {}\\n\\n    rec\n      PUSH FFFFFFFFFFFFFFFF\t\t\tng(address =>\n      AND \t\t\ternal payable {}\\n\\n    receiv...\n      SWAP1 \t\t\ternal payable {}\\n\\n    receiv...\n      JUMP \t\t\ter {\\n        gloomerHash = gl...\n    tag 150\t\t\t;\\n    event NewDropStatus(Dro...\n      JUMPDEST \t\t\t;\\n    event NewDropStatus(Dro...\n      PUSH [tag] 444\t\t\ttedPerWallet;\n      PUSH [tag] 255\t\t\ttedPerWalle\n      JUMP \t\t\ttedPerWallet;\n    tag 444\t\t\ttedPerWallet;\n      JUMPDEST \t\t\ttedPerWallet;\n      PUSH [tag] 446\t\t\tntingDisabled();\\n    error Pu...\n      PUSH 0\t\t\tP\n      PUSH [tag] 447\t\t\tntingDisabled();\\n \n      JUMP \t\t\tntingDisabled();\\n    error Pu...\n    tag 446\t\t\tntingDisabled();\\n    error Pu...\n      JUMPDEST \t\t\tntingDisabled();\\n    error Pu...\n      JUMP \t\t\t;\\n    event NewDropStatus(Dro...\n    tag 158\t\t\t\\n    }\\n\\n    modifier obeysW...\n      JUMPDEST \t\t\t\\n    }\\n\\n    modifier obeysW...\n      PUSH 60\t\t\t     _mintedPerW\n      PUSH 0\t\t\t     ) {\\n    \n      PUSH [tag] 452\t\t\t     revert Exc\n      PUSH [tag] 292\t\t\t     revert E\n      JUMP \t\t\t     revert Exc\n    tag 452\t\t\t     revert Exc\n      JUMPDEST \t\t\t     revert Exc\n      SWAP1 \t\t\t     ) {\\n            revert E...\n      POP \t\t\t     ) {\\n            revert E...\n      PUSH 0\t\t\ttPerWallet()\n      PUSH [tag] 453\t\t\t       }\\n     \n      PUSH 0\t\t\t    onl\n      SLOAD \t\t\tuint256 quant\n      SWAP1 \t\t\tuint256 quant\n      JUMP \t\t\tlletLimit(_presaleAllocationsB...\n    tag 453\t\t\t       }\\n     \n      JUMPDEST \t\t\t       }\\n     \n      SWAP1 \t\t\ttPerWallet();\\n        }\\n    ...\n      POP \t\t\ttPerWallet();\\n        }\\n    ...\n      PUSH 60\t\t\t}\\n\\n    modifier gloomin(b\n      DUP2 \t\t\t    \n      DUP4 \t\t\tHash_\n      EQ \t\t\tHash_) {\\n    \n      PUSH [tag] 454\t\t\tomerHash_) {\\n        if (gloo...\n      JUMPI \t\t\tomerHash_) {\\n        if (gloo...\n      PUSH [tag] 455\t\t\terHash != gloomerHash_) {\\n   ...\n      DUP6 \t\t\tHash_\n      DUP5 \t\t\t{\\n   \n      DUP5 \t\t\t    \n      PUSH [tag] 456\t\t\terHash != gloome\n      JUMP \t\t\terHash != gloomerHash_) {\\n   ...\n    tag 455\t\t\terHash != gloomerHash_) {\\n   ...\n      JUMPDEST \t\t\terHash != gloomerHash_) {\\n   ...\n      SWAP1 \t\t\t  if (gloomerHash != gloomerHa...\n      POP \t\t\t  if (gloomerHash != gloomerHa...\n    tag 454\t\t\tomerHash_) {\\n        if (gloo...\n      JUMPDEST \t\t\tomerHash_) {\\n        if (gloo...\n      SWAP5 \t\t\tble();\\n \n      SWAP4 \t\t\t\\n    }\\n\\n    modifier obeysW...\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\\n    }\\n\\n    modifier obeysW...\n    tag 175\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 60\t\t\t\n      PUSH 3\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 296\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 297\t\t\t\n      JUMP \t\t\t\n    tag 181\t\t\tblock.timestamp < WHITELIST_ST...\n      JUMPDEST \t\t\tblock.timestamp < WHITELIST_ST...\n      PUSH 60\t\t\tim() {\\n        i\n      PUSH [tag] 454\t\t\tonsByWallet[msg.sender] == 0) ...\n      DUP5 \t\t\tender\n      DUP5 \t\t\t== 0)\n      DUP5 \t\t\t\\n   \n      PUSH [tag] 456\t\t\tonsByWallet[msg.\n      JUMP \t\t\tonsByWallet[msg.sender] == 0) ...\n    tag 185\t\t\tuint256 public constant PUBLIC...\n      JUMPDEST \t\t\tuint256 public constant PUBLIC...\n      PUSH [tag] 466\t\t\tWHITELIST_START_TIMESTAMP + 3 ...\n      PUSH 66365B80\t\t\t1714838400\n      PUSH 2A30\t\t\t3 hours\n      PUSH [tag] 272\t\t\tWHITELIST_START_TIMESTAMP + 3 ...\n      JUMP \t\t\tWHITELIST_START_TIMESTAMP + 3 ...\n    tag 466\t\t\tWHITELIST_START_TIMESTAMP + 3 ...\n      JUMPDEST \t\t\tWHITELIST_START_TIMESTAMP + 3 ...\n      DUP2 \t\t\tuint256 public constant PUBLIC...\n      JUMP \t\t\tuint256 public constant PUBLIC...\n    tag 189\t\t\tfunction mint(\\n        uint25...\n      JUMPDEST \t\t\tfunction mint(\\n        uint25...\n      PUSH 0\t\t\tDropStatus.DISABLED\n      PUSH B\t\t\tdropStatus\n      SLOAD \t\t\tdropStatus\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SWAP1 \t\t\tdropStatus\n      DIV \t\t\tdropStatus\n      PUSH FF\t\t\tdropStatus\n      AND \t\t\tdropStatus\n      PUSH 3\t\t\tdropStatus == DropStatus.DISAB...\n      DUP2 \t\t\tdropStatus == DropStatus.DISAB...\n      GT \t\t\tdropStatus == DropStatus.DISAB...\n      ISZERO \t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 471\t\t\tdropStatus == DropStatus.DISAB...\n      JUMPI \t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 471\t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 262\t\t\tdropStatus == DropStatus.DISAB...\n      JUMP \t\t\tdropStatus == DropStatus.DISAB...\n    tag 471\t\t\tdropStatus == DropStatus.DISAB...\n      JUMPDEST \t\t\tdropStatus == DropStatus.DISAB...\n      SUB \t\t\tdropStatus == DropStatus.DISAB...\n      PUSH [tag] 472\t\t\tif (dropStatus == DropStatus.D...\n      JUMPI \t\t\tif (dropStatus == DropStatus.D...\n      PUSH 40\t\t\tMintingDisabled()\n      MLOAD \t\t\tMintingDisabled()\n      PUSH AF79B437\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tMintingDisabled()\n      MSTORE \t\t\tMintingDisabled()\n      PUSH 4\t\t\tMintingDisabled()\n      ADD \t\t\tMintingDisabled()\n      PUSH 40\t\t\tMintingDisabled()\n      MLOAD \t\t\tMintingDisabled()\n      DUP1 \t\t\tMintingDisabled()\n      SWAP2 \t\t\tMintingDisabled()\n      SUB \t\t\tMintingDisabled()\n      SWAP1 \t\t\tMintingDisabled()\n      REVERT \t\t\tMintingDisabled()\n    tag 472\t\t\tif (dropStatus == DropStatus.D...\n      JUMPDEST \t\t\tif (dropStatus == DropStatus.D...\n      PUSH [tag] 474\t\t\tWHITELIST_START_TIMESTAMP + 3 ...\n      PUSH 66365B80\t\t\t1714838400\n      PUSH 2A30\t\t\t3 hours\n      PUSH [tag] 272\t\t\tWHITELIST_START_TIMESTAMP + 3 ...\n      JUMP \t\t\tWHITELIST_START_TIMESTAMP + 3 ...\n    tag 474\t\t\tWHITELIST_START_TIMESTAMP + 3 ...\n      JUMPDEST \t\t\tWHITELIST_START_TIMESTAMP + 3 ...\n      TIMESTAMP \t\t\tblock.timestamp\n      LT \t\t\tblock.timestamp < PUBLIC_MINT_...\n      ISZERO \t\t\tif (block.timestamp < PUBLIC_M...\n      PUSH [tag] 475\t\t\tif (block.timestamp < PUBLIC_M...\n      JUMPI \t\t\tif (block.timestamp < PUBLIC_M...\n      PUSH 40\t\t\tPublicMintNotActive()\n      MLOAD \t\t\tPublicMintNotActive()\n      PUSH CD967E35\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tPublicMintNotActive()\n      MSTORE \t\t\tPublicMintNotActive()\n      PUSH 4\t\t\tPublicMintNotActive()\n      ADD \t\t\tPublicMintNotActive()\n      PUSH 40\t\t\tPublicMintNotActive()\n      MLOAD \t\t\tPublicMintNotActive()\n      DUP1 \t\t\tPublicMintNotActive()\n      SWAP2 \t\t\tPublicMintNotActive()\n      SUB \t\t\tPublicMintNotActive()\n      SWAP1 \t\t\tPublicMintNotActive()\n      REVERT \t\t\tPublicMintNotActive()\n    tag 475\t\t\tif (block.timestamp < PUBLIC_M...\n      JUMPDEST \t\t\tif (block.timestamp < PUBLIC_M...\n      DUP1 \t\t\tquantity\n      PUSH [tag] 477\t\t\tPRICE_PER_TOKEN * quantity\n      DUP2 \t\t\tquantity\n      PUSH 6A94D74F430000\t\t\t0.03 ether\n      PUSH [tag] 356\t\t\tPRICE_PER_TOKEN * quantity\n      JUMP \t\t\tPRICE_PER_TOKEN * quantity\n    tag 477\t\t\tPRICE_PER_TOKEN * quantity\n      JUMPDEST \t\t\tPRICE_PER_TOKEN * quantity\n      CALLVALUE \t\t\tmsg.value\n      LT \t\t\tmsg.value < PRICE_PER_TOKEN * ...\n      ISZERO \t\t\tif (msg.value < PRICE_PER_TOKE...\n      PUSH [tag] 478\t\t\tif (msg.value < PRICE_PER_TOKE...\n      JUMPI \t\t\tif (msg.value < PRICE_PER_TOKE...\n      PUSH 40\t\t\tInsufficientFunds()\n      MLOAD \t\t\tInsufficientFunds()\n      PUSH 356680B7\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tInsufficientFunds()\n      MSTORE \t\t\tInsufficientFunds()\n      PUSH 4\t\t\tInsufficientFunds()\n      ADD \t\t\tInsufficientFunds()\n      PUSH 40\t\t\tInsufficientFunds()\n      MLOAD \t\t\tInsufficientFunds()\n      DUP1 \t\t\tInsufficientFunds()\n      SWAP2 \t\t\tInsufficientFunds()\n      SUB \t\t\tInsufficientFunds()\n      SWAP1 \t\t\tInsufficientFunds()\n      REVERT \t\t\tInsufficientFunds()\n    tag 478\t\t\tif (msg.value < PRICE_PER_TOKE...\n      JUMPDEST \t\t\tif (msg.value < PRICE_PER_TOKE...\n      CALLER \t\t\tmsg.sender\n      PUSH 0\t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH D\t\t\t_presaleAllocationsByWallet\n      PUSH 20\t\t\t_presaleAllocationsByWallet[ms...\n      SWAP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP2 \t\t\t_presaleAllocationsByWallet[ms...\n      MSTORE \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH 40\t\t\t_presaleAllocationsByWallet[ms...\n      DUP1 \t\t\t_presaleAllocationsByWallet[ms...\n      DUP4 \t\t\t_presaleAllocationsByWallet[ms...\n      KECCAK256 \t\t\t_presaleAllocationsByWallet[ms...\n      SLOAD \t\t\t_presaleAllocationsByWallet[ms...\n      PUSH C\t\t\t_mintedPerWallet\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender]\n      SWAP3 \t\t\t_mintedPerWallet[msg.sender]\n      MSTORE \t\t\t_mintedPerWallet[msg.sender]\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender]\n      SWAP2 \t\t\t_mintedPerWallet[msg.sender]\n      KECCAK256 \t\t\t_mintedPerWallet[msg.sender]\n      SLOAD \t\t\t_mintedPerWallet[msg.sender]\n      DUP4 \t\t\tquantity\n      SWAP2 \t\t\tquantity\n      PUSH 3\t\t\t3\n      SWAP2 \t\t\t3\n      DUP4 \t\t\tquantity\n      SWAP2 \t\t\tquantity\n      PUSH [tag] 480\t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP2 \t\t\t_mintedPerWallet[msg.sender] +...\n      PUSH [tag] 272\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMP \t\t\t_mintedPerWallet[msg.sender] +...\n    tag 480\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPDEST \t\t\t_mintedPerWallet[msg.sender] +...\n      PUSH [tag] 481\t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP2 \t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      PUSH [tag] 272\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMP \t\t\t_mintedPerWallet[msg.sender] +...\n    tag 481\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPDEST \t\t\t_mintedPerWallet[msg.sender] +...\n      GT \t\t\t_mintedPerWallet[msg.sender] +...\n      DUP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      ISZERO \t\t\t_mintedPerWallet[msg.sender] +...\n      PUSH [tag] 482\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPI \t\t\t_mintedPerWallet[msg.sender] +...\n      POP \t\t\t\n      PUSH B\t\t\t\\n    u\n      SLOAD \t\t\t\\n    u\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\\n    u\n      CALLER \t\t\tmsg.sender\n      EQ \t\t\tmsg.sender != owner()\n      ISZERO \t\t\tmsg.sender != owner()\n    tag 482\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPDEST \t\t\t_mintedPerWallet[msg.sender] +...\n      ISZERO \t\t\tif (\\n            _mintedPerWa...\n      PUSH [tag] 484\t\t\tif (\\n            _mintedPerWa...\n      JUMPI \t\t\tif (\\n            _mintedPerWa...\n      PUSH 40\t\t\tExceedsMaxMintPerWallet()\n      MLOAD \t\t\tExceedsMaxMintPerWallet()\n      PUSH 67EEC833\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tExceedsMaxMintPerWallet()\n      MSTORE \t\t\tExceedsMaxMintPerWallet()\n      PUSH 4\t\t\tExceedsMaxMintPerWallet()\n      ADD \t\t\tExceedsMaxMintPerWallet()\n      PUSH 40\t\t\tExceedsMaxMintPerWallet()\n      MLOAD \t\t\tExceedsMaxMintPerWallet()\n      DUP1 \t\t\tExceedsMaxMintPerWallet()\n      SWAP2 \t\t\tExceedsMaxMintPerWallet()\n      SUB \t\t\tExceedsMaxMintPerWallet()\n      SWAP1 \t\t\tExceedsMaxMintPerWallet()\n      REVERT \t\t\tExceedsMaxMintPerWallet()\n    tag 484\t\t\tif (\\n            _mintedPerWa...\n      JUMPDEST \t\t\tif (\\n            _mintedPerWa...\n      DUP3 \t\t\tquantity\n      PUSH 10\t\t\t_presaleSupplyOffset\n      SLOAD \t\t\t_presaleSupplyOffset\n      PUSH 1A0A\t\t\t6666\n      PUSH [tag] 486\t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      SWAP2 \t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      SWAP1 \t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      PUSH [tag] 282\t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      JUMP \t\t\tEND_TOKEN_ID - _presaleSupplyO...\n    tag 486\t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      JUMPDEST \t\t\tEND_TOKEN_ID - _presaleSupplyO...\n      PUSH 1\t\t\t1\n      PUSH [tag] 487\t\t\t_nextTokenId()\n      PUSH 0\t\t\t    onl\n      SLOAD \t\t\tuint256 quant\n      SWAP1 \t\t\tuint256 quant\n      JUMP \t\t\tlletLimit(_presaleAllocationsB...\n    tag 487\t\t\t_nextTokenId()\n      JUMPDEST \t\t\t_nextTokenId()\n      PUSH [tag] 488\t\t\tquantity + _nextTokenId()\n      SWAP1 \t\t\tquantity + _nextTokenId()\n      DUP5 \t\t\tquantity\n      PUSH [tag] 272\t\t\tquantity + _nextTokenId()\n      JUMP \t\t\tquantity + _nextTokenId()\n    tag 488\t\t\tquantity + _nextTokenId()\n      JUMPDEST \t\t\tquantity + _nextTokenId()\n      PUSH [tag] 489\t\t\tquantity + _nextTokenId() - 1\n      SWAP2 \t\t\tquantity + _nextTokenId() - 1\n      SWAP1 \t\t\tquantity + _nextTokenId() - 1\n      PUSH [tag] 282\t\t\tquantity + _nextTokenId() - 1\n      JUMP \t\t\tquantity + _nextTokenId() - 1\n    tag 489\t\t\tquantity + _nextTokenId() - 1\n      JUMPDEST \t\t\tquantity + _nextTokenId() - 1\n      GT \t\t\tquantity + _nextTokenId() - 1 ...\n      ISZERO \t\t\tif (\\n            quantity + _...\n      PUSH [tag] 490\t\t\tif (\\n            quantity + _...\n      JUMPI \t\t\tif (\\n            quantity + _...\n      PUSH 40\t\t\tExceedsMaxSupply()\n      MLOAD \t\t\tExceedsMaxSupply()\n      PUSH C30436E9\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tExceedsMaxSupply()\n      MSTORE \t\t\tExceedsMaxSupply()\n      PUSH 4\t\t\tExceedsMaxSupply()\n      ADD \t\t\tExceedsMaxSupply()\n      PUSH 40\t\t\tExceedsMaxSupply()\n      MLOAD \t\t\tExceedsMaxSupply()\n      DUP1 \t\t\tExceedsMaxSupply()\n      SWAP2 \t\t\tExceedsMaxSupply()\n      SUB \t\t\tExceedsMaxSupply()\n      SWAP1 \t\t\tExceedsMaxSupply()\n      REVERT \t\t\tExceedsMaxSupply()\n    tag 490\t\t\tif (\\n            quantity + _...\n      JUMPDEST \t\t\tif (\\n            quantity + _...\n      ORIGIN \t\t\ttx.origin\n      CALLER \t\t\tmsg.sender\n      EQ \t\t\ttx.origin != msg.sender\n      PUSH [tag] 492\t\t\tif (tx.origin != msg.sender) {...\n      JUMPI \t\t\tif (tx.origin != msg.sender) {...\n      PUSH 40\t\t\tNonEOACaller()\n      MLOAD \t\t\tNonEOACaller()\n      PUSH 58516B3F\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tNonEOACaller()\n      MSTORE \t\t\tNonEOACaller()\n      PUSH 4\t\t\tNonEOACaller()\n      ADD \t\t\tNonEOACaller()\n      PUSH 40\t\t\tNonEOACaller()\n      MLOAD \t\t\tNonEOACaller()\n      DUP1 \t\t\tNonEOACaller()\n      SWAP2 \t\t\tNonEOACaller()\n      SUB \t\t\tNonEOACaller()\n      SWAP1 \t\t\tNonEOACaller()\n      REVERT \t\t\tNonEOACaller()\n    tag 492\t\t\tif (tx.origin != msg.sender) {...\n      JUMPDEST \t\t\tif (tx.origin != msg.sender) {...\n      CALLER \t\t\tmsg.sender\n      PUSH 0\t\t\t_mintedPerWallet[msg.sender]\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender]\n      DUP2 \t\t\t_mintedPerWallet[msg.sender]\n      MSTORE \t\t\t_mintedPerWallet[msg.sender]\n      PUSH C\t\t\t_mintedPerWallet\n      PUSH 20\t\t\t_mintedPerWallet[msg.sender]\n      MSTORE \t\t\t_mintedPerWallet[msg.sender]\n      PUSH 40\t\t\t_mintedPerWallet[msg.sender]\n      DUP2 \t\t\t_mintedPerWallet[msg.sender]\n      KECCAK256 \t\t\t_mintedPerWallet[msg.sender]\n      DUP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      SLOAD \t\t\t_mintedPerWallet[msg.sender] +...\n      DUP7 \t\t\tquantity\n      SWAP3 \t\t\tquantity\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender]\n      PUSH [tag] 494\t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      DUP5 \t\t\tquantity\n      SWAP1 \t\t\tquantity\n      PUSH [tag] 272\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMP \t\t\t_mintedPerWallet[msg.sender] +...\n    tag 494\t\t\t_mintedPerWallet[msg.sender] +...\n      JUMPDEST \t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP1 \t\t\t_mintedPerWallet[msg.sender] +...\n      SWAP2 \t\t\t_mintedPerWallet[msg.sender] +...\n      SSTORE \t\t\t_mintedPerWallet[msg.sender] +...\n      POP \t\t\t\n      PUSH [tag] 495\t\t\t_mint(msg.sender, quantity)\n      SWAP1 \t\t\t_mint(msg.sender, quantity)\n      POP \t\t\t\n      CALLER \t\t\tmsg.sender\n      DUP6 \t\t\tquantity\n      PUSH [tag] 284\t\t\t_mint\n      JUMP \t\t\t_mint(msg.sender, quantity)\n    tag 495\t\t\t_mint(msg.sender, quantity)\n      JUMPDEST \t\t\t_mint(msg.sender, quantity)\n      PUSH 40\t\t\tGloomersMint(msg.sender, quant...\n      MLOAD \t\t\tGloomersMint(msg.sender, quant...\n      DUP5 \t\t\tamp > PUBLIC_MINT_TIMESTA\n      DUP2 \t\t\tamp > PUBLIC_MINT_TIMESTA\n      MSTORE \t\t\tamp > PUBLIC_MINT_TIMESTA\n      CALLER \t\t\tmsg.sender\n      SWAP1 \t\t\tmsg.sender\n      PUSH F07265907AAF7B6329BB73E97EA492CCBBC0678C94313E1F8331013A2E269D33\t\t\tGloomersMint(msg.sender, quant...\n      SWAP1 \t\t\tGloomersMint(msg.sender, quant...\n      PUSH 20\t\t\tbl\n      ADD \t\t\t||\\n            blo\n      PUSH 40\t\t\tGloomersMint(msg.sender, quant...\n      MLOAD \t\t\tGloomersMint(msg.sender, quant...\n      DUP1 \t\t\tGloomersMint(msg.sender, quant...\n      SWAP2 \t\t\tGloomersMint(msg.sender, quant...\n      SUB \t\t\tGloomersMint(msg.sender, quant...\n      SWAP1 \t\t\tGloomersMint(msg.sender, quant...\n      LOG2 \t\t\tGloomersMint(msg.sender, quant...\n      POP \t\t\t_\n      POP \t\t\t_\n      POP \t\t\t_\n      POP \t\t\tfunction mint(\\n        uint25...\n      JUMP \t\t\tfunction mint(\\n        uint25...\n    tag 194\t\t\t\n      JUMPDEST \t\t\t\n      CALLER \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 7\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      DUP1 \t\t\t\n      DUP6 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      SWAP3 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      DUP7 \t\t\t\n      ISZERO \t\t\t\n      ISZERO \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      SSTORE \t\t\t\n      SWAP1 \t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\telist, and public minting peri...\n      DUP2 \t\t\telist, and public minting peri...\n      MSTORE \t\t\telist, and public minting peri...\n      SWAP2 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      PUSH 17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31\t\t\t\n      SWAP2 \t\t\t\n      ADD \t\t\tcontract with pres\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 207\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 503\t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 99\t\t\t\n      JUMP \t\t\t\n    tag 503\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      EXTCODESIZE \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 508\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 505\t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 506\t\t\t\n      JUMP \t\t\t\n    tag 505\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 508\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 508\t\t\t\n      PUSH 68D2BF6B\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      PUSH [tag] 307\t\t\t\n      JUMP \t\t\t\n    tag 508\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 211\t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      JUMPDEST \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 80\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 60\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 512\t\t\tAMP =\\n        W\n      PUSH [tag] 292\t\t\tAMP =\\n       \n      JUMP \t\t\tAMP =\\n        W\n    tag 512\t\t\tAMP =\\n        W\n      JUMPDEST \t\t\tAMP =\\n        W\n      DUP3 \t\t\tMINT_TI\n      LT \t\t\tMINT_TIMESTAMP =\\n        W\n      PUSH [tag] 519\t\t\tLIC_MINT_TIMESTAMP =\\n        ...\n      JUMPI \t\t\tLIC_MINT_TIMESTAMP =\\n        ...\n      PUSH 0\t\t\t    onl\n      SLOAD \t\t\tuint256 quant\n      DUP3 \t\t\tITELIST\n      LT \t\t\tITELIST,\\n        PUBLIC\\n\n      ISZERO \t\t\t  WHITELIST,\\n        PUBLIC\\n...\n      PUSH [tag] 519\t\t\t  WHITELIST,\\n        PUBLIC\\n...\n      JUMPI \t\t\t  WHITELIST,\\n        PUBLIC\\n...\n    tag 520\t\t\tivate _presaleAllocationsByWal...\n      JUMPDEST \t\t\tivate _presaleAllocationsByWal...\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 521\t\t\tivate _presaleAllocationsByWal...\n      JUMPI \t\t\tivate _presaleAllocationsByWal...\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      SWAP1 \t\t\tping(uint\n      SWAP2 \t\t\tping(uint\n      ADD \t\t\tping(uint\n      SWAP1 \t\t\tping(uint\n      PUSH [tag] 520\t\t\tivate _presaleAllocationsByWal...\n      JUMP \t\t\tivate _presaleAllocationsByWal...\n    tag 521\t\t\tivate _presaleAllocationsByWal...\n      JUMPDEST \t\t\tivate _presaleAllocationsByWal...\n      PUSH [tag] 251\t\t\taleWalletsById;\\n    u\n      DUP3 \t\t\td;\\n    \n      PUSH [tag] 517\t\t\taleWalletsBy\n      JUMP \t\t\taleWalletsById;\\n    u\n    tag 519\t\t\t  WHITELIST,\\n        PUBLIC\\n...\n      JUMPDEST \t\t\t  WHITELIST,\\n        PUBLIC\\n...\n      SWAP2 \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      SWAP1 \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      POP \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n      JUMP \t\t\t58cf3ac201d8d9dfe63ac7c7d1e7aa...\n    tag 218\t\t\tfunction setGloomerHash(bytes3...\n      JUMPDEST \t\t\tfunction setGloomerHash(bytes3...\n      PUSH [tag] 526\t\t\ttedPerWallet;\n      PUSH [tag] 255\t\t\ttedPerWalle\n      JUMP \t\t\ttedPerWallet;\n    tag 526\t\t\ttedPerWallet;\n      JUMPDEST \t\t\ttedPerWallet;\n      PUSH 11\t\t\tgloomerHash\n      SSTORE \t\t\tgloomerHash = gloomerHash_\n      JUMP \t\t\tfunction setGloomerHash(bytes3...\n    tag 222\t\t\tfunction tokenURI(\\n        ui...\n      JUMPDEST \t\t\tfunction tokenURI(\\n        ui...\n      PUSH 12\t\t\trevealed\n      SLOAD \t\t\trevealed\n      PUSH 60\t\t\tstring memory\n      SWAP1 \t\t\tstring memory\n      PUSH FF\t\t\trevealed\n      AND \t\t\trevealed\n      PUSH [tag] 529\t\t\tif (!revealed) {\\n            ...\n      JUMPI \t\t\tif (!revealed) {\\n            ...\n      PUSH [tag] 251\t\t\t_baseURI()\n      PUSH [tag] 531\t\t\t_baseURI\n      JUMP \t\t\t_baseURI()\n    tag 529\t\t\tif (!revealed) {\\n            ...\n      JUMPDEST \t\t\tif (!revealed) {\\n            ...\n      PUSH [tag] 532\t\t\t_exists(tokenId)\n      DUP3 \t\t\ttokenId\n      PUSH [tag] 304\t\t\t_exists\n      JUMP \t\t\t_exists(tokenId)\n    tag 532\t\t\t_exists(tokenId)\n      JUMPDEST \t\t\t_exists(tokenId)\n      PUSH [tag] 533\t\t\tif (!_exists(tokenId)) {\\n    ...\n      JUMPI \t\t\tif (!_exists(tokenId)) {\\n    ...\n      PUSH 40\t\t\tURIQueryForNonexistentToken()\n      MLOAD \t\t\tURIQueryForNonexistentToken()\n      PUSH A14C4B5\t\t\t\n      PUSH E4\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tURIQueryForNonexistentToken()\n      MSTORE \t\t\tURIQueryForNonexistentToken()\n      PUSH 4\t\t\tURIQueryForNonexistentToken()\n      ADD \t\t\tURIQueryForNonexistentToken()\n      PUSH 40\t\t\tURIQueryForNonexistentToken()\n      MLOAD \t\t\tURIQueryForNonexistentToken()\n      DUP1 \t\t\tURIQueryForNonexistentToken()\n      SWAP2 \t\t\tURIQueryForNonexistentToken()\n      SUB \t\t\tURIQueryForNonexistentToken()\n      SWAP1 \t\t\tURIQueryForNonexistentToken()\n      REVERT \t\t\tURIQueryForNonexistentToken()\n    tag 533\t\t\tif (!_exists(tokenId)) {\\n    ...\n      JUMPDEST \t\t\tif (!_exists(tokenId)) {\\n    ...\n      PUSH 0\t\t\tstring memory baseURI\n      PUSH [tag] 534\t\t\t_baseURI()\n      PUSH [tag] 531\t\t\t_baseURI\n      JUMP \t\t\t_baseURI()\n    tag 534\t\t\t_baseURI()\n      JUMPDEST \t\t\t_baseURI()\n      PUSH 12\t\t\trevealed\n      SLOAD \t\t\trevealed\n      SWAP1 \t\t\tstring memory baseURI = _baseU...\n      SWAP2 \t\t\tstring memory baseURI = _baseU...\n      POP \t\t\t\n      PUSH 0\t\t\tstring memory metadataPointerI...\n      SWAP1 \t\t\tstring memory metadataPointerI...\n      PUSH FF\t\t\trevealed\n      AND \t\t\trevealed\n      ISZERO \t\t\t!revealed\n      PUSH [tag] 535\t\t\t!revealed ? \"\" : _toString(tok...\n      JUMPI \t\t\t!revealed ? \"\" : _toString(tok...\n      PUSH [tag] 536\t\t\t_toString(tokenId)\n      DUP5 \t\t\ttokenId\n      PUSH [tag] 537\t\t\t_toString\n      JUMP \t\t\t_toString(tokenId)\n    tag 536\t\t\t_toString(tokenId)\n      JUMPDEST \t\t\t_toString(tokenId)\n      PUSH [tag] 538\t\t\t!revealed ? \"\" : _toString(tok...\n      JUMP \t\t\t!revealed ? \"\" : _toString(tok...\n    tag 535\t\t\t!revealed ? \"\" : _toString(tok...\n      JUMPDEST \t\t\t!revealed ? \"\" : _toString(tok...\n      PUSH 40\t\t\t!revealed ? \"\" : _toString(tok...\n      MLOAD \t\t\t!revealed ? \"\" : _toString(tok...\n      DUP1 \t\t\t!revealed ? \"\" : _toString(tok...\n      PUSH 20\t\t\t!revealed ? \"\" : _toString(tok...\n      ADD \t\t\t!revealed ? \"\" : _toString(tok...\n      PUSH 40\t\t\t!revealed ? \"\" : _toString(tok...\n      MSTORE \t\t\t!revealed ? \"\" : _toString(tok...\n      DUP1 \t\t\t!revealed ? \"\" : _toString(tok...\n      PUSH 0\t\t\t!revealed ? \"\" : _toString(tok...\n      DUP2 \t\t\t!revealed ? \"\" : _toString(tok...\n      MSTORE \t\t\t!revealed ? \"\" : _toString(tok...\n      POP \t\t\t!revealed ? \"\" : _toString(tok...\n    tag 538\t\t\t!revealed ? \"\" : _toString(tok...\n      JUMPDEST \t\t\t!revealed ? \"\" : _toString(tok...\n      SWAP1 \t\t\tstring memory metadataPointerI...\n      POP \t\t\tstring memory metadataPointerI...\n      PUSH 0\t\t\tstring memory result\n      DUP3 \t\t\tbaseURI\n      DUP3 \t\t\tmetadataPointerId\n      PUSH 40\t\t\tabi.encodePacked(baseURI, meta...\n      MLOAD \t\t\tabi.encodePacked(baseURI, meta...\n      PUSH 20\t\t\tabi.encodePacked(baseURI, meta...\n      ADD \t\t\tabi.encodePacked(baseURI, meta...\n      PUSH [tag] 539\t\t\tabi.encodePacked(baseURI, meta...\n      SWAP3 \t\t\tabi.encodePacked(baseURI, meta...\n      SWAP2 \t\t\tabi.encodePacked(baseURI, meta...\n      SWAP1 \t\t\tabi.encodePacked(baseURI, meta...\n      PUSH [tag] 540\t\t\tabi.encodePacked(baseURI, meta...\n      JUMP \t\t\tabi.encodePacked(baseURI, meta...\n    tag 539\t\t\tabi.encodePacked(baseURI, meta...\n      JUMPDEST \t\t\tabi.encodePacked(baseURI, meta...\n      PUSH 40\t\t\tabi.encodePacked(baseURI, meta...\n      MLOAD \t\t\tabi.encodePacked(baseURI, meta...\n      PUSH 20\t\t\tabi.encodePacked(baseURI, meta...\n      DUP2 \t\t\tabi.encodePacked(baseURI, meta...\n      DUP4 \t\t\tabi.encodePacked(baseURI, meta...\n      SUB \t\t\tabi.encodePacked(baseURI, meta...\n      SUB \t\t\tabi.encodePacked(baseURI, meta...\n      DUP2 \t\t\tabi.encodePacked(baseURI, meta...\n      MSTORE \t\t\tabi.encodePacked(baseURI, meta...\n      SWAP1 \t\t\tabi.encodePacked(baseURI, meta...\n      PUSH 40\t\t\tabi.encodePacked(baseURI, meta...\n      MSTORE \t\t\tabi.encodePacked(baseURI, meta...\n      SWAP1 \t\t\tstring memory result = string(...\n      POP \t\t\tstring memory result = string(...\n      DUP3 \t\t\tbaseURI\n      MLOAD \t\t\tbytes(baseURI).length\n      PUSH 0\t\t\t0\n      SUB \t\t\tbytes(baseURI).length != 0\n      PUSH [tag] 454\t\t\tbytes(baseURI).length != 0 ? r...\n      JUMPI \t\t\tbytes(baseURI).length != 0 ? r...\n      PUSH 40\t\t\tbytes(baseURI).length != 0 ? r...\n      MLOAD \t\t\tbytes(baseURI).length != 0 ? r...\n      DUP1 \t\t\tbytes(baseURI).length != 0 ? r...\n      PUSH 20\t\t\tbytes(baseURI).length != 0 ? r...\n      ADD \t\t\tbytes(baseURI).length != 0 ? r...\n      PUSH 40\t\t\tbytes(baseURI).length != 0 ? r...\n      MSTORE \t\t\tbytes(baseURI).length != 0 ? r...\n      DUP1 \t\t\tbytes(baseURI).length != 0 ? r...\n      PUSH 0\t\t\tbytes(baseURI).length != 0 ? r...\n      DUP2 \t\t\tbytes(baseURI).length != 0 ? r...\n      MSTORE \t\t\tbytes(baseURI).length != 0 ? r...\n      POP \t\t\tbytes(baseURI).length != 0 ? r...\n      SWAP6 \t\t\treturn bytes(baseURI).length !...\n      SWAP5 \t\t\tfunction tokenURI(\\n        ui...\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\tfunction tokenURI(\\n        ui...\n    tag 237\t\t\tintPerWallet();\\n    error Exc...\n      JUMPDEST \t\t\tintPerWallet();\\n    error Exc...\n      PUSH [tag] 546\t\t\ttedPerWallet;\n      PUSH [tag] 255\t\t\ttedPerWalle\n      JUMP \t\t\ttedPerWallet;\n    tag 546\t\t\ttedPerWallet;\n      JUMPDEST \t\t\ttedPerWallet;\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\tor NonEOACaller();\\n\\n  \n      AND \t\t\tor NonEOACaller();\\n\\n  \n      PUSH [tag] 548\t\t\t error NonEOACaller();\\n\\n    ...\n      JUMPI \t\t\t error NonEOACaller();\\n\\n    ...\n      PUSH 40\t\t\t) {\\n        if (dropStatus ==...\n      MLOAD \t\t\t) {\\n        if (dropStatus ==...\n      PUSH 1E4FBDF7\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t) {\\n        if (dropStatus ==...\n      MSTORE \t\t\t) {\\n        if (dropStatus ==...\n      PUSH 0\t\t\t=\n      PUSH 4\t\t\t) {\\n        if (dropStatus ==...\n      DUP3 \t\t\t) {\\n        if (dropStatus ==...\n      ADD \t\t\t) {\\n        if (dropStatus ==...\n      MSTORE \t\t\ttFunds();\\n    error NonEOACal...\n      PUSH 24\t\t\tly();\\n    error In\n      ADD \t\t\tly();\\n    error In\n    tag 549\t\t\t) {\\n        if (dropStatus ==...\n      JUMPDEST \t\t\t) {\\n        if (dropStatus ==...\n      PUSH 40\t\t\t) {\\n        if (dropStatus ==...\n      MLOAD \t\t\t) {\\n        if (dropStatus ==...\n      DUP1 \t\t\t) {\\n        if (dropStatus ==...\n      SWAP2 \t\t\t) {\\n        if (dropStatus ==...\n      SUB \t\t\t) {\\n        if (dropStatus ==...\n      SWAP1 \t\t\t) {\\n        if (dropStatus ==...\n      REVERT \t\t\t) {\\n        if (dropStatus ==...\n    tag 548\t\t\t error NonEOACaller();\\n\\n    ...\n      JUMPDEST \t\t\t error NonEOACaller();\\n\\n    ...\n      PUSH [tag] 425\t\t\t{\\n            revert Minting\n      DUP2 \t\t\tt Mintin\n      PUSH [tag] 447\t\t\t{\\n            reve\n      JUMP \t\t\t{\\n            revert Minting\n    tag 249\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 1FFC9A7\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      EQ \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 552\t\t\t\n      JUMPI \t\t\t\n      POP \t\t\t\n      PUSH 80AC58CD\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      EQ \t\t\t\n    tag 552\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 251\t\t\t\n      JUMPI \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 5B5E139F\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      EQ \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 252\t\t\ttelist(address indexed _to, ui...\n      JUMPDEST \t\t\ttelist(address indexed _to, ui...\n      PUSH 0\t\t\t _qu\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      DUP3 \t\t\tClaimPresale(address indexed _...\n      AND \t\t\tClaimPresale(address indexed _...\n      PUSH 152A902D\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      EQ \t\t\tClaimPresale(address indexed _...\n      DUP1 \t\t\tClaimPresale(address indexed _...\n      PUSH [tag] 251\t\t\tClaimPresale(address indexed _...\n      JUMPI \t\t\tClaimPresale(address indexed _...\n      POP \t\t\t\n      PUSH 1FFC9A7\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      DUP4 \t\t\t56 public constant END_TOKEN_I...\n      AND \t\t\t56 public constant END_TOKEN_I...\n      EQ \t\t\t56 public constant END_TOKEN_I...\n      PUSH [tag] 251\t\t\tantity);\\n    event NewDropSta...\n      JUMP \t\t\tAQueryable,\\n    ERC2981,\\n   ...\n    tag 255\t\t\tprivate revealed = false;\\n   ...\n      JUMPDEST \t\t\tprivate revealed = false;\\n   ...\n      PUSH B\t\t\t\\n    u\n      SLOAD \t\t\t\\n    u\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\\n    u\n      CALLER \t\t\t\n      EQ \t\t\t=\\n        \"https://ipfs\n      PUSH [tag] 446\t\t\tURI =\\n        \"https://ipfs.g...\n      JUMPI \t\t\tURI =\\n        \"https://ipfs.g...\n      PUSH 40\t\t\tfybeidnrgagzrjvavrsjtnz6qhqvnl...\n      MLOAD \t\t\tfybeidnrgagzrjvavrsjtnz6qhqvnl...\n      PUSH 118CDAA7\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tfybeidnrgagzrjvavrsjtnz6qhqvnl...\n      MSTORE \t\t\tfybeidnrgagzrjvavrsjtnz6qhqvnl...\n      CALLER \t\t\t\n      PUSH 4\t\t\tfybeidnrgagzrjvavrsjtnz6qhqvnl...\n      DUP3 \t\t\tfybeidnrgagzrjvavrsjtnz6qhqvnl...\n      ADD \t\t\tfybeidnrgagzrjvavrsjtnz6qhqvnl...\n      MSTORE \t\t\ttFunds();\\n    error NonEOACal...\n      PUSH 24\t\t\tly();\\n    error In\n      ADD \t\t\tly();\\n    error In\n      PUSH [tag] 549\t\t\tfybeidnrgagzrjvavrsjtnz6qhqvnl...\n      JUMP \t\t\te();\\n    error ClaimNotActive...\n    tag 258\t\t\tP) {\\n            revert Claim...\n      JUMPDEST \t\t\tP) {\\n            revert Claim...\n      PUSH 2710\t\t\t;\\n   \n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH 60\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP3 \t\t\t.sender] == 0) {\\n         \n      AND \t\t\t.sender] == 0) {\\n         \n      DUP2 \t\t\t.sender] == 0) {\\n         \n      LT \t\t\t\n      ISZERO \t\t\t[msg.sender] == 0) {\\n        ...\n      PUSH [tag] 567\t\t\t[msg.sender] == 0) {\\n        ...\n      JUMPI \t\t\t[msg.sender] == 0) {\\n        ...\n      PUSH 40\t\t\tilable(uint256 quantity) {\\n  ...\n      MLOAD \t\t\tilable(uint256 quantity) {\\n  ...\n      PUSH 6F483D09\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tilable(uint256 quantity) {\\n  ...\n      MSTORE \t\t\tilable(uint256 quantity) {\\n  ...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH 60\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      PUSH 4\t\t\tilable(uint256 quantity) {\\n  ...\n      DUP3 \t\t\tilable(uint256 quantity) {\\n  ...\n      ADD \t\t\tilable(uint256 quantity) {\\n  ...\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 44\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 549\t\t\tilable(uint256 quantity) {\\n  ...\n      JUMP \t\t\t\n    tag 567\t\t\t[msg.sender] == 0) {\\n        ...\n      JUMPDEST \t\t\t[msg.sender] == 0) {\\n        ...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t 1 > END_TOKEN_ID - _p\n      AND \t\t\t 1 > END_TOKEN_ID - _p\n      PUSH [tag] 570\t\t\t() - 1 > END_TOKEN_ID - _presa...\n      JUMPI \t\t\t() - 1 > END_TOKEN_ID - _presa...\n      PUSH 40\t\t\t    ) {\\n            revert Ex...\n      MLOAD \t\t\t    ) {\\n            revert Ex...\n      PUSH 5B6CC805\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t    ) {\\n            revert Ex...\n      MSTORE \t\t\t    ) {\\n            revert Ex...\n      PUSH 0\t\t\t;\n      PUSH 4\t\t\t    ) {\\n            revert Ex...\n      DUP3 \t\t\t    ) {\\n            revert Ex...\n      ADD \t\t\t    ) {\\n            revert Ex...\n      MSTORE \t\t\ttFunds();\\n    error NonEOACal...\n      PUSH 24\t\t\tly();\\n    error In\n      ADD \t\t\tly();\\n    error In\n      PUSH [tag] 549\t\t\t    ) {\\n            revert Ex...\n      JUMP \t\t\te();\\n    error ClaimNotActive...\n    tag 570\t\t\t() - 1 > END_TOKEN_ID - _presa...\n      JUMPDEST \t\t\t() - 1 > END_TOKEN_ID - _presa...\n      POP \t\t\t\n      PUSH 40\t\t\tdsAttached(uint256 quantity) {...\n      DUP1 \t\t\tdsAttached(uint256 quantity) {...\n      MLOAD \t\t\tdsAttached(uint256 quantity) {...\n      DUP1 \t\t\tdsAttached(uint256 quantity) {...\n      DUP3 \t\t\tdsAttached(uint256 quantity) {...\n      ADD \t\t\tdsAttached(uint256 quantity) {...\n      SWAP1 \t\t\tdsAttached(uint256 quantity) {...\n      SWAP2 \t\t\tdsAttached(uint256 quantity) {...\n      MSTORE \t\t\tdsAttached(uint256 quantity) {...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\tdsAttached(uint256 quantity) {...\n      SWAP3 \t\t\tdsAttached(uint256 quantity) {...\n      AND \t\t\tdsAttached(uint256 quantity) {...\n      DUP1 \t\t\tdsAttached(uint256 quantity) {...\n      DUP4 \t\t\tdsAttached(uint256 quantity) {...\n      MSTORE \t\t\tdsAttached(uint256 quantity) {...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH 60\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\tdsAttached(uint256 quantity) {...\n      SWAP2 \t\t\tdsAttached(uint256 quantity) {...\n      AND \t\t\tdsAttached(uint256 quantity) {...\n      PUSH 20\t\t\tdsAttached(uint256 quantity) {...\n      SWAP1 \t\t\tdsAttached(uint256 quantity) {...\n      SWAP3 \t\t\tdsAttached(uint256 quantity) {...\n      ADD \t\t\tdsAttached(uint256 quantity) {...\n      DUP3 \t\t\tdsAttached(uint256 quantity) {...\n      SWAP1 \t\t\tdsAttached(uint256 quantity) {...\n      MSTORE \t\t\tdsAttached(uint256 quantity) {...\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SWAP1 \t\t\t   }\\n\\n    modifier fundsAtta...\n      SWAP2 \t\t\t   }\\n\\n    modifier fundsAtta...\n      MUL \t\t\t   }\\n\\n    modifier fundsAtta...\n      OR \t\t\t   }\\n\\n    modifier fundsAtta...\n      PUSH 9\t\t\t   }\\n\\n    modifier \n      SSTORE \t\t\t   }\\n\\n    modifier fundsAtta...\n      JUMP \t\t\tP) {\\n            revert Claim...\n    tag 284\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 574\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 574\t\t\t\n      PUSH B562E8DD\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH [tag] 307\t\t\t\n      JUMP \t\t\t\n    tag 574\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      TIMESTAMP \t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      PUSH 1\t\t\t\n      DUP9 \t\t\t\n      EQ \t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      OR \t\t\t\n      DUP2 \t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      SSTORE \t\t\t\n      DUP1 \t\t\t\n      DUP5 \t\t\t\n      MSTORE \t\t\t\n      PUSH 5\t\t\t\n      SWAP1 \t\t\t\n      SWAP3 \t\t\t\n      MSTORE \t\t\t\n      DUP3 \t\t\t\n      KECCAK256 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH 10000000000000001\t\t\t\n      DUP7 \t\t\t\n      MUL \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 581\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 581\t\t\t\n      PUSH 2E0763\t\t\t\n      PUSH E8\t\t\t\n      SHL \t\t\t\n      PUSH [tag] 307\t\t\t\n      JUMP \t\t\t\n    tag 581\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n    tag 585\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      PUSH 0\t\t\t\n      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      LOG4 \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      PUSH 1\t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 585\t\t\t\n      JUMPI \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 292\t\t\tfunction _startTokenId() inter...\n      JUMPDEST \t\t\tfunction _startTokenId() inter...\n      PUSH 0\t\t\tuint256\n      PUSH [tag] 590\t\t\tstartTokenId()\n      PUSH 28F75032\t\t\t ERC2981,\\n    Ownable\\n{\\n   ...\n      SLOAD \t\t\te,\\n    ERC2981,\\n    Ownable\\...\n      SWAP1 \t\t\te,\\n    ERC2981,\\n    Ownable\\...\n      JUMP \t\t\tteleburning to Bitcoin\\n */\\nc...\n    tag 590\t\t\tstartTokenId()\n      JUMPDEST \t\t\tstartTokenId()\n      SWAP1 \t\t\treturn startTokenId()\n      POP \t\t\treturn startTokenId()\n      SWAP1 \t\t\tfunction _startTokenId() inter...\n      JUMP \t\t\tfunction _startTokenId() inter...\n    tag 304\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 592\t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP \t\t\t\n    tag 592\t\t\t\n      JUMPDEST \t\t\t\n      GT \t\t\t\n      PUSH [tag] 519\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      SLOAD \t\t\t\n      DUP3 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 519\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n    tag 599\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP2 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 600\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 601\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 602\t\t\t\n      JUMP \t\t\t\n    tag 601\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 599\t\t\t\n      JUMP \t\t\t\n    tag 600\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      AND \t\t\t\n      ISZERO \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 307\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 310\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 605\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 140\t\t\t\n      JUMP \t\t\t\n    tag 605\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 606\t\t\t\n      JUMPI \t\t\t\n      POP \t\t\t\n      CALLER \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      EQ \t\t\t\n      ISZERO \t\t\t\n    tag 606\t\t\t\n      JUMPDEST \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 612\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 609\t\t\t\n      DUP2 \t\t\t\n      CALLER \t\t\t\n      PUSH [tag] 230\t\t\t\n      JUMP \t\t\t\n    tag 609\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 612\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 612\t\t\t\n      PUSH 67D9DCA1\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      PUSH [tag] 307\t\t\t\n      JUMP \t\t\t\n    tag 612\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 6\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      KECCAK256 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP9 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n      DUP3 \t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SWAP3 \t\t\t\n      SSTORE \t\t\t\n      SWAP2 \t\t\t\n      MLOAD \t\t\t\n      DUP7 \t\t\t\n      SWAP4 \t\t\t\n      SWAP2 \t\t\t\n      DUP6 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925\t\t\t\n      SWAP2 \t\t\t\n      LOG4 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 318\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 615\t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP \t\t\t\n    tag 615\t\t\t\n      JUMPDEST \t\t\t\n      GT \t\t\t\n      PUSH [tag] 631\t\t\t\n      JUMPI \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      SUB \t\t\t\n      PUSH [tag] 622\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      SLOAD \t\t\t\n      DUP3 \t\t\t\n      LT \t\t\t\n      PUSH [tag] 624\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 624\t\t\t\n      PUSH 6F96CDA1\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      PUSH [tag] 307\t\t\t\n      JUMP \t\t\t\n    tag 624\t\t\t\n      JUMPDEST \t\t\t\n    tag 625\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 625\t\t\t\n      JUMPI \t\t\t\n      PUSH 1\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SUB \t\t\t\n      PUSH [tag] 629\t\t\t\n      JUMPI \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 629\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 630\t\t\t\n      PUSH 6F96CDA1\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      PUSH [tag] 307\t\t\t\n      JUMP \t\t\t\n    tag 630\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 625\t\t\t\n      JUMP \t\t\t\n    tag 622\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SUB \t\t\t\n      PUSH [tag] 631\t\t\t\n      JUMPI \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 631\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 519\t\t\t\n      PUSH 6F96CDA1\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      PUSH [tag] 307\t\t\t\n      JUMP \t\t\t\n    tag 447\t\t\ttive();\\n        }\\n        _;...\n      JUMPDEST \t\t\ttive();\\n        }\\n        _;...\n      PUSH B\t\t\t  bloc\n      DUP1 \t\t\t  bloc\n      SLOAD \t\t\t  bloc\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\tp < WHITELIST_STA\n      DUP2 \t\t\tp < WHITELIST_STA\n      AND \t\t\tp < WHITELIST_STA\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      DUP4 \t\t\tp < WHITELIST_STA\n      AND \t\t\tp < WHITELIST_STA\n      DUP2 \t\t\tp < WHITELIST_STA\n      OR \t\t\tp < WHITELIST_STA\n      SWAP1 \t\t\tp < WHITELIST_STA\n      SWAP4 \t\t\tp < WHITELIST_STA\n      SSTORE \t\t\tp < WHITELIST_STA\n      PUSH 40\t\t\t\\n            block.timestamp ...\n      MLOAD \t\t\t\\n            block.timestamp ...\n      SWAP2 \t\t\t  bloc\n      AND \t\t\t  bloc\n      SWAP2 \t\t\t  bloc\n      SWAP1 \t\t\tp < WHITELIST_STA\n      DUP3 \t\t\t  bloc\n      SWAP1 \t\t\t  bloc\n      PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\t\t\t\\n            block.timestamp ...\n      SWAP1 \t\t\t\\n            block.timestamp ...\n      PUSH 0\t\t\t    if (\\n       \n      SWAP1 \t\t\t    if (\\n       \n      LOG3 \t\t\t\\n            block.timestamp ...\n      POP \t\t\te() {\\n        if (\\n         ...\n      POP \t\t\ttive();\\n        }\\n        _;...\n      JUMP \t\t\ttive();\\n        }\\n        _;...\n    tag 456\t\t\t        Ownable(msg.sender)\\n ...\n      JUMPDEST \t\t\t        Ownable(msg.sender)\\n ...\n      PUSH 60\t\t\tuantity\\n    )\\n        ext\n      DUP2 \t\t\t pub\n      DUP4 \t\t\td\\n   \n      LT \t\t\td\\n        pub\n      PUSH [tag] 647\t\t\tabled\\n        publicMintActiv...\n      JUMPI \t\t\tabled\\n        publicMintActiv...\n      PUSH [tag] 647\t\t\tcMintActive\\n        fundsAtta...\n      PUSH 1960CCAD\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      PUSH [tag] 307\t\t\tcMintAc\n      JUMP \t\t\tcMintActive\\n        fundsAtta...\n    tag 647\t\t\tcMintActive\\n        fundsAtta...\n      JUMPDEST \t\t\tcMintActive\\n        fundsAtta...\n      PUSH [tag] 648\t\t\t    onlyEOA\\n   \n      PUSH [tag] 292\t\t\t    onlyEOA\\n \n      JUMP \t\t\t    onlyEOA\\n   \n    tag 648\t\t\t    onlyEOA\\n   \n      JUMPDEST \t\t\t    onlyEOA\\n   \n      DUP4 \t\t\tty)\\n \n      LT \t\t\tty)\\n        onlyEOA\\n   \n      ISZERO \t\t\tantity)\\n        onlyEOA\\n    ...\n      PUSH [tag] 649\t\t\tantity)\\n        onlyEOA\\n    ...\n      JUMPI \t\t\tantity)\\n        onlyEOA\\n    ...\n      PUSH [tag] 650\t\t\t _mintedPerWall\n      PUSH [tag] 292\t\t\t _mintedPerWa\n      JUMP \t\t\t _mintedPerWall\n    tag 650\t\t\t _mintedPerWall\n      JUMPDEST \t\t\t _mintedPerWall\n      SWAP3 \t\t\t\\n        _mintedPerWall\n      POP \t\t\t\\n        _mintedPerWall\n    tag 649\t\t\tantity)\\n        onlyEOA\\n    ...\n      JUMPDEST \t\t\tantity)\\n        onlyEOA\\n    ...\n      PUSH 0\t\t\t += quantity;\\n     \n      SLOAD \t\t\tuint256 quant\n      DUP1 \t\t\tuint256 quant\n      DUP1 \t\t\tndsAttached(quant\n      DUP5 \t\t\tndsAttached(quant\n      LT \t\t\tndsAttached(quant\n      PUSH [tag] 655\t\t\t  fundsAttached(quantity)\\n   ...\n      JUMPI \t\t\t  fundsAttached(quantity)\\n   ...\n      DUP1 \t\t\t    obeys\n      SWAP4 \t\t\ty)\\n        obeys\n      POP \t\t\ty)\\n        obeys\n    tag 655\t\t\t  fundsAttached(quantity)\\n   ...\n      JUMPDEST \t\t\t  fundsAttached(quantity)\\n   ...\n      PUSH 0\t\t\ty)\\n        gloomin(gloome\n      PUSH [tag] 656\t\t\tsh_)\\n        onl\n      DUP8 \t\t\t   on\n      PUSH [tag] 146\t\t\tsh_)\\n    \n      JUMP \t\t\tsh_)\\n        onl\n    tag 656\t\t\tsh_)\\n        onl\n      JUMPDEST \t\t\tsh_)\\n        onl\n      SWAP1 \t\t\ty)\\n        gloomin(gloomerHas...\n      POP \t\t\ty)\\n        gloomin(gloomerHas...\n      DUP5 \t\t\tmint\n      DUP7 \t\t\t     \n      LT \t\t\t        _mint\n      PUSH [tag] 657\t\t\t  }\\n        _mintedPerWallet[...\n      JUMPI \t\t\t  }\\n        _mintedPerWallet[...\n      POP \t\t\t\n      PUSH 0\t\t\t]\n    tag 657\t\t\t  }\\n        _mintedPerWallet[...\n      JUMPDEST \t\t\t  }\\n        _mintedPerWallet[...\n      DUP1 \t\t\tlist(msg.sender, quant\n      ISZERO \t\t\tlist(msg.sender, quant\n      PUSH [tag] 658\t\t\thitelist(msg.sender, quantity)...\n      JUMPI \t\t\thitelist(msg.sender, quantity)...\n      DUP1 \t\t\th_\\n    )\\n        \n      DUP7 \t\t\tloome\n      DUP7 \t\t\ttes3\n      SUB \t\t\ttes32 gloome\n      GT \t\t\ttes32 gloomerHash_\\n    )\\n   ...\n      PUSH [tag] 659\t\t\t  bytes32 gloomerHash_\\n    )\\...\n      JUMPI \t\t\t  bytes32 gloomerHash_\\n    )\\...\n      POP \t\t\t\n      DUP5 \t\t\tle\\n        d\n      DUP5 \t\t\tle\\n        d\n      SUB \t\t\tle\\n        d\n    tag 659\t\t\t  bytes32 gloomerHash_\\n    )\\...\n      JUMPDEST \t\t\t  bytes32 gloomerHash_\\n    )\\...\n      PUSH 40\t\t\tyEOA\n      DUP1 \t\t\t   onlyEOA\\n\n      MLOAD \t\t\t   onlyEOA\\n\n      PUSH 1\t\t\tn\n      DUP4 \t\t\tPresale(msg.sender, quant\n      ADD \t\t\tPresale(msg.sender, quant\n      PUSH 5\t\t\tt\n      SHL \t\t\tegisterPresale(msg.sender, qua...\n      DUP2 \t\t\t        emit RegisterPresale(m...\n      ADD \t\t\t        emit RegisterPresale(m...\n      SWAP2 \t\t\ter, quantity);\\n\n      DUP3 \t\t\ter, quantity);\\n\n      SWAP1 \t\t\ter, quantity);\\n\n      MSTORE \t\t\ter, quantity);\\n\n      SWAP5 \t\t\t   onlyEOA\\n\n      POP \t\t\t\n      PUSH 0\t\t\t presaleA\n      PUSH [tag] 660\t\t\t\\n        uint256 quantity \n      DUP9 \t\t\tntity\n      PUSH [tag] 211\t\t\t\\n        uint256 qu\n      JUMP \t\t\t\\n        uint256 quantity \n    tag 660\t\t\t\\n        uint256 quantity \n      JUMPDEST \t\t\t\\n        uint256 quantity \n      SWAP1 \t\t\tmsg.sender])\\n        onlyEOA\\...\n      POP \t\t\tmsg.sender])\\n        onlyEOA\\...\n      PUSH 0\t\t\tonsByWallet[msg.sender];\\n\n      DUP2 \t\t\tation(\\n  \n      PUSH 40\t\t\tation(\\n        a\n      ADD \t\t\tation(\\n        a\n      MLOAD \t\t\tation(\\n        a\n      PUSH [tag] 661\t\t\tAllocation(\\n        address w...\n      JUMPI \t\t\tAllocation(\\n        address w...\n      POP \t\t\t\n      DUP1 \t\t\tblic view retu\n      MLOAD \t\t\tblic view retu\n    tag 661\t\t\tAllocation(\\n        address w...\n      JUMPDEST \t\t\tAllocation(\\n        address w...\n      PUSH 0\t\t\t      return _presa\n    tag 662\t\t\tI()\\n        internal\\n       ...\n      JUMPDEST \t\t\tI()\\n        internal\\n       ...\n      PUSH [tag] 671\t\t\t  string memory met\n      DUP11 \t\t\try me\n      PUSH [tag] 517\t\t\t  string mem\n      JUMP \t\t\t  string memory met\n    tag 671\t\t\t  string memory met\n      JUMPDEST \t\t\t  string memory met\n      SWAP3 \t\t\tRI();\\n        string memory m...\n      POP \t\t\tRI();\\n        string memory m...\n      PUSH 40\t\t\tbase\n      DUP4 \t\t\tcodePacke\n      ADD \t\t\ti.encodePacked(baseU\n      MLOAD \t\t\t    abi.encodePacked(baseUR\n      PUSH 0\t\t\t\\n\n      DUP2 \t\t\t: \"\";\\n    }\\n\\n    function s...\n      EQ \t\t\t: \"\";\\n    }\\n\\n    function s...\n      PUSH [tag] 673\t\t\t: \"\";\\n    }\\n\\n    function s...\n      JUMPI \t\t\t: \"\";\\n    }\\n\\n    function s...\n      PUSH 0\t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 675\t\t\t           abi.encodePacked(ba...\n      JUMP \t\t\t           abi.encodePacked(ba...\n    tag 673\t\t\t: \"\";\\n    }\\n\\n    function s...\n      JUMPDEST \t\t\t: \"\";\\n    }\\n\\n    function s...\n      DUP4 \t\t\ts receive\n      MLOAD \t\t\taddress receiver\n      ISZERO \t\t\t   address receiver,\\n        ...\n      PUSH [tag] 674\t\t\t   address receiver,\\n        ...\n      JUMPI \t\t\t   address receiver,\\n        ...\n      DUP4 \t\t\t _setDefa\n      MLOAD \t\t\t       _setDefau\n      SWAP3 \t\t\t public onlyOwner {\\n        _...\n      POP \t\t\t public onlyOwner {\\n        _...\n    tag 674\t\t\t   address receiver,\\n        ...\n      JUMPDEST \t\t\t   address receiver,\\n        ...\n      DUP12 \t\t\tuncti\n      DUP4 \t\t\tHash_;\\n    }\\n\\n   \n      XOR \t\t\tomerHash_;\\n    }\\n\\n    funct...\n      PUSH 60\t\t\t g\n      SHL \t\t\tsh = gloomerHash_;\\n    }\\n\\n ...\n      PUSH [tag] 675\t\t\t gloomerHash = gloomerHash_;\\n...\n      JUMPI \t\t\t gloomerHash = gloomerHash_;\\n...\n      PUSH 1\t\t\ta\n      DUP3 \t\t\ter).transfe\n      ADD \t\t\tsender).transfer(ad\n      SWAP2 \t\t\t   payable(msg.sender).transfe...\n      POP \t\t\t   payable(msg.sender).transfe...\n      DUP11 \t\t\t() ex\n      DUP3 \t\t\t{}\\n\\n    rec\n      PUSH 5\t\t\tl\n      SHL \t\t\tayable {}\\n\\n    rece\n      DUP11 \t\t\texternal\n      ADD \t\t\tk() external payable {}\\n\\n   ...\n      MSTORE \t\t\tfallback() external payable {}...\n    tag 675\t\t\t gloomerHash = gloomerHash_;\\n...\n      JUMPDEST \t\t\t gloomerHash = gloomerHash_;\\n...\n      POP \t\t\t           abi.encodePacked(ba...\n      PUSH 1\t\t\t\n      DUP11 \t\t\t\n      ADD \t\t\t\n      SWAP10 \t\t\t\n      POP \t\t\t\n      DUP4 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP9 \t\t\t\n      DUP11 \t\t\t\n      EQ \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 676\t\t\t\n      JUMPI \t\t\t\n      POP \t\t\t\n      DUP5 \t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n    tag 676\t\t\t\n      JUMPDEST \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 662\t\t\tI()\\n        internal\\n       ...\n      JUMPI \t\t\tI()\\n        internal\\n       ...\n      DUP8 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n    tag 658\t\t\thitelist(msg.sender, quantity)...\n      JUMPDEST \t\t\thitelist(msg.sender, quantity)...\n      POP \t\t\t  payable\\n        dropEnabled...\n      POP \t\t\t  payable\\n        dropEnabled...\n      POP \t\t\t  payable\\n        dropEnabled...\n      SWAP4 \t\t\t        Ownable(msg.sender)\\n ...\n      SWAP3 \t\t\t        Ownable(msg.sender)\\n ...\n      POP \t\t\t        Ownable(msg.sender)\\n ...\n      POP \t\t\t        Ownable(msg.sender)\\n ...\n      POP \t\t\t        Ownable(msg.sender)\\n ...\n      JUMP \t\t\t        Ownable(msg.sender)\\n ...\n    tag 506\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH A85BD01\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP6 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 150B7A02\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 679\t\t\t\n      SWAP1 \t\t\t\n      CALLER \t\t\t\n      SWAP1 \t\t\t\n      DUP10 \t\t\t\n      SWAP1 \t\t\t\n      DUP9 \t\t\t\n      SWAP1 \t\t\t\n      DUP9 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 680\t\t\t\n      JUMP \t\t\t\n    tag 679\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 681\t\t\t\n      JUMPI \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 1F\t\t\t\n      RETURNDATASIZE \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      SWAP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 682\t\t\t\n      SWAP2 \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 683\t\t\t\n      JUMP \t\t\t\n    tag 682\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n    tag 681\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 684\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      DUP1 \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 689\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 3F\t\t\t\n      RETURNDATASIZE \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      RETURNDATASIZE \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      RETURNDATACOPY \t\t\t\n      PUSH [tag] 688\t\t\t\n      JUMP \t\t\t\n    tag 689\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 60\t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n    tag 688\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 0\t\t\t\n      SUB \t\t\t\n      PUSH [tag] 691\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 691\t\t\t\n      PUSH 68D2BF6B\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      PUSH [tag] 307\t\t\t\n      JUMP \t\t\t\n    tag 691\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      DUP2 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      REVERT \t\t\t\n    tag 684\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH A85BD01\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      EQ \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP5 \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 517\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 80\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 60\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 251\t\t\t\n      SWAP1 \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 80\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH A0\t\t\tto,\n      DUP4 \t\t\t\n      SWAP1 \t\t\t\n      SHR \t\t\t\n      PUSH FFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      ISZERO \t\t\t\n      ISZERO \t\t\t\n      SWAP2 \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH E8\t\t\t  m\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      SHR \t\t\t\n      PUSH 60\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 531\t\t\tfunction _baseURI()\\n        i...\n      JUMPDEST \t\t\tfunction _baseURI()\\n        i...\n      PUSH 60\t\t\tstring memory\n      PUSH 13\t\t\t_baseTokenURI\n      DUP1 \t\t\treturn _baseTokenURI\n      SLOAD \t\t\treturn _baseTokenURI\n      PUSH [tag] 296\t\t\treturn _baseTokenURI\n      SWAP1 \t\t\treturn _baseTokenURI\n      PUSH [tag] 297\t\t\treturn _baseTokenURI\n      JUMP \t\t\treturn _baseTokenURI\n    tag 537\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 60\t\t\t\n      PUSH A0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n    tag 705\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      PUSH A\t\t\t\n      DUP2 \t\t\t\n      MOD \t\t\t\n      PUSH 30\t\t\t\n      ADD \t\t\t\n      DUP4 \t\t\t\n      MSTORE8 \t\t\t\n      PUSH A\t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 705\t\t\t\n      JUMPI \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SUB \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 716\t\t\te-Identifier: MIT\\npragma soli...\n      JUMPDEST \t\t\te-Identifier: MIT\\npragma soli...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      DUP2 \t\t\tA.sol\";\\nimport {IERC721A} fro...\n      AND \t\t\tA.sol\";\\nimport {IERC721A} fro...\n      DUP2 \t\t\t \"./ERC721A.sol\";\\nimport {IER...\n      EQ \t\t\t \"./ERC721A.sol\";\\nimport {IER...\n      PUSH [tag] 425\t\t\t721A} from \"./ERC721A.sol\";\\ni...\n      JUMPI \t\t\t721A} from \"./ERC721A.sol\";\\ni...\n      PUSH 0\t\t\t;\n      DUP1 \t\t\to\n      REVERT \t\t\tC721A.sol\";\\n\n    tag 58\t\t\t1AQueryable} from \"./ERC721AQu...\n      JUMPDEST \t\t\t1AQueryable} from \"./ERC721AQu...\n      PUSH 0\t\t\tokenId\n      PUSH 20\t\t\t {\n      DUP3 \t\t\tsol\";\\nimp\n      DUP5 \t\t\tIdHelpe\n      SUB \t\t\tokenIdHelper.sol\";\\nimpo\n      SLT \t\t\tartTokenIdHelper.sol\";\\nimport...\n      ISZERO \t\t\t/StartTokenIdHelper.sol\";\\nimp...\n      PUSH [tag] 730\t\t\t/StartTokenIdHelper.sol\";\\nimp...\n      JUMPI \t\t\t/StartTokenIdHelper.sol\";\\nimp...\n      PUSH 0\t\t\t\"\n      DUP1 \t\t\to\n      REVERT \t\t\tble} from \"@\n    tag 730\t\t\t/StartTokenIdHelper.sol\";\\nimp...\n      JUMPDEST \t\t\t/StartTokenIdHelper.sol\";\\nimp...\n      DUP2 \t\t\t.sol\";\\nim\n      CALLDATALOAD \t\t\tccess/Ownable.sol\";\\nimp\n      PUSH [tag] 731\t\t\t981} from \"@openzeppelin/contr\n      DUP2 \t\t\t/cont\n      PUSH [tag] 716\t\t\t981} from \"@openzeppelin/contr\n      JUMP \t\t\t981} from \"@openzeppelin/contr\n    tag 731\t\t\t981} from \"@openzeppelin/contr\n      JUMPDEST \t\t\t981} from \"@openzeppelin/contr\n      SWAP4 \t\t\tRC298\n      SWAP3 \t\t\t1AQueryable} from \"./ERC721AQu...\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t1AQueryable} from \"./ERC721AQu...\n    tag 717\t\t\trs is a 10k PFP collection lau...\n      JUMPDEST \t\t\trs is a 10k PFP collection lau...\n      DUP1 \t\t\tm with teleburning t\n      CALLDATALOAD \t\t\tm with teleburning t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\trs is\\n    StartTokenIdHelper,...\n      AND \t\t\trs is\\n    StartTokenIdHelper,...\n      DUP2 \t\t\tact Gloomers is\\n    StartToke...\n      EQ \t\t\tact Gloomers is\\n    StartToke...\n      PUSH [tag] 519\t\t\t\\n */\\ncontract Gloomers is\\n ...\n      JUMPI \t\t\t\\n */\\ncontract Gloomers is\\n ...\n      PUSH 0\t\t\t \n      DUP1 \t\t\t \n      REVERT \t\t\tC721A,\\n    E\n    tag 65\t\t\tle,\\n    ERC2981,\\n    Ownable...\n      JUMPDEST \t\t\tle,\\n    ERC2981,\\n    Ownable...\n      PUSH 0\t\t\tKEN_ID\n      DUP1 \t\t\t 3334;\n      PUSH 40\t\t\t6;\n      DUP4 \t\t\tKEN_ID = \n      DUP6 \t\t\tnt END_\n      SUB \t\t\tnstant END_TOKEN_ID = 6\n      SLT \t\t\tc constant END_TOKEN_ID = 6666...\n      ISZERO \t\t\tblic constant END_TOKEN_ID = 6...\n      PUSH [tag] 736\t\t\tblic constant END_TOKEN_ID = 6...\n      JUMPI \t\t\tblic constant END_TOKEN_ID = 6...\n      PUSH 0\t\t\tu\n      DUP1 \t\t\t6\n      REVERT \t\t\t uint256 pub\n    tag 736\t\t\tblic constant END_TOKEN_ID = 6...\n      JUMPDEST \t\t\tblic constant END_TOKEN_ID = 6...\n      PUSH [tag] 737\t\t\tR_TOKEN = 0.03 ether;\\n    uin\n      DUP4 \t\t\tr;\\n    ui\n      PUSH [tag] 717\t\t\tR_TOKEN = 0.03 ether;\\n    uin\n      JUMP \t\t\tR_TOKEN = 0.03 ether;\\n    uin\n    tag 737\t\t\tR_TOKEN = 0.03 ether;\\n    uin\n      JUMPDEST \t\t\tR_TOKEN = 0.03 ether;\\n    uin\n      SWAP2 \t\t\tt PRICE_PER_TOKEN = 0.03 ether...\n      POP \t\t\tt PRICE_PER_TOKEN = 0.03 ether...\n      PUSH 20\t\t\tby\n      DUP4 \t\t\tT = 3;\\n  \n      ADD \t\t\tALLET = 3;\\n    byt\n      CALLDATALOAD \t\t\tAX_MINT_PER_WALLET = 3;\\n    b...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH 60\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\tSH =\\n\n      AND \t\t\tE_HASH =\\n        0x5158cf3ac2...\n      DUP2 \t\t\tOVENA\n      EQ \t\t\t PROVENANCE_HASH =\\n        0x...\n      PUSH [tag] 738\t\t\tc constant PROVENANCE_HASH =\\n...\n      JUMPI \t\t\tc constant PROVENANCE_HASH =\\n...\n      PUSH 0\t\t\tb\n      DUP1 \t\t\ta\n      REVERT \t\t\tc7d1e7aa58b7\n    tag 738\t\t\tc constant PROVENANCE_HASH =\\n...\n      JUMPDEST \t\t\tc constant PROVENANCE_HASH =\\n...\n      DUP1 \t\t\te095e\n      SWAP2 \t\t\tbf643e0003e095e\n      POP \t\t\tbf643e0003e095e\n      POP \t\t\tbf643e0003e095e\n      SWAP3 \t\t\tle,\\n    ERC2981,\\n    Ownable...\n      POP \t\t\tle,\\n    ERC2981,\\n    Ownable...\n      SWAP3 \t\t\tle,\\n    ERC2981,\\n    Ownable...\n      SWAP1 \t\t\tle,\\n    ERC2981,\\n    Ownable...\n      POP \t\t\tle,\\n    ERC2981,\\n    Ownable...\n      JUMP \t\t\tle,\\n    ERC2981,\\n    Ownable...\n    tag 73\t\t\tt256 public constant WHITELIST...\n      JUMPDEST \t\t\tt256 public constant WHITELIST...\n      PUSH 0\t\t\t 04 20\n      DUP1 \t\t\t 16:00\n      PUSH 20\t\t\t_T\n      DUP4 \t\t\t PUBLIC_M\n      DUP6 \t\t\t consta\n      SUB \t\t\tblic constant PUBLIC_MI\n      SLT \t\t\t6 public constant PUBLIC_MINT_...\n      ISZERO \t\t\tt256 public constant PUBLIC_MI...\n      PUSH [tag] 740\t\t\tt256 public constant PUBLIC_MI...\n      JUMPI \t\t\tt256 public constant PUBLIC_MI...\n      PUSH 0\t\t\t \n      DUP1 \t\t\t \n      REVERT \t\t\tTAMP =\\n     \n    tag 740\t\t\tt256 public constant PUBLIC_MI...\n      JUMPDEST \t\t\tt256 public constant PUBLIC_MI...\n      DUP3 \t\t\t;\\n\\n    en\n      CALLDATALOAD \t\t\tAMP + 3 hours;\\n\\n    enu\n      PUSH FFFFFFFFFFFFFFFF\t\t\t    DISABLED,\\n    \n      DUP1 \t\t\tIT\n      DUP3 \t\t\t      \n      GT \t\t\t\\n        WHITE\n      ISZERO \t\t\tLE,\\n        WHITELIST,\\n     ...\n      PUSH [tag] 741\t\t\tLE,\\n        WHITELIST,\\n     ...\n      JUMPI \t\t\tLE,\\n        WHITELIST,\\n     ...\n      PUSH 0\t\t\t \n      DUP1 \t\t\t \n      REVERT \t\t\tT,\\n        P\n    tag 741\t\t\tLE,\\n        WHITELIST,\\n     ...\n      JUMPDEST \t\t\tLE,\\n        WHITELIST,\\n     ...\n      DUP2 \t\t\tropSta\n      DUP6 \t\t\tus public\n      ADD \t\t\tStatus public dropStat\n      SWAP2 \t\t\t\\n\\n    DropStatus public drop...\n      POP \t\t\t\\n\\n    DropStatus public drop...\n      DUP6 \t\t\t(addres\n      PUSH 1F\t\t\tmapp\n      DUP4 \t\t\t  \n      ADD \t\t\tD;\\n\\n    mappi\n      SLT \t\t\tABLED;\\n\\n    mapping(address\n      PUSH [tag] 742\t\t\tStatus.DISABLED;\\n\\n    mappin...\n      JUMPI \t\t\tStatus.DISABLED;\\n\\n    mappin...\n      PUSH 0\t\t\tr\n      DUP1 \t\t\t)\n      REVERT \t\t\tuint256) pri\n    tag 742\t\t\tStatus.DISABLED;\\n\\n    mappin...\n      JUMPDEST \t\t\tStatus.DISABLED;\\n\\n    mappin...\n      DUP2 \t\t\tre\n      CALLDATALOAD \t\t\t  mapping(addres\n      DUP2 \t\t\tpr\n      DUP2 \t\t\trivate\n      GT \t\t\t) private _pre\n      ISZERO \t\t\t256) private _presaleAllocatio...\n      PUSH [tag] 743\t\t\t256) private _presaleAllocatio...\n      JUMPI \t\t\t256) private _presaleAllocatio...\n      PUSH 0\t\t\tn\n      DUP1 \t\t\tt\n      REVERT \t\t\teAllocations\n    tag 743\t\t\t256) private _presaleAllocatio...\n      JUMPDEST \t\t\t256) private _presaleAllocatio...\n      DUP7 \t\t\trivate \n      PUSH 20\t\t\tss\n      DUP3 \t\t\t => ad\n      DUP6 \t\t\tt2\n      ADD \t\t\t(uint256 => add\n      ADD \t\t\tping(uint256 => address)\n      GT \t\t\tmapping(uint256 => address) pr...\n      ISZERO \t\t\t   mapping(uint256 => address)...\n      PUSH [tag] 744\t\t\t   mapping(uint256 => address)...\n      JUMPI \t\t\t   mapping(uint256 => address)...\n      PUSH 0\t\t\ts\n      DUP1 \t\t\tl\n      REVERT \t\t\tsaleWalletsB\n    tag 744\t\t\t   mapping(uint256 => address)...\n      JUMPDEST \t\t\t   mapping(uint256 => address)...\n      PUSH 20\t\t\tsa\n      SWAP3 \t\t\tate _presal\n      SWAP1 \t\t\tate _presal\n      SWAP3 \t\t\tate _presal\n      ADD \t\t\tate _presal\n      SWAP7 \t\t\tate _presal\n      SWAP2 \t\t\t6 priv\n      SWAP6 \t\t\t6 priv\n      POP \t\t\t\n      SWAP1 \t\t\tt256 public constant WHITELIST...\n      SWAP4 \t\t\tt256 public constant WHITELIST...\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\tt256 public constant WHITELIST...\n    tag 718\t\t\teSupplyOffset;\\n    bytes32 pr...\n      JUMPDEST \t\t\teSupplyOffset;\\n    bytes32 pr...\n      PUSH 0\t\t\tboo\n      DUP2 \t\t\ting p\n      MLOAD \t\t\t   string pr\n      DUP1 \t\t\t\\n     \n      DUP5 \t\t\tURI\n      MSTORE \t\t\tseTokenURI =\\n      \n      DUP1 \t\t\tzrjvav\n      PUSH 20\t\t\tidnr\n      DUP5 \t\t\t/bafy\n      ADD \t\t\tipfs/bafybeidnrg\n      PUSH 20\t\t\ten.x\n      DUP7 \t\t\tomt\n      ADD \t\t\t.gloomtoken.xy\n      MCOPY \t\t\t//ipfs.gloomtoken.xyz/ipfs/baf...\n      PUSH 0\t\t\t \n      PUSH 20\t\t\ty\";\\n\n      DUP3 \t\t\t6ylsxw\n      DUP7 \t\t\tgkj\n      ADD \t\t\t35gfgkj236ylsxwp\n      ADD \t\t\tvh5q35gfgkj236ylsxwpmsy\";\\n\\n\n      MSTORE \t\t\tvnlbkz3vh5q35gfgkj236ylsxwpmsy...\n      PUSH 20\t\t\tkenI\n      PUSH 1F\t\t\t6 \n      NOT \t\t\tnt256 _\n      PUSH 1F\t\t\td,\n      DUP4 \t\t\tomToke\n      ADD \t\t\t _fromTokenId, \n      AND \t\t\tt256 _fromTokenId, uint256 _t\n      DUP6 \t\t\te(u\n      ADD \t\t\tpdate(uint256 _fromTokenId, ui...\n      ADD \t\t\tataUpdate(uint256 _fromTokenId...\n      SWAP2 \t\t\tchMetadataUpdate(uint256 _from...\n      POP \t\t\tchMetadataUpdate(uint256 _from...\n      POP \t\t\tchMetadataUpdate(uint256 _from...\n      SWAP3 \t\t\teSupplyOffset;\\n    bytes32 pr...\n      SWAP2 \t\t\teSupplyOffset;\\n    bytes32 pr...\n      POP \t\t\teSupplyOffset;\\n    bytes32 pr...\n      POP \t\t\teSupplyOffset;\\n    bytes32 pr...\n      JUMP \t\t\teSupplyOffset;\\n    bytes32 pr...\n    tag 79\t\t\tt GloomersMint(address indexed...\n      JUMPDEST \t\t\tt GloomersMint(address indexed...\n      PUSH 20\t\t\tdr\n      DUP2 \t\t\trPresale(\n      MSTORE \t\t\tRegisterPresale(addre\n      PUSH 0\t\t\tanti\n      PUSH [tag] 731\t\t\tint256 _quantity);\\n    event ...\n      PUSH 20\t\t\tde\n      DUP4 \t\t\t(address \n      ADD \t\t\tsale(address index\n      DUP5 \t\t\tClaimP\n      PUSH [tag] 718\t\t\tint256 _quantity);\\n    event ...\n      JUMP \t\t\tint256 _quantity);\\n    event ...\n    tag 83\t\t\t256 _quantity);\\n    event New...\n      JUMPDEST \t\t\t256 _quantity);\\n    event New...\n      PUSH 0\t\t\ttus);\\n\n      PUSH 20\t\t\tin\n      DUP3 \t\t\trror Publ\n      DUP5 \t\t\t();\\n   \n      SUB \t\t\tbled();\\n    error Publi\n      SLT \t\t\tDisabled();\\n    error PublicM...\n      ISZERO \t\t\tingDisabled();\\n    error Publ...\n      PUSH [tag] 749\t\t\tingDisabled();\\n    error Publ...\n      JUMPI \t\t\tingDisabled();\\n    error Publ...\n      PUSH 0\t\t\t \n      DUP1 \t\t\t)\n      REVERT \t\t\tActive();\\n  \n    tag 749\t\t\tingDisabled();\\n    error Publ...\n      JUMPDEST \t\t\tingDisabled();\\n    error Publ...\n      POP \t\t\t\n      CALLDATALOAD \t\t\tctive();\\n    error Pres\n      SWAP2 \t\t\tctive();\\n    error Pres\n      SWAP1 \t\t\t256 _quantity);\\n    event New...\n      POP \t\t\t\n      JUMP \t\t\t256 _quantity);\\n    event New...\n    tag 89\t\t\t) {\\n        if (dropStatus ==...\n      JUMPDEST \t\t\t) {\\n        if (dropStatus ==...\n      PUSH 0\t\t\tert Mi\n      DUP1 \t\t\tingDis\n      PUSH 40\t\t\ter\n      DUP4 \t\t\t\\n\\n    mod\n      DUP6 \t\t\t _;\\n   \n      SUB \t\t\t     _;\\n    }\\n\\n    modi\n      SLT \t\t\t\\n        _;\\n    }\\n\\n    mod...\n      ISZERO \t\t\t  }\\n        _;\\n    }\\n\\n    ...\n      PUSH [tag] 752\t\t\t  }\\n        _;\\n    }\\n\\n    ...\n      JUMPI \t\t\t  }\\n        _;\\n    }\\n\\n    ...\n      PUSH 0\t\t\t(\n      DUP1 \t\t\ti\n      REVERT \t\t\tsaleActive()\n    tag 752\t\t\t  }\\n        _;\\n    }\\n\\n    ...\n      JUMPDEST \t\t\t  }\\n        _;\\n    }\\n\\n    ...\n      PUSH [tag] 753\t\t\ttimestamp > WHITELIST_START_T\n      DUP4 \t\t\tST_START_\n      PUSH [tag] 717\t\t\ttimestamp > WHITELIST_START_T\n      JUMP \t\t\ttimestamp > WHITELIST_START_T\n    tag 753\t\t\ttimestamp > WHITELIST_START_T\n      JUMPDEST \t\t\ttimestamp > WHITELIST_START_T\n      SWAP5 \t\t\tif (block.timestamp > WHITELIS...\n      PUSH 20\t\t\t()\n      SWAP4 \t\t\tresaleNotActive();\n      SWAP1 \t\t\tresaleNotActive();\n      SWAP4 \t\t\tresaleNotActive();\n      ADD \t\t\tresaleNotActive();\n      CALLDATALOAD \t\t\t     revert PresaleNotActive()...\n      SWAP4 \t\t\t     revert PresaleNotActive()...\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t) {\\n        if (dropStatus ==...\n    tag 98\t\t\t) {\\n            revert Whitel...\n      JUMPDEST \t\t\t) {\\n            revert Whitel...\n      PUSH 0\t\t\tmodifi\n      DUP1 \t\t\t publi\n      PUSH 0\t\t\tintAct\n      PUSH 60\t\t\tNT\n      DUP5 \t\t\t < PUBLIC\n      DUP7 \t\t\ttimesta\n      SUB \t\t\tock.timestamp < PUBLIC_\n      SLT \t\t\t (block.timestamp < PUBLIC_MIN...\n      ISZERO \t\t\t if (block.timestamp < PUBLIC_...\n      PUSH [tag] 756\t\t\t if (block.timestamp < PUBLIC_...\n      JUMPI \t\t\t if (block.timestamp < PUBLIC_...\n      PUSH 0\t\t\t \n      DUP1 \t\t\t \n      REVERT \t\t\tESTAMP) {\\n  \n    tag 756\t\t\t if (block.timestamp < PUBLIC_...\n      JUMPDEST \t\t\t if (block.timestamp < PUBLIC_...\n      PUSH [tag] 757\t\t\ticMintNotActive();\\n        }\\...\n      DUP5 \t\t\t        }\n      PUSH [tag] 717\t\t\ticMintNotActive();\\n        }\\...\n      JUMP \t\t\ticMintNotActive();\\n        }\\...\n    tag 757\t\t\ticMintNotActive();\\n        }\\...\n      JUMPDEST \t\t\ticMintNotActive();\\n        }\\...\n      SWAP3 \t\t\tevert PublicMintNotActive();\\n...\n      POP \t\t\tevert PublicMintNotActive();\\n...\n      PUSH [tag] 758\t\t\t   modifier claimEnabled() {\\n...\n      PUSH 20\t\t\t  \n      DUP6 \t\t\td() {\\n   \n      ADD \t\t\tabled() {\\n        \n      PUSH [tag] 717\t\t\t   modifier claimEnabled() {\\n...\n      JUMP \t\t\t   modifier claimEnabled() {\\n...\n    tag 758\t\t\t   modifier claimEnabled() {\\n...\n      JUMPDEST \t\t\t   modifier claimEnabled() {\\n...\n      SWAP2 \t\t\t;\\n    }\\n\\n    modifier claim...\n      POP \t\t\t;\\n    }\\n\\n    modifier claim...\n      PUSH 40\t\t\t {\n      DUP5 \t\t\t_TIMESTAM\n      ADD \t\t\tTART_TIMESTAMP) {\\n\n      CALLDATALOAD \t\t\t< WHITELIST_START_TIMESTAMP) {...\n      SWAP1 \t\t\ttimestamp < WHITELIST_START_TI...\n      POP \t\t\ttimestamp < WHITELIST_START_TI...\n      SWAP3 \t\t\t) {\\n            revert Whitel...\n      POP \t\t\t) {\\n            revert Whitel...\n      SWAP3 \t\t\t) {\\n            revert Whitel...\n      POP \t\t\t) {\\n            revert Whitel...\n      SWAP3 \t\t\t) {\\n            revert Whitel...\n      JUMP \t\t\t) {\\n            revert Whitel...\n    tag 102\t\t\trevert ClaimNotActive();\\n    ...\n      JUMPDEST \t\t\trevert ClaimNotActive();\\n    ...\n      PUSH 0\t\t\tigible\n      DUP1 \t\t\trClaim\n      PUSH 40\t\t\tg.\n      DUP4 \t\t\tsByWallet\n      DUP6 \t\t\tllocati\n      SUB \t\t\taleAllocationsByWallet[\n      SLT \t\t\tpresaleAllocationsByWallet[msg...\n      ISZERO \t\t\t (_presaleAllocationsByWallet[...\n      PUSH [tag] 760\t\t\t (_presaleAllocationsByWallet[...\n      JUMPI \t\t\t (_presaleAllocationsByWallet[...\n      PUSH 0\t\t\t{\n      DUP1 \t\t\t0\n      REVERT \t\t\ter] == 0) {\\n\n    tag 760\t\t\t (_presaleAllocationsByWallet[...\n      JUMPDEST \t\t\t (_presaleAllocationsByWallet[...\n      POP \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\ttEligible();\\n        }\\n\n      CALLDATALOAD \t\t\ttEligible();\\n        }\\n\n      SWAP3 \t\t\ttEligible();\\n        }\\n\n      PUSH 20\t\t\te(\n      SWAP1 \t\t\tupplyIsAvailable(u\n      SWAP2 \t\t\tupplyIsAvailable(u\n      ADD \t\t\tupplyIsAvailable(u\n      CALLDATALOAD \t\t\t   modifier supplyIsAvailable(...\n      SWAP2 \t\t\t   modifier supplyIsAvailable(...\n      POP \t\t\t\n      JUMP \t\t\trevert ClaimNotActive();\\n    ...\n    tag 262\t\t\ttity >\\n            MAX_MINT_P...\n      JUMPDEST \t\t\ttity >\\n            MAX_MINT_P...\n      PUSH 4E487B71\t\t\tder != own\n      PUSH E0\t\t\tg.s\n      SHL \t\t\t  msg.sender != owne\n      PUSH 0\t\t\t \n      MSTORE \t\t\t            msg.sender != owne...\n      PUSH 21\t\t\t    \n      PUSH 4\t\t\t \n      MSTORE \t\t\t  ) {\\n         \n      PUSH 24\t\t\txMin\n      PUSH 0\t\t\ts\n      REVERT \t\t\t ExceedsMaxMint\n    tag 124\t\t\t;\\n        }\\n        _;\\n    ...\n      JUMPDEST \t\t\t;\\n        }\\n        _;\\n    ...\n      PUSH 20\t\t\te(\n      DUP2 \t\t\tvert NotEligible()\n      ADD \t\t\tvert NotEligible()\n      PUSH 4\t\t\t \n      DUP4 \t\t\t _;\\n    }\\n\\n  \n      LT \t\t\t _;\\n    }\\n\\n  \n      PUSH [tag] 766\t\t\t }\\n        _;\\n    }\\n\\n    m...\n      JUMPI \t\t\t }\\n        _;\\n    }\\n\\n    m...\n      PUSH 4E487B71\t\t\tn != msg.s\n      PUSH E0\t\t\tori\n      SHL \t\t\t(tx.origin != msg.se\n      PUSH 0\t\t\ti\n      MSTORE \t\t\t       if (tx.origin != msg.se...\n      PUSH 21\t\t\trt N\n      PUSH 4\t\t\te\n      MSTORE \t\t\t      revert No\n      PUSH 24\t\t\t\\n   \n      PUSH 0\t\t\t \n      REVERT \t\t\t\\n        }\\n    \n    tag 766\t\t\t }\\n        _;\\n    }\\n\\n    m...\n      JUMPDEST \t\t\t }\\n        _;\\n    }\\n\\n    m...\n      SWAP2 \t\t\tonstructor()\\n        Star\n      SWAP1 \t\t\tonstructor()\\n        Star\n      MSTORE \t\t\tonstructor()\\n        Star\n      SWAP1 \t\t\t;\\n        }\\n        _;\\n    ...\n      JUMP \t\t\t;\\n        }\\n        _;\\n    ...\n    tag 128\t\t\tper(START_TOKEN_ID)\\n        E...\n      JUMPDEST \t\t\tper(START_TOKEN_ID)\\n        E...\n      PUSH 0\t\t\te(msg.\n      PUSH 20\t\t\tnd\n      DUP3 \t\t\tyalty(msg\n      DUP5 \t\t\tDefault\n      SUB \t\t\t_setDefaultRoyalty(msg.\n      SLT \t\t\t    _setDefaultRoyalty(msg.sen...\n      ISZERO \t\t\t       _setDefaultRoyalty(msg....\n      PUSH [tag] 768\t\t\t       _setDefaultRoyalty(msg....\n      JUMPI \t\t\t       _setDefaultRoyalty(msg....\n      PUSH 0\t\t\t}\n      DUP1 \t\t\t \n      REVERT \t\t\t500);\\n    }\\n\n    tag 768\t\t\t       _setDefaultRoyalty(msg....\n      JUMPDEST \t\t\t       _setDefaultRoyalty(msg....\n      DUP2 \t\t\tuantity\\n \n      CALLDATALOAD \t\t\t    uint256 quantity\\n  \n      PUSH 4\t\t\tp\n      DUP2 \t\t\t     \n      LT \t\t\tl\\n        pa\n      PUSH [tag] 731\t\t\t   external\\n        payable\\n...\n      JUMPI \t\t\t   external\\n        payable\\n...\n      PUSH 0\t\t\td\n      DUP1 \t\t\t \n      REVERT \t\t\te\\n        dr\n    tag 133\t\t\t      fundsAttached(quantity)\\...\n      JUMPDEST \t\t\t      fundsAttached(quantity)\\...\n      PUSH 0\t\t\table(q\n      DUP1 \t\t\tntity)\n      PUSH 20\t\t\t[m\n      DUP4 \t\t\ttedPerWal\n      DUP6 \t\t\t     _m\n      SUB \t\t\t\\n        _mintedPerWall\n      SLT \t\t\t   {\\n        _mintedPerWallet...\n      ISZERO \t\t\tA\\n    {\\n        _mintedPerWa...\n      PUSH [tag] 771\t\t\tA\\n    {\\n        _mintedPerWa...\n      JUMPI \t\t\tA\\n    {\\n        _mintedPerWa...\n      PUSH 0\t\t\tq\n      DUP1 \t\t\t+\n      REVERT \t\t\tender] += qu\n    tag 771\t\t\tA\\n    {\\n        _mintedPerWa...\n      JUMPDEST \t\t\tA\\n    {\\n        _mintedPerWa...\n      DUP3 \t\t\ttity);\\n\\n \n      CALLDATALOAD \t\t\t.sender, quantity);\\n\\n  \n      PUSH FFFFFFFFFFFFFFFF\t\t\tMint(msg.sender, q\n      DUP1 \t\t\tnc\n      DUP3 \t\t\t\\n\\n    \n      GT \t\t\t  }\\n\\n    funct\n      ISZERO \t\t\t\\n    }\\n\\n    function mintWh...\n      PUSH [tag] 772\t\t\t\\n    }\\n\\n    function mintWh...\n      JUMPI \t\t\t\\n    }\\n\\n    function mintWh...\n      PUSH 0\t\t\tl\n      DUP1 \t\t\ti\n      REVERT \t\t\t mintWhiteli\n    tag 772\t\t\t\\n    }\\n\\n    function mintWh...\n      JUMPDEST \t\t\t\\n    }\\n\\n    function mintWh...\n      DUP2 \t\t\t  byte\n      DUP6 \t\t\tity,\\n    \n      ADD \t\t\tuantity,\\n        bytes\n      SWAP2 \t\t\t uint256 quantity,\\n        by...\n      POP \t\t\t uint256 quantity,\\n        by...\n      DUP6 \t\t\t\\n      \n      PUSH 1F\t\t\txter\n      DUP4 \t\t\t  \n      ADD \t\t\t       extern\n      SLT \t\t\t )\\n        external\\n       \n      PUSH [tag] 773\t\t\trHash_\\n    )\\n        externa...\n      JUMPI \t\t\trHash_\\n    )\\n        externa...\n      PUSH 0\t\t\t \n      DUP1 \t\t\t \n      REVERT \t\t\table\\n       \n    tag 773\t\t\trHash_\\n    )\\n        externa...\n      JUMPDEST \t\t\trHash_\\n    )\\n        externa...\n      DUP2 \t\t\t  \n      CALLDATALOAD \t\t\telistActive\\n    \n      DUP2 \t\t\tit\n      DUP2 \t\t\ted(qua\n      GT \t\t\tached(quantity\n      ISZERO \t\t\tAttached(quantity)\\n        ob...\n      PUSH [tag] 774\t\t\tAttached(quantity)\\n        ob...\n      JUMPI \t\t\tAttached(quantity)\\n        ob...\n      PUSH 0\t\t\ty\n      DUP1 \t\t\to\n      REVERT \t\t\t       obeys\n    tag 774\t\t\tAttached(quantity)\\n        ob...\n      JUMPDEST \t\t\tAttached(quantity)\\n        ob...\n      DUP7 \t\t\tntity)\\n\n      PUSH 20\t\t\te(\n      DUP3 \t\t\tIsAvai\n      PUSH 5\t\t\tp\n      SHL \t\t\t supplyIsAvail\n      DUP6 \t\t\t  \n      ADD \t\t\t\\n        supplyIsAvaila\n      ADD \t\t\tity)\\n        supplyIsAvailabl...\n      GT \t\t\tantity)\\n        supplyIsAvail...\n      ISZERO \t\t\t(quantity)\\n        supplyIsAv...\n      PUSH [tag] 744\t\t\t(quantity)\\n        supplyIsAv...\n      JUMPI \t\t\t(quantity)\\n        supplyIsAv...\n      PUSH 0\t\t\tn\n      DUP1 \t\t\to\n      REVERT \t\t\t    gloomin(\n    tag 719\t\t\terHash_) {\\n            revert...\n      JUMPDEST \t\t\terHash_) {\\n            revert...\n      DUP1 \t\t\tsender] += q\n      MLOAD \t\t\tsender] += q\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\tmsg.sender] += quantity;\\n    ...\n      DUP3 \t\t\tedPerWallet[msg.sender] += qua...\n      MSTORE \t\t\tedPerWallet[msg.sender] += qua...\n      PUSH 20\t\t\tg.se\n      DUP1 \t\t\thitelist(msg.sen\n      DUP3 \t\t\thitelist(msg.sen\n      ADD \t\t\thitelist(msg.sen\n      MLOAD \t\t\t MintWhitelist(msg.send\n      PUSH FFFFFFFFFFFFFFFF\t\t\t, quantity);\\n     \n      AND \t\t\temit MintWhitelist(msg.sender,...\n      SWAP1 \t\t\ttity);\\n\\n      \n      DUP4 \t\t\ttity);\\n\\n      \n      ADD \t\t\ttity);\\n\\n      \n      MSTORE \t\t\tr, quantity);\\n\\n        emit ...\n      PUSH 40\t\t\t    \n      DUP1 \t\t\trPresale(\\n      \n      DUP3 \t\t\trPresale(\\n      \n      ADD \t\t\trPresale(\\n      \n      MLOAD \t\t\tegisterPresale(\\n       \n      ISZERO \t\t\tction registerPresale(\\n      ...\n      ISZERO \t\t\t    function registerPresale(\\...\n      SWAP1 \t\t\tantity);\\n    }\n      DUP4 \t\t\tantity);\\n    }\n      ADD \t\t\tantity);\\n    }\n      MSTORE \t\t\tder, quantity);\\n    }\\n\\n    ...\n      PUSH 60\t\t\t    \n      SWAP1 \t\t\th_\\n    )\\n       \n      DUP2 \t\t\th_\\n    )\\n       \n      ADD \t\t\th_\\n    )\\n       \n      MLOAD \t\t\tmerHash_\\n    )\\n        \n      PUSH FFFFFF\t\t\tternal\\n \n      AND \t\t\tgloomerHash_\\n    )\\n        e...\n      SWAP2 \t\t\t        bytes3\n      ADD \t\t\t        bytes3\n      MSTORE \t\t\tntity,\\n        bytes32 gloome...\n      JUMP \t\t\terHash_) {\\n            revert...\n    tag 136\t\t\te\\n        dropEnabled\\n      ...\n      JUMPDEST \t\t\te\\n        dropEnabled\\n      ...\n      PUSH 20\t\t\tre\n      DUP1 \t\t\tcationsByWallet[msg.s\n      DUP3 \t\t\tcationsByWallet[msg.s\n      MSTORE \t\t\tcationsByWallet[msg.s\n      DUP3 \t\t\tresalesCount]\n      MLOAD \t\t\tresalesCount]\n      DUP3 \t\t\tntity;\\n        _pr\n      DUP3 \t\t\tntity;\\n        _pr\n      ADD \t\t\tntity;\\n        _pr\n      DUP2 \t\t\tnder;\\n\\n        emit Re\n      SWAP1 \t\t\tnder;\\n\\n        emit Re\n      MSTORE \t\t\tnder;\\n\\n        emit Re\n      PUSH 0\t\t\t ++_\n      SWAP2 \t\t\t ++_\n      SWAP1 \t\t\tre\n      DUP5 \t\t\t quantity);\\n   \n      DUP3 \t\t\t quantity);\\n   \n      ADD \t\t\t quantity);\\n   \n      SWAP1 \t\t\t quantity);\\n   \n      PUSH 40\t\t\tit\n      DUP6 \t\t\tg.sender, quantity\n      ADD \t\t\tg.sender, quantity\n      SWAP1 \t\t\tg.sender, quantity\n      DUP5 \t\t\t ++_\n    tag 778\t\t\te()\\n        external\\n       ...\n      JUMPDEST \t\t\te()\\n        external\\n       ...\n      DUP2 \t\t\tternal\n      DUP2 \t\t\t \n      LT \t\t\t    external\\n\n      ISZERO \t\t\te()\\n        external\\n       ...\n      PUSH [tag] 780\t\t\te()\\n        external\\n       ...\n      JUMPI \t\t\te()\\n        external\\n       ...\n      PUSH [tag] 781\t\t\t       eligibleForClaim\\n     ...\n      DUP4 \t\t\t(_p\n      DUP6 \t\t\tlletLi\n      MLOAD \t\t\tbeysWalletLim\n      PUSH [tag] 719\t\t\t       eligibleForClaim\\n     ...\n      JUMP \t\t\t       eligibleForClaim\\n     ...\n    tag 781\t\t\t       eligibleForClaim\\n     ...\n      JUMPDEST \t\t\t       eligibleForClaim\\n     ...\n      SWAP3 \t\t\t {\\n        uint\n      DUP5 \t\t\t {\\n        uint\n      ADD \t\t\t {\\n        uint\n      SWAP3 \t\t\t {\\n        uint\n      PUSH 80\t\t\tsend\n      SWAP3 \t\t\tllet[msg.sende\n      SWAP1 \t\t\tllet[msg.sende\n      SWAP3 \t\t\tllet[msg.sende\n      ADD \t\t\tllet[msg.sende\n      SWAP2 \t\t\tllet[msg.sende\n      PUSH 1\t\t\tb\n      ADD \t\t\tdropEnabl\n      PUSH [tag] 778\t\t\te()\\n        external\\n       ...\n      JUMP \t\t\te()\\n        external\\n       ...\n    tag 780\t\t\te()\\n        external\\n       ...\n      JUMPDEST \t\t\te()\\n        external\\n       ...\n      POP \t\t\t\n      SWAP1 \t\t\tcat\n      SWAP7 \t\t\tcat\n      SWAP6 \t\t\te\\n        dropEnabled\\n      ...\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\te\\n        dropEnabled\\n      ...\n    tag 145\t\t\tt[msg.sender];\\n        _minte...\n      JUMPDEST \t\t\tt[msg.sender];\\n        _minte...\n      PUSH 0\t\t\ttity;\\n\n      PUSH 20\t\t\t =\n      DUP3 \t\t\t[msg.send\n      DUP5 \t\t\tsByWall\n      SUB \t\t\ttionsByWallet[msg.sende\n      SLT \t\t\tlocationsByWallet[msg.sender] ...\n      ISZERO \t\t\teAllocationsByWallet[msg.sende...\n      PUSH [tag] 783\t\t\teAllocationsByWallet[msg.sende...\n      JUMPI \t\t\teAllocationsByWallet[msg.sende...\n      PUSH 0\t\t\tr\n      DUP1 \t\t\t \n      REVERT \t\t\t        _pre\n    tag 783\t\t\teAllocationsByWallet[msg.sende...\n      JUMPDEST \t\t\teAllocationsByWallet[msg.sende...\n      PUSH [tag] 731\t\t\tuantity;\\n        _mint(msg.se\n      DUP3 \t\t\tint(msg.s\n      PUSH [tag] 717\t\t\tuantity;\\n        _mint(msg.se\n      JUMP \t\t\tuantity;\\n        _mint(msg.se\n    tag 160\t\t\tity);\\n\\n        emit Gloomers...\n      JUMPDEST \t\t\tity);\\n\\n        emit Gloomers...\n      PUSH 20\t\t\trn\n      DUP1 \t\t\tunction _startTokenId\n      DUP3 \t\t\tunction _startTokenId\n      MSTORE \t\t\tunction _startTokenId\n      DUP3 \t\t\t     return s\n      MLOAD \t\t\t     return s\n      DUP3 \t\t\tallet[wallet];\\n   \n      DUP3 \t\t\tallet[wallet];\\n   \n      ADD \t\t\tallet[wallet];\\n   \n      DUP2 \t\t\tId();\\n    }\\n\\n    funct\n      SWAP1 \t\t\tId();\\n    }\\n\\n    funct\n      MSTORE \t\t\tId();\\n    }\\n\\n    funct\n      PUSH 0\t\t\turns\n      SWAP2 \t\t\turns\n      SWAP1 \t\t\trn\n      DUP5 \t\t\tride(ERC721A)\\n \n      DUP3 \t\t\tride(ERC721A)\\n \n      ADD \t\t\tride(ERC721A)\\n \n      SWAP1 \t\t\tride(ERC721A)\\n \n      PUSH 40\t\t\t\\n \n      DUP6 \t\t\t       internal\\n  \n      ADD \t\t\t       internal\\n  \n      SWAP1 \t\t\t       internal\\n  \n      DUP5 \t\t\turns\n    tag 786\t\t\ty)\\n    {\\n        return _bas...\n      JUMPDEST \t\t\ty)\\n    {\\n        return _bas...\n      DUP2 \t\t\t   ret\n      DUP2 \t\t\t \n      LT \t\t\t\\n        retu\n      ISZERO \t\t\ty)\\n    {\\n        return _bas...\n      PUSH [tag] 780\t\t\ty)\\n    {\\n        return _bas...\n      JUMPI \t\t\ty)\\n    {\\n        return _bas...\n      DUP4 \t\t\t  uint256 tok\n      MLOAD \t\t\t  uint256 tok\n      DUP4 \t\t\tnURI(\\n        uint256 toke\n      MSTORE \t\t\tnURI(\\n        uint256 toke\n      SWAP3 \t\t\tns (string memo\n      DUP5 \t\t\tns (string memo\n      ADD \t\t\tns (string memo\n      SWAP3 \t\t\tns (string memo\n      SWAP2 \t\t\tw override(I\n      DUP5 \t\t\tw override(I\n      ADD \t\t\tw override(I\n      SWAP2 \t\t\tw override(I\n      PUSH 1\t\t\tI\n      ADD \t\t\tTokenURI;\n      PUSH [tag] 786\t\t\ty)\\n    {\\n        return _bas...\n      JUMP \t\t\ty)\\n    {\\n        return _bas...\n    tag 180\t\t\t  return _baseURI();\\n        ...\n      JUMPDEST \t\t\t  return _baseURI();\\n        ...\n      PUSH 0\t\t\tevert \n      DUP1 \t\t\tIQuery\n      PUSH 0\t\t\trNonex\n      PUSH 60\t\t\tba\n      DUP5 \t\t\tring memo\n      DUP7 \t\t\t       \n      SUB \t\t\t }\\n        string memor\n      SLT \t\t\t     }\\n        string memory ...\n      ISZERO \t\t\t        }\\n        string memo...\n      PUSH [tag] 790\t\t\t        }\\n        string memo...\n      JUMPI \t\t\t        }\\n        string memo...\n      PUSH 0\t\t\tR\n      DUP1 \t\t\ts\n      REVERT \t\t\tI = _baseURI\n    tag 790\t\t\t        }\\n        string memo...\n      JUMPDEST \t\t\t        }\\n        string memo...\n      PUSH [tag] 791\t\t\tmory metadataPointerId = !rev\n      DUP5 \t\t\trId = !re\n      PUSH [tag] 717\t\t\tmory metadataPointerId = !rev\n      JUMP \t\t\tmory metadataPointerId = !rev\n    tag 791\t\t\tmory metadataPointerId = !rev\n      JUMPDEST \t\t\tmory metadataPointerId = !rev\n      SWAP6 \t\t\t string memory metadataPointer...\n      PUSH 20\t\t\t m\n      DUP6 \t\t\t\\n        string me\n      ADD \t\t\t\\n        string me\n      CALLDATALOAD \t\t\ting(tokenId);\\n        string ...\n      SWAP6 \t\t\ting(tokenId);\\n        string ...\n      POP \t\t\t\n      PUSH 40\t\t\ted\n      SWAP1 \t\t\t abi.encodePacked(\n      SWAP5 \t\t\t abi.encodePacked(\n      ADD \t\t\t abi.encodePacked(\n      CALLDATALOAD \t\t\t(\\n            abi.encodePacke...\n      SWAP4 \t\t\t(\\n            abi.encodePacke...\n      SWAP3 \t\t\t  return _baseURI();\\n        ...\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t  return _baseURI();\\n        ...\n    tag 193\t\t\tadataPointerId)\\n        );\\n ...\n      JUMPDEST \t\t\tadataPointerId)\\n        );\\n ...\n      PUSH 0\t\t\t= 0 ? \n      DUP1 \t\t\tsult :\n      PUSH 40\t\t\tld\n      DUP4 \t\t\ti(string \n      DUP6 \t\t\tetToken\n      SUB \t\t\ton setTokenUri(string c\n      SLT \t\t\tnction setTokenUri(string call...\n      ISZERO \t\t\t function setTokenUri(string c...\n      PUSH [tag] 793\t\t\t function setTokenUri(string c...\n      JUMPI \t\t\t function setTokenUri(string c...\n      PUSH 0\t\t\tR\n      DUP1 \t\t\te\n      REVERT \t\t\tbaseTokenURI\n    tag 793\t\t\t function setTokenUri(string c...\n      JUMPDEST \t\t\t function setTokenUri(string c...\n      PUSH [tag] 794\t\t\t {\\n        revealed = true;\\n...\n      DUP4 \t\t\t = true;\\n\n      PUSH [tag] 717\t\t\t {\\n        revealed = true;\\n...\n      JUMP \t\t\t {\\n        revealed = true;\\n...\n    tag 794\t\t\t {\\n        revealed = true;\\n...\n      JUMPDEST \t\t\t {\\n        revealed = true;\\n...\n      SWAP2 \t\t\t onlyOwner {\\n        revealed...\n      POP \t\t\t onlyOwner {\\n        revealed...\n      PUSH 20\t\t\t B\n      DUP4 \t\t\t       em\n      ADD \t\t\t_;\\n        emit Ba\n      CALLDATALOAD \t\t\t baseTokenURI_;\\n        emit ...\n      DUP1 \t\t\tt256)\n      ISZERO \t\t\type(uint256).\n      ISZERO \t\t\td(), (type(uint256).m\n      DUP2 \t\t\ttToke\n      EQ \t\t\ttartTokenId(), (type(uint256)....\n      PUSH [tag] 738\t\t\taUpdate(_startTokenId(), (type...\n      JUMPI \t\t\taUpdate(_startTokenId(), (type...\n      PUSH 0\t\t\t \n      DUP1 \t\t\t\\n\n      REVERT \t\t\t\\n    }\\n\\n    \n    tag 720\t\t\tddress receiver,\\n        uint...\n      JUMPDEST \t\t\tddress receiver,\\n        uint...\n      PUSH 4E487B71\t\t\tyOwner {\\n \n      PUSH E0\t\t\tc o\n      SHL \t\t\tublic onlyOwner {\\n  \n      PUSH 0\t\t\t)\n      MSTORE \t\t\tor\\n    ) public onlyOwner {\\n...\n      PUSH 41\t\t\talty\n      PUSH 4\t\t\tR\n      MSTORE \t\t\tDefaultRoyalty(\n      PUSH 24\t\t\ttor)\n      PUSH 0\t\t\te\n      REVERT \t\t\t feeNumerator);\n    tag 206\t\t\t function setDropStatus(DropSt...\n      JUMPDEST \t\t\t function setDropStatus(DropSt...\n      PUSH 0\t\t\topStat\n      DUP1 \t\t\t;\\n    \n      PUSH 0\t\t\t  emit\n      DUP1 \t\t\tewDrop\n      PUSH 80\t\t\tloo\n      DUP6 \t\t\tunction s\n      DUP8 \t\t\t }\\n\\n   \n      SUB \t\t\t\\n    }\\n\\n    function se\n      SLT \t\t\tus);\\n    }\\n\\n    function se...\n      ISZERO \t\t\ttatus);\\n    }\\n\\n    function...\n      PUSH [tag] 798\t\t\ttatus);\\n    }\\n\\n    function...\n      JUMPI \t\t\ttatus);\\n    }\\n\\n    function...\n      PUSH 0\t\t\t2\n      DUP1 \t\t\te\n      REVERT \t\t\tash(bytes32 \n    tag 798\t\t\ttatus);\\n    }\\n\\n    function...\n      JUMPDEST \t\t\ttatus);\\n    }\\n\\n    function...\n      PUSH [tag] 799\t\t\tonlyOwner {\\n        gloomerHa\n      DUP6 \t\t\t gloomerH\n      PUSH [tag] 717\t\t\tonlyOwner {\\n        gloomerHa\n      JUMP \t\t\tonlyOwner {\\n        gloomerHa\n    tag 799\t\t\tonlyOwner {\\n        gloomerHa\n      JUMPDEST \t\t\tonlyOwner {\\n        gloomerHa\n      SWAP4 \t\t\t_) public onlyOwner {\\n       ...\n      POP \t\t\t_) public onlyOwner {\\n       ...\n      PUSH [tag] 800\t\t\t    }\\n\\n    function withdraw...\n      PUSH 20\t\t\tli\n      DUP7 \t\t\thdraw() p\n      ADD \t\t\t withdraw() public\n      PUSH [tag] 717\t\t\t    }\\n\\n    function withdraw...\n      JUMP \t\t\t    }\\n\\n    function withdraw...\n    tag 800\t\t\t    }\\n\\n    function withdraw...\n      JUMPDEST \t\t\t    }\\n\\n    function withdraw...\n      SWAP3 \t\t\tmerHash_;\\n    }\\n\\n    functi...\n      POP \t\t\tmerHash_;\\n    }\\n\\n    functi...\n      PUSH 40\t\t\tr(\n      DUP6 \t\t\ter).trans\n      ADD \t\t\tsender).transfer(a\n      CALLDATALOAD \t\t\t payable(msg.sender).transfer(...\n      SWAP2 \t\t\t {\\n        payable(msg.sender...\n      POP \t\t\t {\\n        payable(msg.sender...\n      PUSH 60\t\t\tl \n      DUP6 \t\t\tk() exter\n      ADD \t\t\tlback() external p\n      CALLDATALOAD \t\t\t   }\\n\\n    fallback() externa...\n      PUSH FFFFFFFFFFFFFFFF\t\t\tve() external paya\n      DUP1 \t\t\tpp\n      DUP3 \t\t\tction \n      GT \t\t\tfunction suppo\n      ISZERO \t\t\t   function supportsInterface(...\n      PUSH [tag] 801\t\t\t   function supportsInterface(...\n      JUMPI \t\t\t   function supportsInterface(...\n      PUSH 0\t\t\t\\n\n      DUP1 \t\t\tc\n      REVERT \t\t\tInterface(\\n \n    tag 801\t\t\t   function supportsInterface(...\n      JUMPDEST \t\t\t   function supportsInterface(...\n      DUP2 \t\t\tic vie\n      DUP8 \t\t\t\\n    ) pu\n      ADD \t\t\tceId\\n    ) public view\n      SWAP2 \t\t\ts4 interfaceId\\n    ) public v...\n      POP \t\t\ts4 interfaceId\\n    ) public v...\n      DUP8 \t\t\tRC2981)\n      PUSH 1F\t\t\t721A\n      DUP4 \t\t\t E\n      ADD \t\t\t21A, ERC721A,\n      SLT \t\t\tERC721A, ERC721A, ERC2981) \n      PUSH [tag] 802\t\t\toverride(IERC721A, ERC721A, ER...\n      JUMPI \t\t\toverride(IERC721A, ERC721A, ER...\n      PUSH 0\t\t\t \n      DUP1 \t\t\to\n      REVERT \t\t\trns (bool) {\n    tag 802\t\t\toverride(IERC721A, ERC721A, ER...\n      JUMPDEST \t\t\toverride(IERC721A, ERC721A, ER...\n      DUP2 \t\t\tA.\n      CALLDATALOAD \t\t\t       ERC721A.s\n      DUP2 \t\t\tte\n      DUP2 \t\t\te(\n      GT \t\t\tface(inter\n      ISZERO \t\t\tterface(interfaceId) ||\\n     ...\n      PUSH [tag] 804\t\t\tterface(interfaceId) ||\\n     ...\n      JUMPI \t\t\tterface(interfaceId) ||\\n     ...\n      PUSH [tag] 804\t\t\teId) ||\\n          \n      PUSH [tag] 720\t\t\teId) ||\\n          \n      JUMP \t\t\teId) ||\\n          \n    tag 804\t\t\teId) ||\\n          \n      JUMPDEST \t\t\teId) ||\\n          \n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 1F\t\t\tce\n      DUP3 \t\t\t\n      ADD \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 3F\t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP4 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      DUP2 \t\t\t\n      DUP4 \t\t\t\n      LT \t\t\t\n      OR \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 806\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 806\t\t\t\n      PUSH [tag] 720\t\t\t\n      JUMP \t\t\t\n    tag 806\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP3 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      DUP11 \t\t\t\n      PUSH 20\t\t\t\n      DUP5 \t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      ADD \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 807\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 807\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      PUSH 20\t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      CALLDATACOPY \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP5 \t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      SWAP6 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t function setDropStatus(DropSt...\n      SWAP6 \t\t\t function setDropStatus(DropSt...\n      SWAP2 \t\t\t function setDropStatus(DropSt...\n      SWAP5 \t\t\t function setDropStatus(DropSt...\n      POP \t\t\t function setDropStatus(DropSt...\n      SWAP3 \t\t\t function setDropStatus(DropSt...\n      POP \t\t\t function setDropStatus(DropSt...\n      JUMP \t\t\t function setDropStatus(DropSt...\n    tag 213\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 80\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 251\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 719\t\t\t\n      JUMP \t\t\t\n    tag 231\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      DUP6 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 813\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 813\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 814\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 717\t\t\t\n      JUMP \t\t\t\n    tag 814\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 815\t\t\t\n      PUSH 20\t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 717\t\t\t\n      JUMP \t\t\t\n    tag 815\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 721\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4E487B71\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 11\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 272\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 251\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 251\t\t\t\n      PUSH [tag] 721\t\t\t\n      JUMP \t\t\t\n    tag 282\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 251\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 251\t\t\t\n      PUSH [tag] 721\t\t\t\n      JUMP \t\t\t\n    tag 297\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SHR \t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 825\t\t\t\n      JUMPI \t\t\t\n      PUSH 7F\t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n    tag 825\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      LT \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 826\t\t\t\n      JUMPI \t\t\t\n      PUSH 4E487B71\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 22\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 826\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 723\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 427\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      PUSH 1F\t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      PUSH 5\t\t\t\n      SHR \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      DUP6 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 830\t\t\t\n      JUMPI \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n    tag 830\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1F\t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      PUSH 5\t\t\t\n      SHR \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n    tag 831\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 833\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      SSTORE \t\t\t\n      PUSH 1\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 831\t\t\t\n      JUMP \t\t\t\n    tag 833\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 290\t\t\t\n      JUMPDEST \t\t\t\n      PUSH FFFFFFFFFFFFFFFF\t\t\t\n      DUP4 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 837\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 837\t\t\t\n      PUSH [tag] 720\t\t\t\n      JUMP \t\t\t\n    tag 837\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 838\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 839\t\t\t\n      DUP4 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 297\t\t\t\n      JUMP \t\t\t\n    tag 839\t\t\t\n      JUMPDEST \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 723\t\t\t\n      JUMP \t\t\t\n    tag 838\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 1F\t\t\t\n      DUP5 \t\t\t\n      GT \t\t\t\n      PUSH 1\t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 841\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP6 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 842\t\t\t\n      JUMPI \t\t\t\n      POP \t\t\t\n      DUP4 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n    tag 842\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      PUSH 3\t\t\t\n      DUP8 \t\t\t\n      SWAP1 \t\t\t\n      SHL \t\t\t\n      SHR \t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      DUP7 \t\t\t\n      SWAP1 \t\t\t\n      SHL \t\t\t\n      OR \t\t\t\n      DUP4 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 833\t\t\t\n      JUMP \t\t\t\n    tag 841\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      KECCAK256 \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n    tag 845\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      DUP2 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 847\t\t\t\n      JUMPI \t\t\t\n      DUP7 \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      DUP3 \t\t\t\n      SSTORE \t\t\t\n      PUSH 20\t\t\t\n      SWAP5 \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      SWAP5 \t\t\t\n      PUSH 1\t\t\t\n      SWAP1 \t\t\t\n      SWAP3 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 845\t\t\t\n      JUMP \t\t\t\n    tag 847\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      DUP7 \t\t\t\n      DUP3 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 848\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      PUSH F8\t\t\t\n      DUP9 \t\t\t\n      PUSH 3\t\t\t\n      SHL \t\t\t\n      AND \t\t\t\n      SHR \t\t\t\n      NOT \t\t\t\n      DUP5 \t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      SSTORE \t\t\t\n    tag 848\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 1\t\t\t\n      DUP6 \t\t\t\n      PUSH 1\t\t\t\n      SHL \t\t\t\n      ADD \t\t\t\n      DUP4 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 356\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      MUL \t\t\t\n      DUP2 \t\t\t\n      ISZERO \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      DIV \t\t\t\n      DUP5 \t\t\t\n      EQ \t\t\t\n      OR \t\t\t\n      PUSH [tag] 251\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 251\t\t\t\n      PUSH [tag] 721\t\t\t\n      JUMP \t\t\t\n    tag 377\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 1\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 855\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 855\t\t\t\n      PUSH [tag] 721\t\t\t\n      JUMP \t\t\t\n    tag 855\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 1\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 420\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 857\t\t\t\n      JUMPI \t\t\t\n      PUSH 4E487B71\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 12\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 857\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      DIV \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 725\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      PUSH 20\t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      MCOPY \t\t\t\n      PUSH 0\t\t\t\n      SWAP4 \t\t\t\n      ADD \t\t\t\n      SWAP3 \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 540\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 454\t\t\t\n      PUSH [tag] 861\t\t\t\n      DUP4 \t\t\t\n      DUP7 \t\t\t\n      PUSH [tag] 725\t\t\t\n      JUMP \t\t\t\n    tag 861\t\t\t\n      JUMPDEST \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 725\t\t\t\n      JUMP \t\t\t\n    tag 602\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 865\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 865\t\t\t\n      PUSH [tag] 721\t\t\t\n      JUMP \t\t\t\n    tag 865\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 680\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP6 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      DUP5 \t\t\t\n      AND \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP4 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 80\t\t\t\n      PUSH 60\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 867\t\t\t\n      SWAP1 \t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 718\t\t\t\n      JUMP \t\t\t\n    tag 867\t\t\t\n      JUMPDEST \t\t\t\n      SWAP7 \t\t\t\n      SWAP6 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 683\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 869\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 869\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 731\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 716\t\t\t\n      JUMP \t\t\t\n    .data\n  CF74D66FE868420D434BE9B09CA8E38CFEA32209A70393FE7659CF3EB6C10014:\n    68747470733a2f2f697066732e676c6f6f6d746f6b656e2e78797a2f697066732f62616679626569646e726761677a726a76617672736a746e7a36716871766e6c626b7a337668357133356766676b6a323336796c737877706d7379\n"
}